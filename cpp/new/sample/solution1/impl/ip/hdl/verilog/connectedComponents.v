// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module connectedComponents (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sureForeground_address0,
        sureForeground_ce0,
        sureForeground_q0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [17:0] sureForeground_address0;
output   sureForeground_ce0;
input  [0:0] sureForeground_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[17:0] sureForeground_address0;
reg sureForeground_ce0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [17:0] markersGen_address0;
reg    markersGen_ce0;
reg    markersGen_we0;
wire   [7:0] markersGen_d0;
wire   [7:0] markersGen_q0;
reg   [17:0] markersGen_address1;
reg    markersGen_ce1;
reg    markersGen_we1;
reg   [7:0] markersGen_d1;
wire   [7:0] markersGen_q1;
wire   [31:0] equivLabels_parent_q0;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state20;
reg   [0:0] sureForeground_load_1_reg_922;
wire   [31:0] i_cast8_fu_288_p1;
reg   [31:0] i_cast8_reg_698;
wire    ap_CS_fsm_state2;
wire   [9:0] i_15_fu_298_p2;
reg   [9:0] i_15_reg_706;
wire   [19:0] tmp_175_cast_fu_312_p1;
reg   [19:0] tmp_175_cast_reg_711;
wire   [0:0] exitcond5_fu_292_p2;
wire   [9:0] j_13_fu_327_p2;
wire    ap_CS_fsm_state3;
wire   [9:0] i_16_fu_354_p2;
reg   [9:0] i_16_reg_734;
wire    ap_CS_fsm_state4;
wire   [19:0] tmp_177_cast_fu_368_p1;
reg   [19:0] tmp_177_cast_reg_739;
wire   [0:0] exitcond3_fu_348_p2;
wire   [0:0] tmp_s_fu_372_p2;
reg   [0:0] tmp_s_reg_748;
wire  signed [19:0] tmp_179_cast_fu_392_p1;
reg  signed [19:0] tmp_179_cast_reg_753;
wire   [9:0] j_15_fu_402_p2;
reg   [9:0] j_15_reg_761;
wire    ap_CS_fsm_state5;
reg   [17:0] markersGen_addr_1_reg_766;
wire   [0:0] exitcond2_fu_396_p2;
reg   [17:0] markersGen_addr_2_reg_771;
reg   [0:0] sureForeground_load_reg_782;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_145_fu_433_p2;
reg   [0:0] tmp_145_reg_786;
wire   [7:0] rootLeft_3_fu_459_p3;
reg   [7:0] rootLeft_3_reg_796;
wire    ap_CS_fsm_state7;
wire   [31:0] rootLeft_3_cast_fu_466_p1;
reg   [31:0] rootLeft_3_cast_reg_802;
wire   [7:0] rootAbove_3_fu_470_p3;
reg   [7:0] rootAbove_3_reg_807;
wire   [31:0] rootAbove_3_cast_fu_477_p1;
reg   [31:0] rootAbove_3_cast_reg_813;
wire   [0:0] tmp_149_fu_487_p2;
reg   [0:0] tmp_149_reg_818;
wire   [0:0] or_cond6_fu_537_p2;
reg   [0:0] or_cond6_reg_822;
wire    ap_CS_fsm_state8;
wire   [0:0] or_cond7_fu_543_p2;
reg   [0:0] or_cond7_reg_826;
wire  signed [63:0] tmp_189_cast_fu_558_p1;
reg  signed [63:0] tmp_189_cast_reg_830;
wire    ap_CS_fsm_state9;
reg   [17:0] equivLabels_parent_a_2_reg_835;
reg   [17:0] equivLabels_child_ad_1_reg_843;
wire   [0:0] tmp_160_fu_563_p2;
wire  signed [63:0] tmp_190_cast_fu_578_p1;
reg  signed [63:0] tmp_190_cast_reg_849;
wire    ap_CS_fsm_state11;
reg   [17:0] equivLabels_parent_a_3_reg_854;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_162_fu_583_p2;
wire   [0:0] tmp_163_fu_589_p2;
reg   [0:0] tmp_163_reg_872;
wire   [31:0] equivLabels_child_q0;
reg   [31:0] equivLabels_child_lo_reg_876;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_164_fu_595_p2;
reg   [0:0] tmp_164_reg_881;
wire   [0:0] tmp_165_fu_601_p2;
reg   [0:0] tmp_165_reg_885;
wire   [9:0] i_17_fu_624_p2;
reg   [9:0] i_17_reg_892;
wire    ap_CS_fsm_state15;
wire   [19:0] tmp_182_cast_fu_638_p1;
reg   [19:0] tmp_182_cast_reg_897;
wire   [0:0] exitcond1_fu_618_p2;
wire   [9:0] j_16_fu_648_p2;
reg   [9:0] j_16_reg_906;
wire    ap_CS_fsm_state16;
reg   [17:0] markersGen_addr_3_reg_911;
wire   [0:0] exitcond_fu_642_p2;
wire    ap_CS_fsm_state17;
wire   [31:0] root_fu_669_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg   [17:0] equivLabels_parent_address0;
reg    equivLabels_parent_ce0;
reg    equivLabels_parent_we0;
reg   [31:0] equivLabels_parent_d0;
reg   [17:0] equivLabels_child_address0;
reg    equivLabels_child_ce0;
reg    equivLabels_child_we0;
reg   [17:0] equivLabels_child_address1;
reg    equivLabels_child_ce1;
reg    equivLabels_child_we1;
wire   [31:0] equivLabels_child_d1;
wire   [31:0] equivLabels_child_q1;
reg   [9:0] i_reg_171;
wire   [0:0] exitcond4_fu_321_p2;
reg   [9:0] j_reg_182;
reg   [9:0] i1_reg_193;
reg   [9:0] j2_reg_204;
wire    ap_CS_fsm_state14;
reg   [31:0] rootLeft_reg_216;
reg   [31:0] rootAbove_reg_227;
reg   [7:0] ap_phi_mux_storemerge1_phi_fu_241_p6;
reg   [7:0] storemerge1_reg_238;
wire   [7:0] tmp_180_fu_613_p1;
reg   [9:0] i3_reg_250;
reg   [9:0] j4_reg_261;
wire   [0:0] tmp_157_fu_687_p2;
reg   [31:0] root1_reg_272;
wire   [63:0] tmp_180_cast_fu_342_p1;
wire  signed [63:0] tmp_183_cast_fu_417_p1;
wire   [63:0] tmp_184_cast_fu_427_p1;
wire   [63:0] tmp_185_cast_fu_454_p1;
wire  signed [63:0] tmp_187_cast_fu_511_p1;
wire   [63:0] tmp_186_cast_fu_663_p1;
wire  signed [63:0] tmp_188_cast_fu_682_p1;
reg   [31:0] label_fu_38;
wire   [31:0] label_1_fu_516_p2;
wire   [7:0] tmp_175_fu_693_p1;
wire   [18:0] tmp_fu_304_p3;
wire   [19:0] tmp_142_cast_fu_333_p1;
wire   [19:0] tmp_158_fu_337_p2;
wire   [18:0] tmp_153_fu_360_p3;
wire   [9:0] tmp_141_fu_378_p2;
wire   [18:0] tmp_156_fu_384_p3;
wire   [19:0] tmp_143_cast_fu_408_p1;
wire   [19:0] tmp_161_fu_412_p2;
wire   [19:0] tmp_167_fu_422_p2;
wire   [9:0] tmp_146_fu_439_p2;
wire  signed [19:0] tmp_147_cast_fu_445_p1;
wire   [19:0] tmp_168_fu_449_p2;
wire   [7:0] tmp_148_fu_481_p2;
wire   [19:0] tmp_171_fu_502_p1;
wire   [19:0] tmp_172_fu_506_p2;
wire   [0:0] tmp_154_fu_527_p2;
wire   [0:0] tmp_155_fu_532_p2;
wire   [19:0] tmp_176_fu_549_p1;
wire   [19:0] tmp_177_fu_553_p2;
wire   [19:0] tmp_178_fu_569_p1;
wire   [19:0] tmp_179_fu_573_p2;
wire   [18:0] tmp_159_fu_630_p3;
wire   [19:0] tmp_150_cast_fu_654_p1;
wire   [19:0] tmp_169_fu_658_p2;
wire   [19:0] tmp_173_fu_673_p1;
wire   [19:0] tmp_174_fu_677_p2;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

connectedComponents_markersGen #(
    .DataWidth( 8 ),
    .AddressRange( 262144 ),
    .AddressWidth( 18 ))
markersGen_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(markersGen_address0),
    .ce0(markersGen_ce0),
    .we0(markersGen_we0),
    .d0(markersGen_d0),
    .q0(markersGen_q0),
    .address1(markersGen_address1),
    .ce1(markersGen_ce1),
    .we1(markersGen_we1),
    .d1(markersGen_d1),
    .q1(markersGen_q1)
);

connectedComponents_equivLabels_parent #(
    .DataWidth( 32 ),
    .AddressRange( 262144 ),
    .AddressWidth( 18 ))
equivLabels_parent_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(equivLabels_parent_address0),
    .ce0(equivLabels_parent_ce0),
    .we0(equivLabels_parent_we0),
    .d0(equivLabels_parent_d0),
    .q0(equivLabels_parent_q0)
);

connectedComponents_equivLabels_child #(
    .DataWidth( 32 ),
    .AddressRange( 262144 ),
    .AddressWidth( 18 ))
equivLabels_child_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(equivLabels_child_address0),
    .ce0(equivLabels_child_ce0),
    .we0(equivLabels_child_we0),
    .d0(32'd0),
    .q0(equivLabels_child_q0),
    .address1(equivLabels_child_address1),
    .ce1(equivLabels_child_ce1),
    .we1(equivLabels_child_we1),
    .d1(equivLabels_child_d1),
    .q1(equivLabels_child_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i1_reg_193 <= i_16_reg_734;
    end else if (((exitcond5_fu_292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_reg_193 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i3_reg_250 <= 10'd0;
    end else if (((exitcond_fu_642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i3_reg_250 <= i_17_reg_892;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_171 <= i_15_reg_706;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_171 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j2_reg_204 <= j_15_reg_761;
    end else if (((exitcond3_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j2_reg_204 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_618_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        j4_reg_261 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & ((tmp_157_fu_687_p2 == 1'd1) | (sureForeground_load_1_reg_922 == 1'd0)))) begin
        j4_reg_261 <= j_16_reg_906;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_182 <= 10'd0;
    end else if (((exitcond4_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_182 <= j_13_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_149_fu_487_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        label_fu_38 <= label_1_fu_516_p2;
    end else if (((exitcond5_fu_292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        label_fu_38 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_157_fu_687_p2 == 1'd0) & (sureForeground_load_1_reg_922 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        root1_reg_272 <= equivLabels_parent_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        root1_reg_272 <= root_fu_669_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_160_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        rootAbove_reg_227 <= rootAbove_3_cast_reg_813;
    end else if (((tmp_162_fu_583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        rootAbove_reg_227 <= equivLabels_parent_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond6_fu_537_p2 == 1'd0) & (or_cond7_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        rootLeft_reg_216 <= rootLeft_3_cast_reg_802;
    end else if (((tmp_160_fu_563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        rootLeft_reg_216 <= equivLabels_parent_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond7_fu_543_p2 == 1'd0) & (or_cond6_fu_537_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        storemerge1_reg_238 <= rootAbove_3_reg_807;
    end else if (((or_cond6_reg_822 == 1'd0) & (tmp_149_reg_818 == 1'd0) & (or_cond7_reg_826 == 1'd1) & (sureForeground_load_reg_782 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        storemerge1_reg_238 <= tmp_180_fu_613_p1;
    end else if (((or_cond6_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        storemerge1_reg_238 <= rootLeft_3_reg_796;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_160_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        equivLabels_child_ad_1_reg_843 <= tmp_189_cast_reg_830;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        equivLabels_child_lo_reg_876 <= equivLabels_child_q0;
        tmp_164_reg_881 <= tmp_164_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        equivLabels_parent_a_2_reg_835 <= tmp_189_cast_fu_558_p1;
        tmp_189_cast_reg_830 <= tmp_189_cast_fu_558_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        equivLabels_parent_a_3_reg_854 <= tmp_190_cast_fu_578_p1;
        tmp_190_cast_reg_849 <= tmp_190_cast_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_15_reg_706 <= i_15_fu_298_p2;
        i_cast8_reg_698[9 : 0] <= i_cast8_fu_288_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_16_reg_734 <= i_16_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_17_reg_892 <= i_17_fu_624_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_15_reg_761 <= j_15_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_16_reg_906 <= j_16_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_396_p2 == 1'd0) & (tmp_s_reg_748 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        markersGen_addr_1_reg_766 <= tmp_183_cast_fu_417_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        markersGen_addr_2_reg_771 <= tmp_184_cast_fu_427_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_642_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        markersGen_addr_3_reg_911 <= tmp_186_cast_fu_663_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        or_cond6_reg_822 <= or_cond6_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond6_fu_537_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        or_cond7_reg_826 <= or_cond7_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rootAbove_3_cast_reg_813[7 : 0] <= rootAbove_3_cast_fu_477_p1[7 : 0];
        rootAbove_3_reg_807 <= rootAbove_3_fu_470_p3;
        rootLeft_3_cast_reg_802[7 : 0] <= rootLeft_3_cast_fu_466_p1[7 : 0];
        rootLeft_3_reg_796 <= rootLeft_3_fu_459_p3;
        tmp_149_reg_818 <= tmp_149_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        sureForeground_load_1_reg_922 <= sureForeground_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sureForeground_load_reg_782 <= sureForeground_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((sureForeground_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_145_reg_786 <= tmp_145_fu_433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_162_fu_583_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_163_reg_872 <= tmp_163_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_164_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_165_reg_885 <= tmp_165_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_175_cast_reg_711[18 : 9] <= tmp_175_cast_fu_312_p1[18 : 9];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_177_cast_reg_739[18 : 9] <= tmp_177_cast_fu_368_p1[18 : 9];
        tmp_179_cast_reg_753[19 : 9] <= tmp_179_cast_fu_392_p1[19 : 9];
        tmp_s_reg_748 <= tmp_s_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_618_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        tmp_182_cast_reg_897[18 : 9] <= tmp_182_cast_fu_638_p1[18 : 9];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond1_fu_618_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond6_reg_822 == 1'd0) & (tmp_149_reg_818 == 1'd0) & (or_cond7_reg_826 == 1'd1) & (sureForeground_load_reg_782 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_phi_mux_storemerge1_phi_fu_241_p6 = tmp_180_fu_613_p1;
    end else begin
        ap_phi_mux_storemerge1_phi_fu_241_p6 = storemerge1_reg_238;
    end
end

always @ (*) begin
    if (((exitcond1_fu_618_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        equivLabels_child_address0 = equivLabels_child_ad_1_reg_843;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        equivLabels_child_address0 = tmp_180_cast_fu_342_p1;
    end else begin
        equivLabels_child_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        equivLabels_child_address1 = equivLabels_child_ad_1_reg_843;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        equivLabels_child_address1 = tmp_190_cast_reg_849;
    end else begin
        equivLabels_child_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state12))) begin
        equivLabels_child_ce0 = 1'b1;
    end else begin
        equivLabels_child_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        equivLabels_child_ce1 = 1'b1;
    end else begin
        equivLabels_child_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        equivLabels_child_we0 = 1'b1;
    end else begin
        equivLabels_child_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_165_reg_885 == 1'd0) & (tmp_164_reg_881 == 1'd0) & (tmp_163_reg_872 == 1'd0) & (or_cond6_reg_822 == 1'd0) & (tmp_149_reg_818 == 1'd0) & (or_cond7_reg_826 == 1'd1) & (sureForeground_load_reg_782 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        equivLabels_child_we1 = 1'b1;
    end else begin
        equivLabels_child_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        equivLabels_parent_address0 = tmp_188_cast_fu_682_p1;
    end else if (((tmp_164_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        equivLabels_parent_address0 = equivLabels_parent_a_2_reg_835;
    end else if (((tmp_164_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        equivLabels_parent_address0 = equivLabels_parent_a_3_reg_854;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        equivLabels_parent_address0 = tmp_190_cast_fu_578_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        equivLabels_parent_address0 = tmp_189_cast_fu_558_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        equivLabels_parent_address0 = tmp_187_cast_fu_511_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        equivLabels_parent_address0 = tmp_180_cast_fu_342_p1;
    end else begin
        equivLabels_parent_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | ((tmp_164_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_164_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        equivLabels_parent_ce0 = 1'b1;
    end else begin
        equivLabels_parent_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_164_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        equivLabels_parent_d0 = rootAbove_reg_227;
    end else if (((tmp_164_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        equivLabels_parent_d0 = rootLeft_reg_216;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        equivLabels_parent_d0 = label_fu_38;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        equivLabels_parent_d0 = i_cast8_reg_698;
    end else begin
        equivLabels_parent_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond4_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_164_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_164_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_149_fu_487_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        equivLabels_parent_we0 = 1'b1;
    end else begin
        equivLabels_parent_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        markersGen_address0 = markersGen_addr_3_reg_911;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        markersGen_address0 = markersGen_addr_2_reg_771;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        markersGen_address0 = tmp_185_cast_fu_454_p1;
    end else begin
        markersGen_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        markersGen_address1 = markersGen_addr_3_reg_911;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        markersGen_address1 = markersGen_addr_2_reg_771;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        markersGen_address1 = markersGen_addr_1_reg_766;
    end else begin
        markersGen_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        markersGen_ce0 = 1'b1;
    end else begin
        markersGen_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6))) begin
        markersGen_ce1 = 1'b1;
    end else begin
        markersGen_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        markersGen_d1 = tmp_175_fu_693_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        markersGen_d1 = ap_phi_mux_storemerge1_phi_fu_241_p6;
    end else begin
        markersGen_d1 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_149_fu_487_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        markersGen_we0 = 1'b1;
    end else begin
        markersGen_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_157_fu_687_p2 == 1'd1) & (sureForeground_load_1_reg_922 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((tmp_149_reg_818 == 1'd0) & (sureForeground_load_reg_782 == 1'd1) & (1'b1 == ap_CS_fsm_state14)))) begin
        markersGen_we1 = 1'b1;
    end else begin
        markersGen_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sureForeground_address0 = tmp_186_cast_fu_663_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sureForeground_address0 = tmp_184_cast_fu_427_p1;
    end else begin
        sureForeground_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state5))) begin
        sureForeground_ce0 = 1'b1;
    end else begin
        sureForeground_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond5_fu_292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond4_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond3_fu_348_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond2_fu_396_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((sureForeground_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((tmp_149_fu_487_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((or_cond6_fu_537_p2 == 1'd0) & (or_cond7_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((tmp_160_fu_563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((tmp_163_fu_589_p2 == 1'd1) & (tmp_162_fu_583_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((tmp_163_fu_589_p2 == 1'd0) & (tmp_162_fu_583_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state15 : begin
            if (((exitcond1_fu_618_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((exitcond_fu_642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((sureForeground_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & ((tmp_157_fu_687_p2 == 1'd1) | (sureForeground_load_1_reg_922 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign equivLabels_child_d1 = (equivLabels_child_lo_reg_876 + 32'd1);

assign exitcond1_fu_618_p2 = ((i3_reg_250 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond2_fu_396_p2 = ((j2_reg_204 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond3_fu_348_p2 = ((i1_reg_193 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond4_fu_321_p2 = ((j_reg_182 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond5_fu_292_p2 = ((i_reg_171 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond_fu_642_p2 = ((j4_reg_261 == 10'd512) ? 1'b1 : 1'b0);

assign i_15_fu_298_p2 = (i_reg_171 + 10'd1);

assign i_16_fu_354_p2 = (i1_reg_193 + 10'd1);

assign i_17_fu_624_p2 = (i3_reg_250 + 10'd1);

assign i_cast8_fu_288_p1 = i_reg_171;

assign j_13_fu_327_p2 = (j_reg_182 + 10'd1);

assign j_15_fu_402_p2 = (j2_reg_204 + 10'd1);

assign j_16_fu_648_p2 = (j4_reg_261 + 10'd1);

assign label_1_fu_516_p2 = (32'd1 + label_fu_38);

assign markersGen_d0 = label_fu_38[7:0];

assign or_cond6_fu_537_p2 = (tmp_155_fu_532_p2 & tmp_154_fu_527_p2);

assign or_cond7_fu_543_p2 = (tmp_155_fu_532_p2 | tmp_154_fu_527_p2);

assign rootAbove_3_cast_fu_477_p1 = rootAbove_3_fu_470_p3;

assign rootAbove_3_fu_470_p3 = ((tmp_s_reg_748[0:0] === 1'b1) ? markersGen_q1 : 8'd0);

assign rootLeft_3_cast_fu_466_p1 = rootLeft_3_fu_459_p3;

assign rootLeft_3_fu_459_p3 = ((tmp_145_reg_786[0:0] === 1'b1) ? markersGen_q0 : 8'd0);

assign root_fu_669_p1 = markersGen_q0;

assign tmp_141_fu_378_p2 = ($signed(i1_reg_193) + $signed(10'd1023));

assign tmp_142_cast_fu_333_p1 = j_reg_182;

assign tmp_143_cast_fu_408_p1 = j2_reg_204;

assign tmp_145_fu_433_p2 = ((j2_reg_204 != 10'd0) ? 1'b1 : 1'b0);

assign tmp_146_fu_439_p2 = ($signed(j2_reg_204) + $signed(10'd1023));

assign tmp_147_cast_fu_445_p1 = $signed(tmp_146_fu_439_p2);

assign tmp_148_fu_481_p2 = (rootLeft_3_fu_459_p3 | rootAbove_3_fu_470_p3);

assign tmp_149_fu_487_p2 = ((tmp_148_fu_481_p2 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_150_cast_fu_654_p1 = j4_reg_261;

assign tmp_153_fu_360_p3 = {{i1_reg_193}, {9'd0}};

assign tmp_154_fu_527_p2 = ((rootLeft_3_reg_796 != 8'd0) ? 1'b1 : 1'b0);

assign tmp_155_fu_532_p2 = ((rootAbove_3_reg_807 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_156_fu_384_p3 = {{tmp_141_fu_378_p2}, {9'd0}};

assign tmp_157_fu_687_p2 = ((equivLabels_parent_q0 == root1_reg_272) ? 1'b1 : 1'b0);

assign tmp_158_fu_337_p2 = (tmp_175_cast_reg_711 + tmp_142_cast_fu_333_p1);

assign tmp_159_fu_630_p3 = {{i3_reg_250}, {9'd0}};

assign tmp_160_fu_563_p2 = ((equivLabels_parent_q0 == rootLeft_reg_216) ? 1'b1 : 1'b0);

assign tmp_161_fu_412_p2 = ($signed(tmp_179_cast_reg_753) + $signed(tmp_143_cast_fu_408_p1));

assign tmp_162_fu_583_p2 = ((equivLabels_parent_q0 == rootAbove_reg_227) ? 1'b1 : 1'b0);

assign tmp_163_fu_589_p2 = ((rootLeft_reg_216 == rootAbove_reg_227) ? 1'b1 : 1'b0);

assign tmp_164_fu_595_p2 = (($signed(equivLabels_child_q0) < $signed(equivLabels_child_q1)) ? 1'b1 : 1'b0);

assign tmp_165_fu_601_p2 = (($signed(equivLabels_child_q0) > $signed(equivLabels_child_q1)) ? 1'b1 : 1'b0);

assign tmp_167_fu_422_p2 = (tmp_177_cast_reg_739 + tmp_143_cast_fu_408_p1);

assign tmp_168_fu_449_p2 = ($signed(tmp_147_cast_fu_445_p1) + $signed(tmp_177_cast_reg_739));

assign tmp_169_fu_658_p2 = (tmp_182_cast_reg_897 + tmp_150_cast_fu_654_p1);

assign tmp_171_fu_502_p1 = label_fu_38[19:0];

assign tmp_172_fu_506_p2 = (tmp_171_fu_502_p1 + tmp_177_cast_reg_739);

assign tmp_173_fu_673_p1 = root1_reg_272[19:0];

assign tmp_174_fu_677_p2 = (tmp_182_cast_reg_897 + tmp_173_fu_673_p1);

assign tmp_175_cast_fu_312_p1 = tmp_fu_304_p3;

assign tmp_175_fu_693_p1 = root1_reg_272[7:0];

assign tmp_176_fu_549_p1 = rootLeft_reg_216[19:0];

assign tmp_177_cast_fu_368_p1 = tmp_153_fu_360_p3;

assign tmp_177_fu_553_p2 = (tmp_177_cast_reg_739 + tmp_176_fu_549_p1);

assign tmp_178_fu_569_p1 = rootAbove_reg_227[19:0];

assign tmp_179_cast_fu_392_p1 = $signed(tmp_156_fu_384_p3);

assign tmp_179_fu_573_p2 = (tmp_177_cast_reg_739 + tmp_178_fu_569_p1);

assign tmp_180_cast_fu_342_p1 = tmp_158_fu_337_p2;

assign tmp_180_fu_613_p1 = rootLeft_reg_216[7:0];

assign tmp_182_cast_fu_638_p1 = tmp_159_fu_630_p3;

assign tmp_183_cast_fu_417_p1 = $signed(tmp_161_fu_412_p2);

assign tmp_184_cast_fu_427_p1 = tmp_167_fu_422_p2;

assign tmp_185_cast_fu_454_p1 = tmp_168_fu_449_p2;

assign tmp_186_cast_fu_663_p1 = tmp_169_fu_658_p2;

assign tmp_187_cast_fu_511_p1 = $signed(tmp_172_fu_506_p2);

assign tmp_188_cast_fu_682_p1 = $signed(tmp_174_fu_677_p2);

assign tmp_189_cast_fu_558_p1 = $signed(tmp_177_fu_553_p2);

assign tmp_190_cast_fu_578_p1 = $signed(tmp_179_fu_573_p2);

assign tmp_fu_304_p3 = {{i_reg_171}, {9'd0}};

assign tmp_s_fu_372_p2 = ((i1_reg_193 != 10'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_cast8_reg_698[31:10] <= 22'b0000000000000000000000;
    tmp_175_cast_reg_711[8:0] <= 9'b000000000;
    tmp_175_cast_reg_711[19] <= 1'b0;
    tmp_177_cast_reg_739[8:0] <= 9'b000000000;
    tmp_177_cast_reg_739[19] <= 1'b0;
    tmp_179_cast_reg_753[8:0] <= 9'b000000000;
    rootLeft_3_cast_reg_802[31:8] <= 24'b000000000000000000000000;
    rootAbove_3_cast_reg_813[31:8] <= 24'b000000000000000000000000;
    tmp_182_cast_reg_897[8:0] <= 9'b000000000;
    tmp_182_cast_reg_897[19] <= 1'b0;
end

endmodule //connectedComponents
