// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "RGBtoGray_512_512_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic RGBtoGray_512_512_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic RGBtoGray_512_512_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state1 = "1";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state2 = "10";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state3 = "100";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state4 = "1000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state5 = "10000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state6 = "100000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_14 = "10100";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_1A = "11010";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_1 = "1";
const sc_lv<1> RGBtoGray_512_512_2::ap_const_lv1_0 = "0";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_2 = "10";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_3 = "11";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_4 = "100";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_8 = "1000";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_D = "1101";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_E = "1110";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_13 = "10011";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_1B = "11011";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_1C = "11100";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_1D = "11101";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_1E = "11110";
const sc_lv<10> RGBtoGray_512_512_2::ap_const_lv10_0 = "0000000000";
const sc_lv<1> RGBtoGray_512_512_2::ap_const_lv1_1 = "1";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_1F = "11111";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_F = "1111";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_15 = "10101";
const sc_lv<64> RGBtoGray_512_512_2::ap_const_lv64_3FE2C8B439581062 = "11111111100010110010001011010000111001010110000001000001100010";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_9 = "1001";
const sc_lv<10> RGBtoGray_512_512_2::ap_const_lv10_200 = "1000000000";
const sc_lv<10> RGBtoGray_512_512_2::ap_const_lv10_1 = "1";
const sc_lv<9> RGBtoGray_512_512_2::ap_const_lv9_0 = "000000000";
const sc_lv<64> RGBtoGray_512_512_2::ap_const_lv64_40530FAE147AE147 = "100000001010011000011111010111000010100011110101110000101000111";
const sc_lv<64> RGBtoGray_512_512_2::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> RGBtoGray_512_512_2::ap_const_lv64_403D11EB851EB852 = "100000000111101000100011110101110000101000111101011100001010010";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_34 = "110100";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_3E = "111110";
const sc_lv<11> RGBtoGray_512_512_2::ap_const_lv11_3FE = "1111111110";
const sc_lv<11> RGBtoGray_512_512_2::ap_const_lv11_433 = "10000110011";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_39 = "111001";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_3F = "111111";
const sc_lv<63> RGBtoGray_512_512_2::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<52> RGBtoGray_512_512_2::ap_const_lv52_FFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111";
const sc_lv<12> RGBtoGray_512_512_2::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_B = "1011";
const sc_lv<11> RGBtoGray_512_512_2::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_35 = "110101";
const sc_lv<32> RGBtoGray_512_512_2::ap_const_lv32_3C = "111100";
const bool RGBtoGray_512_512_2::ap_const_boolean_1 = true;

RGBtoGray_512_512_2::RGBtoGray_512_512_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mask_table1_U = new RGBtoGray_512_512_2_mask_table1("mask_table1_U");
    mask_table1_U->clk(ap_clk);
    mask_table1_U->reset(ap_rst);
    mask_table1_U->address0(mask_table1_address0);
    mask_table1_U->ce0(mask_table1_ce0);
    mask_table1_U->q0(mask_table1_q0);
    one_half_table2_U = new RGBtoGray_512_512_2_one_half_table2("one_half_table2_U");
    one_half_table2_U->clk(ap_clk);
    one_half_table2_U->reset(ap_rst);
    one_half_table2_U->address0(one_half_table2_address0);
    one_half_table2_U->ce0(one_half_table2_ce0);
    one_half_table2_U->q0(one_half_table2_q0);
    imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1 = new imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1<1,6,64,64,64>("imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1");
    imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1->clk(ap_clk);
    imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1->reset(ap_rst);
    imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1->din0(grp_fu_186_p0);
    imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1->din1(grp_fu_186_p1);
    imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1->ce(ap_var_for_const0);
    imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1->dout(grp_fu_186_p2);
    imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2 = new imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>("imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2");
    imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2->clk(ap_clk);
    imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2->reset(ap_rst);
    imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2->din0(tmp_172_reg_562);
    imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2->din1(ap_var_for_const1);
    imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2->ce(ap_var_for_const0);
    imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2->dout(grp_fu_190_p2);
    imageProcessing_sitodp_32ns_64_5_1_U3 = new imageProcessing_sitodp_32ns_64_5_1<1,5,32,64>("imageProcessing_sitodp_32ns_64_5_1_U3");
    imageProcessing_sitodp_32ns_64_5_1_U3->clk(ap_clk);
    imageProcessing_sitodp_32ns_64_5_1_U3->reset(ap_rst);
    imageProcessing_sitodp_32ns_64_5_1_U3->din0(grp_fu_195_p0);
    imageProcessing_sitodp_32ns_64_5_1_U3->ce(ap_var_for_const0);
    imageProcessing_sitodp_32ns_64_5_1_U3->dout(grp_fu_195_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_203_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_203_p2 );

    SC_METHOD(thread_exitcond1_fu_203_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_exitcond_fu_227_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_grp_fu_186_p0);
    sensitive << ( reg_198 );
    sensitive << ( tmp_170_reg_572 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_186_p1);
    sensitive << ( tmp_173_reg_577 );
    sensitive << ( tmp_177_reg_587 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_195_p0);
    sensitive << ( input_g_load_reg_552 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_18_fu_209_p2);
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_index_V_fu_299_p4);
    sensitive << ( t_V_1_fu_273_p1 );

    SC_METHOD(thread_input_b_address0);
    sensitive << ( tmp_192_cast_reg_540 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_input_b_ce0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_input_g_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_192_cast_fu_248_p1 );

    SC_METHOD(thread_input_g_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( tmp_192_cast_reg_540 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_isNeg_fu_440_p3);
    sensitive << ( sh_assign_fu_434_p2 );

    SC_METHOD(thread_j_17_fu_233_p2);
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_mantissa_V_2_cast_fu_427_p1);
    sensitive << ( mantissa_V_fu_418_p4 );

    SC_METHOD(thread_mantissa_V_fu_418_p4);
    sensitive << ( tmp_V_4_reg_635 );

    SC_METHOD(thread_mask_table1_address0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_214_i_i_fu_309_p1 );

    SC_METHOD(thread_mask_table1_ce0);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_one_half_cast_fu_330_p1);
    sensitive << ( one_half_reg_624 );

    SC_METHOD(thread_one_half_table2_address0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_214_i_i_fu_309_p1 );

    SC_METHOD(thread_one_half_table2_ce0);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( tmp_192_cast_reg_540 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( val_V_reg_640 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_p_Result_11_fu_322_p3);
    sensitive << ( p_Result_s_fu_315_p3 );

    SC_METHOD(thread_p_Result_12_fu_363_p3);
    sensitive << ( tmp_180_fu_353_p4 );
    sensitive << ( xs_sig_V_fu_347_p2 );

    SC_METHOD(thread_p_Result_s_fu_315_p3);
    sensitive << ( t_V_1_reg_592 );

    SC_METHOD(thread_p_Val2_11_fu_400_p1);
    sensitive << ( x_assign_1_fu_392_p3 );

    SC_METHOD(thread_p_Val2_s_fu_333_p2);
    sensitive << ( t_V_1_reg_592 );
    sensitive << ( one_half_cast_fu_330_p1 );

    SC_METHOD(thread_r_V_2_fu_483_p2);
    sensitive << ( mantissa_V_2_cast_fu_427_p1 );
    sensitive << ( tmp_i_i_i_129_fu_469_p1 );

    SC_METHOD(thread_r_V_fu_477_p2);
    sensitive << ( mantissa_V_fu_418_p4 );
    sensitive << ( tmp_i_i_i_cast_130_fu_473_p1 );

    SC_METHOD(thread_sel_tmp1_fu_382_p2);
    sensitive << ( tmp_i_i_reg_598 );

    SC_METHOD(thread_sel_tmp2_fu_387_p2);
    sensitive << ( tmp_213_i_i_reg_604 );
    sensitive << ( sel_tmp1_fu_382_p2 );

    SC_METHOD(thread_sel_tmp_fu_378_p1);
    sensitive << ( sel_tmp_v_fu_371_p3 );

    SC_METHOD(thread_sel_tmp_v_fu_371_p3);
    sensitive << ( tmp_i_i_reg_598 );
    sensitive << ( p_Result_11_fu_322_p3 );
    sensitive << ( p_Result_12_fu_363_p3 );

    SC_METHOD(thread_sh_assign_8_cast_fu_465_p1);
    sensitive << ( ush_fu_457_p3 );

    SC_METHOD(thread_sh_assign_fu_434_p2);
    sensitive << ( tmp_i_i_i_i_cast4_fu_431_p1 );

    SC_METHOD(thread_t_V_1_fu_273_p1);
    sensitive << ( reg_198 );

    SC_METHOD(thread_tmp_170_fu_257_p3);
    sensitive << ( input_r_q0 );

    SC_METHOD(thread_tmp_177_fu_265_p3);
    sensitive << ( input_b_q0 );

    SC_METHOD(thread_tmp_180_fu_353_p4);
    sensitive << ( p_Val2_s_fu_333_p2 );

    SC_METHOD(thread_tmp_181_fu_497_p1);
    sensitive << ( tmp_185_fu_489_p3 );

    SC_METHOD(thread_tmp_182_fu_501_p4);
    sensitive << ( r_V_2_fu_483_p2 );

    SC_METHOD(thread_tmp_185_fu_489_p3);
    sensitive << ( r_V_fu_477_p2 );

    SC_METHOD(thread_tmp_191_cast_fu_223_p1);
    sensitive << ( tmp_fu_215_p3 );

    SC_METHOD(thread_tmp_192_cast_fu_248_p1);
    sensitive << ( tmp_s_fu_243_p2 );

    SC_METHOD(thread_tmp_213_i_i_fu_293_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_V_fu_277_p4 );

    SC_METHOD(thread_tmp_214_i_i_fu_309_p1);
    sensitive << ( index_V_fu_299_p4 );

    SC_METHOD(thread_tmp_216_i_i_fu_342_p2);
    sensitive << ( mask_reg_619 );

    SC_METHOD(thread_tmp_V_2_fu_338_p1);
    sensitive << ( p_Val2_s_fu_333_p2 );

    SC_METHOD(thread_tmp_V_4_fu_414_p1);
    sensitive << ( p_Val2_11_fu_400_p1 );

    SC_METHOD(thread_tmp_V_fu_277_p4);
    sensitive << ( t_V_1_fu_273_p1 );

    SC_METHOD(thread_tmp_cast_fu_239_p1);
    sensitive << ( j_reg_175 );

    SC_METHOD(thread_tmp_fu_215_p3);
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_tmp_i_i_fu_287_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_V_fu_277_p4 );

    SC_METHOD(thread_tmp_i_i_i_129_fu_469_p1);
    sensitive << ( sh_assign_8_cast_fu_465_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast_130_fu_473_p1);
    sensitive << ( sh_assign_8_cast_fu_465_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_453_p1);
    sensitive << ( tmp_i_i_i_fu_448_p2 );

    SC_METHOD(thread_tmp_i_i_i_fu_448_p2);
    sensitive << ( tmp_V_3_reg_629 );

    SC_METHOD(thread_tmp_i_i_i_i_cast4_fu_431_p1);
    sensitive << ( tmp_V_3_reg_629 );

    SC_METHOD(thread_tmp_s_fu_243_p2);
    sensitive << ( tmp_191_cast_reg_527 );
    sensitive << ( tmp_cast_fu_239_p1 );

    SC_METHOD(thread_ush_fu_457_p3);
    sensitive << ( sh_assign_fu_434_p2 );
    sensitive << ( isNeg_fu_440_p3 );
    sensitive << ( tmp_i_i_i_cast_fu_453_p1 );

    SC_METHOD(thread_val_V_fu_511_p3);
    sensitive << ( isNeg_fu_440_p3 );
    sensitive << ( tmp_181_fu_497_p1 );
    sensitive << ( tmp_182_fu_501_p4 );

    SC_METHOD(thread_x_assign_1_fu_392_p3);
    sensitive << ( reg_198 );
    sensitive << ( sel_tmp2_fu_387_p2 );
    sensitive << ( sel_tmp_fu_378_p1 );

    SC_METHOD(thread_xs_sig_V_fu_347_p2);
    sensitive << ( tmp_V_2_fu_338_p1 );
    sensitive << ( tmp_216_i_i_fu_342_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_203_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_227_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "RGBtoGray_512_512_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input_g_address0, "(port)input_g_address0");
    sc_trace(mVcdFile, input_g_ce0, "(port)input_g_ce0");
    sc_trace(mVcdFile, input_g_q0, "(port)input_g_q0");
    sc_trace(mVcdFile, input_b_address0, "(port)input_b_address0");
    sc_trace(mVcdFile, input_b_ce0, "(port)input_b_ce0");
    sc_trace(mVcdFile, input_b_q0, "(port)input_b_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, mask_table1_address0, "mask_table1_address0");
    sc_trace(mVcdFile, mask_table1_ce0, "mask_table1_ce0");
    sc_trace(mVcdFile, mask_table1_q0, "mask_table1_q0");
    sc_trace(mVcdFile, one_half_table2_address0, "one_half_table2_address0");
    sc_trace(mVcdFile, one_half_table2_ce0, "one_half_table2_ce0");
    sc_trace(mVcdFile, one_half_table2_q0, "one_half_table2_q0");
    sc_trace(mVcdFile, grp_fu_186_p2, "grp_fu_186_p2");
    sc_trace(mVcdFile, reg_198, "reg_198");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, i_18_fu_209_p2, "i_18_fu_209_p2");
    sc_trace(mVcdFile, i_18_reg_522, "i_18_reg_522");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_191_cast_fu_223_p1, "tmp_191_cast_fu_223_p1");
    sc_trace(mVcdFile, tmp_191_cast_reg_527, "tmp_191_cast_reg_527");
    sc_trace(mVcdFile, exitcond1_fu_203_p2, "exitcond1_fu_203_p2");
    sc_trace(mVcdFile, j_17_fu_233_p2, "j_17_fu_233_p2");
    sc_trace(mVcdFile, j_17_reg_535, "j_17_reg_535");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_192_cast_fu_248_p1, "tmp_192_cast_fu_248_p1");
    sc_trace(mVcdFile, tmp_192_cast_reg_540, "tmp_192_cast_reg_540");
    sc_trace(mVcdFile, exitcond_fu_227_p2, "exitcond_fu_227_p2");
    sc_trace(mVcdFile, input_g_load_reg_552, "input_g_load_reg_552");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_195_p1, "grp_fu_195_p1");
    sc_trace(mVcdFile, tmp_172_reg_562, "tmp_172_reg_562");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_170_fu_257_p3, "tmp_170_fu_257_p3");
    sc_trace(mVcdFile, tmp_170_reg_572, "tmp_170_reg_572");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_190_p2, "grp_fu_190_p2");
    sc_trace(mVcdFile, tmp_173_reg_577, "tmp_173_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_177_fu_265_p3, "tmp_177_fu_265_p3");
    sc_trace(mVcdFile, tmp_177_reg_587, "tmp_177_reg_587");
    sc_trace(mVcdFile, t_V_1_fu_273_p1, "t_V_1_fu_273_p1");
    sc_trace(mVcdFile, t_V_1_reg_592, "t_V_1_reg_592");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_i_i_fu_287_p2, "tmp_i_i_fu_287_p2");
    sc_trace(mVcdFile, tmp_i_i_reg_598, "tmp_i_i_reg_598");
    sc_trace(mVcdFile, tmp_213_i_i_fu_293_p2, "tmp_213_i_i_fu_293_p2");
    sc_trace(mVcdFile, tmp_213_i_i_reg_604, "tmp_213_i_i_reg_604");
    sc_trace(mVcdFile, mask_reg_619, "mask_reg_619");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, one_half_reg_624, "one_half_reg_624");
    sc_trace(mVcdFile, tmp_V_3_reg_629, "tmp_V_3_reg_629");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, tmp_V_4_fu_414_p1, "tmp_V_4_fu_414_p1");
    sc_trace(mVcdFile, tmp_V_4_reg_635, "tmp_V_4_reg_635");
    sc_trace(mVcdFile, val_V_fu_511_p3, "val_V_fu_511_p3");
    sc_trace(mVcdFile, val_V_reg_640, "val_V_reg_640");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, i_reg_164, "i_reg_164");
    sc_trace(mVcdFile, j_reg_175, "j_reg_175");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, tmp_214_i_i_fu_309_p1, "tmp_214_i_i_fu_309_p1");
    sc_trace(mVcdFile, grp_fu_186_p0, "grp_fu_186_p0");
    sc_trace(mVcdFile, grp_fu_186_p1, "grp_fu_186_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_195_p0, "grp_fu_195_p0");
    sc_trace(mVcdFile, tmp_fu_215_p3, "tmp_fu_215_p3");
    sc_trace(mVcdFile, tmp_cast_fu_239_p1, "tmp_cast_fu_239_p1");
    sc_trace(mVcdFile, tmp_s_fu_243_p2, "tmp_s_fu_243_p2");
    sc_trace(mVcdFile, tmp_V_fu_277_p4, "tmp_V_fu_277_p4");
    sc_trace(mVcdFile, index_V_fu_299_p4, "index_V_fu_299_p4");
    sc_trace(mVcdFile, p_Result_s_fu_315_p3, "p_Result_s_fu_315_p3");
    sc_trace(mVcdFile, one_half_cast_fu_330_p1, "one_half_cast_fu_330_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_333_p2, "p_Val2_s_fu_333_p2");
    sc_trace(mVcdFile, tmp_V_2_fu_338_p1, "tmp_V_2_fu_338_p1");
    sc_trace(mVcdFile, tmp_216_i_i_fu_342_p2, "tmp_216_i_i_fu_342_p2");
    sc_trace(mVcdFile, tmp_180_fu_353_p4, "tmp_180_fu_353_p4");
    sc_trace(mVcdFile, xs_sig_V_fu_347_p2, "xs_sig_V_fu_347_p2");
    sc_trace(mVcdFile, p_Result_11_fu_322_p3, "p_Result_11_fu_322_p3");
    sc_trace(mVcdFile, p_Result_12_fu_363_p3, "p_Result_12_fu_363_p3");
    sc_trace(mVcdFile, sel_tmp_v_fu_371_p3, "sel_tmp_v_fu_371_p3");
    sc_trace(mVcdFile, sel_tmp1_fu_382_p2, "sel_tmp1_fu_382_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_387_p2, "sel_tmp2_fu_387_p2");
    sc_trace(mVcdFile, sel_tmp_fu_378_p1, "sel_tmp_fu_378_p1");
    sc_trace(mVcdFile, x_assign_1_fu_392_p3, "x_assign_1_fu_392_p3");
    sc_trace(mVcdFile, p_Val2_11_fu_400_p1, "p_Val2_11_fu_400_p1");
    sc_trace(mVcdFile, mantissa_V_fu_418_p4, "mantissa_V_fu_418_p4");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast4_fu_431_p1, "tmp_i_i_i_i_cast4_fu_431_p1");
    sc_trace(mVcdFile, sh_assign_fu_434_p2, "sh_assign_fu_434_p2");
    sc_trace(mVcdFile, tmp_i_i_i_fu_448_p2, "tmp_i_i_i_fu_448_p2");
    sc_trace(mVcdFile, isNeg_fu_440_p3, "isNeg_fu_440_p3");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_453_p1, "tmp_i_i_i_cast_fu_453_p1");
    sc_trace(mVcdFile, ush_fu_457_p3, "ush_fu_457_p3");
    sc_trace(mVcdFile, sh_assign_8_cast_fu_465_p1, "sh_assign_8_cast_fu_465_p1");
    sc_trace(mVcdFile, tmp_i_i_i_cast_130_fu_473_p1, "tmp_i_i_i_cast_130_fu_473_p1");
    sc_trace(mVcdFile, mantissa_V_2_cast_fu_427_p1, "mantissa_V_2_cast_fu_427_p1");
    sc_trace(mVcdFile, tmp_i_i_i_129_fu_469_p1, "tmp_i_i_i_129_fu_469_p1");
    sc_trace(mVcdFile, r_V_fu_477_p2, "r_V_fu_477_p2");
    sc_trace(mVcdFile, tmp_185_fu_489_p3, "tmp_185_fu_489_p3");
    sc_trace(mVcdFile, r_V_2_fu_483_p2, "r_V_2_fu_483_p2");
    sc_trace(mVcdFile, tmp_181_fu_497_p1, "tmp_181_fu_497_p1");
    sc_trace(mVcdFile, tmp_182_fu_501_p4, "tmp_182_fu_501_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

RGBtoGray_512_512_2::~RGBtoGray_512_512_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete mask_table1_U;
    delete one_half_table2_U;
    delete imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U1;
    delete imageProcessing_dmul_64ns_64ns_64_6_max_dsp_1_U2;
    delete imageProcessing_sitodp_32ns_64_5_1_U3;
}

void RGBtoGray_512_512_2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void RGBtoGray_512_512_2::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FE2C8B439581062;
}

void RGBtoGray_512_512_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_227_p2.read(), ap_const_lv1_1))) {
        i_reg_164 = i_18_reg_522.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_164 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_0))) {
        j_reg_175 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        j_reg_175 = j_17_reg_535.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_18_reg_522 = i_18_fu_209_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_g_load_reg_552 = input_g_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_17_reg_535 = j_17_fu_233_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        mask_reg_619 = mask_table1_q0.read();
        one_half_reg_624 = one_half_table2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        reg_198 = grp_fu_186_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        t_V_1_reg_592 = t_V_1_fu_273_p1.read();
        tmp_213_i_i_reg_604 = tmp_213_i_i_fu_293_p2.read();
        tmp_i_i_reg_598 = tmp_i_i_fu_287_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_170_reg_572 = tmp_170_fu_257_p3.read();
        tmp_173_reg_577 = grp_fu_190_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_172_reg_562 = grp_fu_195_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_177_reg_587 = tmp_177_fu_265_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_0))) {
        tmp_191_cast_reg_527 = tmp_191_cast_fu_223_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_227_p2.read()))) {
        tmp_192_cast_reg_540 = tmp_192_cast_fu_248_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        tmp_V_3_reg_629 = p_Val2_11_fu_400_p1.read().range(62, 52);
        tmp_V_4_reg_635 = tmp_V_4_fu_414_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        val_V_reg_640 = val_V_fu_511_p3.read();
    }
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void RGBtoGray_512_512_2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void RGBtoGray_512_512_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_exitcond1_fu_203_p2() {
    exitcond1_fu_203_p2 = (!i_reg_164.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_164.read() == ap_const_lv10_200);
}

void RGBtoGray_512_512_2::thread_exitcond_fu_227_p2() {
    exitcond_fu_227_p2 = (!j_reg_175.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_175.read() == ap_const_lv10_200);
}

void RGBtoGray_512_512_2::thread_grp_fu_186_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_186_p0 = reg_198.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_186_p0 = tmp_170_reg_572.read();
    } else {
        grp_fu_186_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void RGBtoGray_512_512_2::thread_grp_fu_186_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_186_p1 = tmp_177_reg_587.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_186_p1 = tmp_173_reg_577.read();
    } else {
        grp_fu_186_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void RGBtoGray_512_512_2::thread_grp_fu_195_p0() {
    grp_fu_195_p0 = esl_zext<32,1>(input_g_load_reg_552.read());
}

void RGBtoGray_512_512_2::thread_i_18_fu_209_p2() {
    i_18_fu_209_p2 = (!i_reg_164.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_164.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void RGBtoGray_512_512_2::thread_index_V_fu_299_p4() {
    index_V_fu_299_p4 = t_V_1_fu_273_p1.read().range(57, 52);
}

void RGBtoGray_512_512_2::thread_input_b_address0() {
    input_b_address0 =  (sc_lv<18>) (tmp_192_cast_reg_540.read());
}

void RGBtoGray_512_512_2::thread_input_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        input_b_ce0 = ap_const_logic_1;
    } else {
        input_b_ce0 = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_input_g_address0() {
    input_g_address0 =  (sc_lv<18>) (tmp_192_cast_fu_248_p1.read());
}

void RGBtoGray_512_512_2::thread_input_g_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_g_ce0 = ap_const_logic_1;
    } else {
        input_g_ce0 = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<18>) (tmp_192_cast_reg_540.read());
}

void RGBtoGray_512_512_2::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_isNeg_fu_440_p3() {
    isNeg_fu_440_p3 = sh_assign_fu_434_p2.read().range(11, 11);
}

void RGBtoGray_512_512_2::thread_j_17_fu_233_p2() {
    j_17_fu_233_p2 = (!j_reg_175.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_175.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void RGBtoGray_512_512_2::thread_mantissa_V_2_cast_fu_427_p1() {
    mantissa_V_2_cast_fu_427_p1 = esl_zext<113,54>(mantissa_V_fu_418_p4.read());
}

void RGBtoGray_512_512_2::thread_mantissa_V_fu_418_p4() {
    mantissa_V_fu_418_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, tmp_V_4_reg_635.read()), ap_const_lv1_0);
}

void RGBtoGray_512_512_2::thread_mask_table1_address0() {
    mask_table1_address0 =  (sc_lv<6>) (tmp_214_i_i_fu_309_p1.read());
}

void RGBtoGray_512_512_2::thread_mask_table1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        mask_table1_ce0 = ap_const_logic_1;
    } else {
        mask_table1_ce0 = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_one_half_cast_fu_330_p1() {
    one_half_cast_fu_330_p1 = esl_zext<64,53>(one_half_reg_624.read());
}

void RGBtoGray_512_512_2::thread_one_half_table2_address0() {
    one_half_table2_address0 =  (sc_lv<6>) (tmp_214_i_i_fu_309_p1.read());
}

void RGBtoGray_512_512_2::thread_one_half_table2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        one_half_table2_ce0 = ap_const_logic_1;
    } else {
        one_half_table2_ce0 = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<18>) (tmp_192_cast_reg_540.read());
}

void RGBtoGray_512_512_2::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_output_r_d0() {
    output_r_d0 = val_V_reg_640.read();
}

void RGBtoGray_512_512_2::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void RGBtoGray_512_512_2::thread_p_Result_11_fu_322_p3() {
    p_Result_11_fu_322_p3 = esl_concat<1,63>(p_Result_s_fu_315_p3.read(), ap_const_lv63_0);
}

void RGBtoGray_512_512_2::thread_p_Result_12_fu_363_p3() {
    p_Result_12_fu_363_p3 = esl_concat<12,52>(tmp_180_fu_353_p4.read(), xs_sig_V_fu_347_p2.read());
}

void RGBtoGray_512_512_2::thread_p_Result_s_fu_315_p3() {
    p_Result_s_fu_315_p3 = t_V_1_reg_592.read().range(63, 63);
}

void RGBtoGray_512_512_2::thread_p_Val2_11_fu_400_p1() {
    p_Val2_11_fu_400_p1 = x_assign_1_fu_392_p3.read();
}

void RGBtoGray_512_512_2::thread_p_Val2_s_fu_333_p2() {
    p_Val2_s_fu_333_p2 = (!t_V_1_reg_592.read().is_01() || !one_half_cast_fu_330_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(t_V_1_reg_592.read()) + sc_biguint<64>(one_half_cast_fu_330_p1.read()));
}

void RGBtoGray_512_512_2::thread_r_V_2_fu_483_p2() {
    r_V_2_fu_483_p2 = (!tmp_i_i_i_129_fu_469_p1.read().is_01())? sc_lv<113>(): mantissa_V_2_cast_fu_427_p1.read() << (unsigned short)tmp_i_i_i_129_fu_469_p1.read().to_uint();
}

void RGBtoGray_512_512_2::thread_r_V_fu_477_p2() {
    r_V_fu_477_p2 = (!tmp_i_i_i_cast_130_fu_473_p1.read().is_01())? sc_lv<54>(): mantissa_V_fu_418_p4.read() >> (unsigned short)tmp_i_i_i_cast_130_fu_473_p1.read().to_uint();
}

void RGBtoGray_512_512_2::thread_sel_tmp1_fu_382_p2() {
    sel_tmp1_fu_382_p2 = (tmp_i_i_reg_598.read() ^ ap_const_lv1_1);
}

void RGBtoGray_512_512_2::thread_sel_tmp2_fu_387_p2() {
    sel_tmp2_fu_387_p2 = (tmp_213_i_i_reg_604.read() & sel_tmp1_fu_382_p2.read());
}

void RGBtoGray_512_512_2::thread_sel_tmp_fu_378_p1() {
    sel_tmp_fu_378_p1 = sel_tmp_v_fu_371_p3.read();
}

void RGBtoGray_512_512_2::thread_sel_tmp_v_fu_371_p3() {
    sel_tmp_v_fu_371_p3 = (!tmp_i_i_reg_598.read()[0].is_01())? sc_lv<64>(): ((tmp_i_i_reg_598.read()[0].to_bool())? p_Result_11_fu_322_p3.read(): p_Result_12_fu_363_p3.read());
}

void RGBtoGray_512_512_2::thread_sh_assign_8_cast_fu_465_p1() {
    sh_assign_8_cast_fu_465_p1 = esl_sext<32,12>(ush_fu_457_p3.read());
}

void RGBtoGray_512_512_2::thread_sh_assign_fu_434_p2() {
    sh_assign_fu_434_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_i_cast4_fu_431_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_i_cast4_fu_431_p1.read()));
}

void RGBtoGray_512_512_2::thread_t_V_1_fu_273_p1() {
    t_V_1_fu_273_p1 = reg_198.read();
}

void RGBtoGray_512_512_2::thread_tmp_170_fu_257_p3() {
    tmp_170_fu_257_p3 = (!input_r_q0.read()[0].is_01())? sc_lv<64>(): ((input_r_q0.read()[0].to_bool())? ap_const_lv64_40530FAE147AE147: ap_const_lv64_0);
}

void RGBtoGray_512_512_2::thread_tmp_177_fu_265_p3() {
    tmp_177_fu_265_p3 = (!input_b_q0.read()[0].is_01())? sc_lv<64>(): ((input_b_q0.read()[0].to_bool())? ap_const_lv64_403D11EB851EB852: ap_const_lv64_0);
}

void RGBtoGray_512_512_2::thread_tmp_180_fu_353_p4() {
    tmp_180_fu_353_p4 = p_Val2_s_fu_333_p2.read().range(63, 52);
}

void RGBtoGray_512_512_2::thread_tmp_181_fu_497_p1() {
    tmp_181_fu_497_p1 = esl_zext<8,1>(tmp_185_fu_489_p3.read());
}

void RGBtoGray_512_512_2::thread_tmp_182_fu_501_p4() {
    tmp_182_fu_501_p4 = r_V_2_fu_483_p2.read().range(60, 53);
}

void RGBtoGray_512_512_2::thread_tmp_185_fu_489_p3() {
    tmp_185_fu_489_p3 = r_V_fu_477_p2.read().range(53, 53);
}

void RGBtoGray_512_512_2::thread_tmp_191_cast_fu_223_p1() {
    tmp_191_cast_fu_223_p1 = esl_zext<20,19>(tmp_fu_215_p3.read());
}

void RGBtoGray_512_512_2::thread_tmp_192_cast_fu_248_p1() {
    tmp_192_cast_fu_248_p1 = esl_zext<64,20>(tmp_s_fu_243_p2.read());
}

void RGBtoGray_512_512_2::thread_tmp_213_i_i_fu_293_p2() {
    tmp_213_i_i_fu_293_p2 = (!tmp_V_fu_277_p4.read().is_01() || !ap_const_lv11_433.is_01())? sc_lv<1>(): (sc_biguint<11>(tmp_V_fu_277_p4.read()) > sc_biguint<11>(ap_const_lv11_433));
}

void RGBtoGray_512_512_2::thread_tmp_214_i_i_fu_309_p1() {
    tmp_214_i_i_fu_309_p1 = esl_zext<64,6>(index_V_fu_299_p4.read());
}

void RGBtoGray_512_512_2::thread_tmp_216_i_i_fu_342_p2() {
    tmp_216_i_i_fu_342_p2 = (mask_reg_619.read() ^ ap_const_lv52_FFFFFFFFFFFFF);
}

void RGBtoGray_512_512_2::thread_tmp_V_2_fu_338_p1() {
    tmp_V_2_fu_338_p1 = p_Val2_s_fu_333_p2.read().range(52-1, 0);
}

void RGBtoGray_512_512_2::thread_tmp_V_4_fu_414_p1() {
    tmp_V_4_fu_414_p1 = p_Val2_11_fu_400_p1.read().range(52-1, 0);
}

void RGBtoGray_512_512_2::thread_tmp_V_fu_277_p4() {
    tmp_V_fu_277_p4 = t_V_1_fu_273_p1.read().range(62, 52);
}

void RGBtoGray_512_512_2::thread_tmp_cast_fu_239_p1() {
    tmp_cast_fu_239_p1 = esl_zext<20,10>(j_reg_175.read());
}

void RGBtoGray_512_512_2::thread_tmp_fu_215_p3() {
    tmp_fu_215_p3 = esl_concat<10,9>(i_reg_164.read(), ap_const_lv9_0);
}

void RGBtoGray_512_512_2::thread_tmp_i_i_fu_287_p2() {
    tmp_i_i_fu_287_p2 = (!tmp_V_fu_277_p4.read().is_01() || !ap_const_lv11_3FE.is_01())? sc_lv<1>(): (sc_biguint<11>(tmp_V_fu_277_p4.read()) < sc_biguint<11>(ap_const_lv11_3FE));
}

void RGBtoGray_512_512_2::thread_tmp_i_i_i_129_fu_469_p1() {
    tmp_i_i_i_129_fu_469_p1 = esl_zext<113,32>(sh_assign_8_cast_fu_465_p1.read());
}

void RGBtoGray_512_512_2::thread_tmp_i_i_i_cast_130_fu_473_p1() {
    tmp_i_i_i_cast_130_fu_473_p1 = esl_zext<54,32>(sh_assign_8_cast_fu_465_p1.read());
}

void RGBtoGray_512_512_2::thread_tmp_i_i_i_cast_fu_453_p1() {
    tmp_i_i_i_cast_fu_453_p1 = esl_sext<12,11>(tmp_i_i_i_fu_448_p2.read());
}

void RGBtoGray_512_512_2::thread_tmp_i_i_i_fu_448_p2() {
    tmp_i_i_i_fu_448_p2 = (!ap_const_lv11_3FF.is_01() || !tmp_V_3_reg_629.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(tmp_V_3_reg_629.read()));
}

void RGBtoGray_512_512_2::thread_tmp_i_i_i_i_cast4_fu_431_p1() {
    tmp_i_i_i_i_cast4_fu_431_p1 = esl_zext<12,11>(tmp_V_3_reg_629.read());
}

void RGBtoGray_512_512_2::thread_tmp_s_fu_243_p2() {
    tmp_s_fu_243_p2 = (!tmp_cast_fu_239_p1.read().is_01() || !tmp_191_cast_reg_527.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_cast_fu_239_p1.read()) + sc_biguint<20>(tmp_191_cast_reg_527.read()));
}

void RGBtoGray_512_512_2::thread_ush_fu_457_p3() {
    ush_fu_457_p3 = (!isNeg_fu_440_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_440_p3.read()[0].to_bool())? tmp_i_i_i_cast_fu_453_p1.read(): sh_assign_fu_434_p2.read());
}

void RGBtoGray_512_512_2::thread_val_V_fu_511_p3() {
    val_V_fu_511_p3 = (!isNeg_fu_440_p3.read()[0].is_01())? sc_lv<8>(): ((isNeg_fu_440_p3.read()[0].to_bool())? tmp_181_fu_497_p1.read(): tmp_182_fu_501_p4.read());
}

void RGBtoGray_512_512_2::thread_x_assign_1_fu_392_p3() {
    x_assign_1_fu_392_p3 = (!sel_tmp2_fu_387_p2.read()[0].is_01())? sc_lv<64>(): ((sel_tmp2_fu_387_p2.read()[0].to_bool())? reg_198.read(): sel_tmp_fu_378_p1.read());
}

void RGBtoGray_512_512_2::thread_xs_sig_V_fu_347_p2() {
    xs_sig_V_fu_347_p2 = (tmp_V_2_fu_338_p1.read() & tmp_216_i_i_fu_342_p2.read());
}

void RGBtoGray_512_512_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_203_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_227_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

