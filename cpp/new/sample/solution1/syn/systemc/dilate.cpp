// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dilate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dilate::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dilate::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> dilate::ap_ST_fsm_state1 = "1";
const sc_lv<14> dilate::ap_ST_fsm_state2 = "10";
const sc_lv<14> dilate::ap_ST_fsm_state3 = "100";
const sc_lv<14> dilate::ap_ST_fsm_state4 = "1000";
const sc_lv<14> dilate::ap_ST_fsm_state5 = "10000";
const sc_lv<14> dilate::ap_ST_fsm_state6 = "100000";
const sc_lv<14> dilate::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> dilate::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> dilate::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> dilate::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> dilate::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> dilate::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> dilate::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> dilate::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> dilate::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dilate::ap_const_lv32_1 = "1";
const sc_lv<1> dilate::ap_const_lv1_0 = "0";
const sc_lv<32> dilate::ap_const_lv32_2 = "10";
const sc_lv<32> dilate::ap_const_lv32_4 = "100";
const sc_lv<32> dilate::ap_const_lv32_5 = "101";
const sc_lv<32> dilate::ap_const_lv32_6 = "110";
const sc_lv<32> dilate::ap_const_lv32_7 = "111";
const sc_lv<32> dilate::ap_const_lv32_8 = "1000";
const sc_lv<32> dilate::ap_const_lv32_9 = "1001";
const sc_lv<32> dilate::ap_const_lv32_A = "1010";
const sc_lv<32> dilate::ap_const_lv32_B = "1011";
const sc_lv<32> dilate::ap_const_lv32_C = "1100";
const sc_lv<10> dilate::ap_const_lv10_0 = "0000000000";
const sc_lv<1> dilate::ap_const_lv1_1 = "1";
const sc_lv<32> dilate::ap_const_lv32_3 = "11";
const sc_lv<2> dilate::ap_const_lv2_0 = "00";
const sc_lv<32> dilate::ap_const_lv32_D = "1101";
const sc_lv<10> dilate::ap_const_lv10_200 = "1000000000";
const sc_lv<10> dilate::ap_const_lv10_1 = "1";
const sc_lv<9> dilate::ap_const_lv9_0 = "000000000";
const sc_lv<2> dilate::ap_const_lv2_2 = "10";
const sc_lv<2> dilate::ap_const_lv2_1 = "1";
const sc_lv<2> dilate::ap_const_lv2_3 = "11";
const bool dilate::ap_const_boolean_1 = true;

dilate::dilate(sc_module_name name) : sc_module(name), mVcdFile(0) {
    imKernel_U = new dilate_imKernel("imKernel_U");
    imKernel_U->clk(ap_clk);
    imKernel_U->reset(ap_rst);
    imKernel_U->address0(imKernel_address0);
    imKernel_U->ce0(imKernel_ce0);
    imKernel_U->q0(imKernel_q0);
    sureBackground_U = new dilate_sureBackground("sureBackground_U");
    sureBackground_U->clk(ap_clk);
    sureBackground_U->reset(ap_rst);
    sureBackground_U->address0(sureBackground_address0);
    sureBackground_U->ce0(sureBackground_ce0);
    sureBackground_U->we0(sureBackground_we0);
    sureBackground_U->d0(tmp_q0);
    tmp_U = new morphologyEx_temp("tmp_U");
    tmp_U->clk(ap_clk);
    tmp_U->reset(ap_rst);
    tmp_U->address0(tmp_address0);
    tmp_U->ce0(tmp_ce0);
    tmp_U->we0(tmp_we0);
    tmp_U->d0(tmp_d0);
    tmp_U->q0(tmp_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond6_fu_297_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond6_fu_297_p2 );

    SC_METHOD(thread_c_1_fu_277_p2);
    sensitive << ( c_reg_134 );

    SC_METHOD(thread_c_2_fu_560_p2);
    sensitive << ( c4_reg_236 );

    SC_METHOD(thread_c_3_fu_339_p2);
    sensitive << ( c2_reg_167 );

    SC_METHOD(thread_cc_fu_435_p2);
    sensitive << ( c_3_reg_636 );
    sensitive << ( kc_cast6_fu_419_p1 );

    SC_METHOD(thread_exitcond1_fu_530_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( r3_reg_225 );

    SC_METHOD(thread_exitcond2_fu_423_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( kc_reg_214 );

    SC_METHOD(thread_exitcond3_fu_349_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( kr_reg_191 );

    SC_METHOD(thread_exitcond4_fu_333_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( c2_reg_167 );

    SC_METHOD(thread_exitcond5_fu_309_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( r1_reg_156 );

    SC_METHOD(thread_exitcond6_fu_297_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_reg_145 );

    SC_METHOD(thread_exitcond7_fu_271_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_reg_134 );

    SC_METHOD(thread_exitcond8_fu_247_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_reg_123 );

    SC_METHOD(thread_exitcond_fu_554_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( c4_reg_236 );

    SC_METHOD(thread_i_14_fu_303_p2);
    sensitive << ( i_reg_145 );

    SC_METHOD(thread_imKernel_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_166_cast_fu_463_p1 );

    SC_METHOD(thread_imKernel_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_kc_1_fu_429_p2);
    sensitive << ( kc_reg_214 );

    SC_METHOD(thread_kc_cast6_fu_419_p1);
    sensitive << ( kc_reg_214 );

    SC_METHOD(thread_kr_1_fu_355_p2);
    sensitive << ( kr_reg_191 );

    SC_METHOD(thread_kr_cast9_fu_345_p1);
    sensitive << ( kr_reg_191 );

    SC_METHOD(thread_max_val_3_fu_522_p3);
    sensitive << ( max_val_1_reg_202 );
    sensitive << ( tmp_150_fu_472_p3 );
    sensitive << ( val_0_max_val_1_cast_fu_518_p1 );

    SC_METHOD(thread_max_val_5_cast3_fu_492_p1);
    sensitive << ( max_val_5_fu_486_p2 );

    SC_METHOD(thread_max_val_5_cast_fu_496_p1);
    sensitive << ( max_val_5_fu_486_p2 );

    SC_METHOD(thread_max_val_5_fu_486_p2);
    sensitive << ( tmp_195_cast_fu_480_p1 );
    sensitive << ( tmp_197_cast_fu_483_p1 );

    SC_METHOD(thread_p_shl_cast_fu_390_p1);
    sensitive << ( tmp_148_fu_382_p3 );

    SC_METHOD(thread_r_1_fu_253_p2);
    sensitive << ( r_reg_123 );

    SC_METHOD(thread_r_2_fu_315_p2);
    sensitive << ( r1_reg_156 );

    SC_METHOD(thread_r_3_fu_536_p2);
    sensitive << ( r3_reg_225 );

    SC_METHOD(thread_rr_fu_361_p2);
    sensitive << ( r_2_reg_622 );
    sensitive << ( kr_cast9_fu_345_p1 );

    SC_METHOD(thread_src_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_154_cast_fu_292_p1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_165_cast_fu_449_p1 );

    SC_METHOD(thread_src_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_sureBackground_address0);
    sensitive << ( tmp_159_cast_reg_724 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sureBackground_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sureBackground_we0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_132_fu_468_p2);
    sensitive << ( rr_reg_650 );
    sensitive << ( cc_reg_673 );

    SC_METHOD(thread_tmp_134_cast_fu_566_p1);
    sensitive << ( c4_reg_236 );

    SC_METHOD(thread_tmp_136_cast_fu_405_p1);
    sensitive << ( c2_reg_167 );

    SC_METHOD(thread_tmp_137_cast_fu_378_p1);
    sensitive << ( kr_reg_191 );

    SC_METHOD(thread_tmp_138_cast_fu_440_p1);
    sensitive << ( cc_fu_435_p2 );

    SC_METHOD(thread_tmp_139_cast_fu_454_p1);
    sensitive << ( kc_reg_214 );

    SC_METHOD(thread_tmp_140_fu_500_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( max_val_1_reg_202 );
    sensitive << ( max_val_5_cast_fu_496_p1 );

    SC_METHOD(thread_tmp_141_fu_287_p2);
    sensitive << ( tmp_153_cast_reg_588 );
    sensitive << ( tmp_cast_fu_283_p1 );

    SC_METHOD(thread_tmp_142_fu_321_p3);
    sensitive << ( r1_reg_156 );

    SC_METHOD(thread_tmp_143_fu_542_p3);
    sensitive << ( r3_reg_225 );

    SC_METHOD(thread_tmp_144_fu_570_p2);
    sensitive << ( tmp_158_cast_reg_711 );
    sensitive << ( tmp_134_cast_fu_566_p1 );

    SC_METHOD(thread_tmp_145_fu_400_p1);
    sensitive << ( max_val_reg_179 );

    SC_METHOD(thread_tmp_146_fu_409_p2);
    sensitive << ( tmp_156_cast_reg_628 );
    sensitive << ( tmp_136_cast_fu_405_p1 );

    SC_METHOD(thread_tmp_147_fu_366_p3);
    sensitive << ( rr_fu_361_p2 );

    SC_METHOD(thread_tmp_148_fu_382_p3);
    sensitive << ( kr_reg_191 );

    SC_METHOD(thread_tmp_149_fu_394_p2);
    sensitive << ( p_shl_cast_fu_390_p1 );
    sensitive << ( tmp_137_cast_fu_378_p1 );

    SC_METHOD(thread_tmp_150_fu_472_p3);
    sensitive << ( tmp_132_fu_468_p2 );

    SC_METHOD(thread_tmp_151_fu_444_p2);
    sensitive << ( tmp_162_cast_reg_655 );
    sensitive << ( tmp_138_cast_fu_440_p1 );

    SC_METHOD(thread_tmp_152_fu_458_p2);
    sensitive << ( tmp_149_reg_660 );
    sensitive << ( tmp_139_cast_fu_454_p1 );

    SC_METHOD(thread_tmp_153_cast_fu_267_p1);
    sensitive << ( tmp_s_fu_259_p3 );

    SC_METHOD(thread_tmp_153_fu_506_p1);
    sensitive << ( max_val_1_reg_202 );

    SC_METHOD(thread_tmp_154_cast_fu_292_p1);
    sensitive << ( tmp_141_fu_287_p2 );

    SC_METHOD(thread_tmp_156_cast_fu_329_p1);
    sensitive << ( tmp_142_fu_321_p3 );

    SC_METHOD(thread_tmp_158_cast_fu_550_p1);
    sensitive << ( tmp_143_fu_542_p3 );

    SC_METHOD(thread_tmp_159_cast_fu_575_p1);
    sensitive << ( tmp_144_fu_570_p2 );

    SC_METHOD(thread_tmp_160_cast_fu_414_p1);
    sensitive << ( tmp_146_fu_409_p2 );

    SC_METHOD(thread_tmp_162_cast_fu_374_p1);
    sensitive << ( tmp_147_fu_366_p3 );

    SC_METHOD(thread_tmp_165_cast_fu_449_p1);
    sensitive << ( tmp_151_fu_444_p2 );

    SC_METHOD(thread_tmp_166_cast_fu_463_p1);
    sensitive << ( tmp_152_fu_458_p2 );

    SC_METHOD(thread_tmp_195_cast_fu_480_p1);
    sensitive << ( src_load_2_reg_688 );

    SC_METHOD(thread_tmp_197_cast_fu_483_p1);
    sensitive << ( imKernel_load_reg_693 );

    SC_METHOD(thread_tmp_address0);
    sensitive << ( tmp_154_cast_reg_601 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_159_cast_fu_575_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_160_cast_fu_414_p1 );

    SC_METHOD(thread_tmp_cast_fu_283_p1);
    sensitive << ( c_reg_134 );

    SC_METHOD(thread_tmp_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_d0);
    sensitive << ( src_q0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_145_fu_400_p1 );

    SC_METHOD(thread_tmp_s_fu_259_p3);
    sensitive << ( r_reg_123 );

    SC_METHOD(thread_tmp_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond3_fu_349_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_val_0_max_val_1_cast_fu_518_p1);
    sensitive << ( val_0_max_val_1_fu_510_p3 );

    SC_METHOD(thread_val_0_max_val_1_fu_510_p3);
    sensitive << ( tmp_140_fu_500_p2 );
    sensitive << ( max_val_5_cast3_fu_492_p1 );
    sensitive << ( tmp_153_fu_506_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_247_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond7_fu_271_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond5_fu_309_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond3_fu_349_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond2_fu_423_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond1_fu_530_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_554_p2 );
    sensitive << ( exitcond4_fu_333_p2 );
    sensitive << ( exitcond6_fu_297_p2 );

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dilate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_address0, "(port)src_address0");
    sc_trace(mVcdFile, src_ce0, "(port)src_ce0");
    sc_trace(mVcdFile, src_q0, "(port)src_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, imKernel_address0, "imKernel_address0");
    sc_trace(mVcdFile, imKernel_ce0, "imKernel_ce0");
    sc_trace(mVcdFile, imKernel_q0, "imKernel_q0");
    sc_trace(mVcdFile, sureBackground_address0, "sureBackground_address0");
    sc_trace(mVcdFile, sureBackground_ce0, "sureBackground_ce0");
    sc_trace(mVcdFile, sureBackground_we0, "sureBackground_we0");
    sc_trace(mVcdFile, r_1_fu_253_p2, "r_1_fu_253_p2");
    sc_trace(mVcdFile, r_1_reg_583, "r_1_reg_583");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_153_cast_fu_267_p1, "tmp_153_cast_fu_267_p1");
    sc_trace(mVcdFile, tmp_153_cast_reg_588, "tmp_153_cast_reg_588");
    sc_trace(mVcdFile, exitcond8_fu_247_p2, "exitcond8_fu_247_p2");
    sc_trace(mVcdFile, c_1_fu_277_p2, "c_1_fu_277_p2");
    sc_trace(mVcdFile, c_1_reg_596, "c_1_reg_596");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_154_cast_fu_292_p1, "tmp_154_cast_fu_292_p1");
    sc_trace(mVcdFile, tmp_154_cast_reg_601, "tmp_154_cast_reg_601");
    sc_trace(mVcdFile, exitcond7_fu_271_p2, "exitcond7_fu_271_p2");
    sc_trace(mVcdFile, i_14_fu_303_p2, "i_14_fu_303_p2");
    sc_trace(mVcdFile, i_14_reg_614, "i_14_reg_614");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, r_2_fu_315_p2, "r_2_fu_315_p2");
    sc_trace(mVcdFile, r_2_reg_622, "r_2_reg_622");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_156_cast_fu_329_p1, "tmp_156_cast_fu_329_p1");
    sc_trace(mVcdFile, tmp_156_cast_reg_628, "tmp_156_cast_reg_628");
    sc_trace(mVcdFile, exitcond5_fu_309_p2, "exitcond5_fu_309_p2");
    sc_trace(mVcdFile, c_3_fu_339_p2, "c_3_fu_339_p2");
    sc_trace(mVcdFile, c_3_reg_636, "c_3_reg_636");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, kr_1_fu_355_p2, "kr_1_fu_355_p2");
    sc_trace(mVcdFile, kr_1_reg_645, "kr_1_reg_645");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, rr_fu_361_p2, "rr_fu_361_p2");
    sc_trace(mVcdFile, rr_reg_650, "rr_reg_650");
    sc_trace(mVcdFile, exitcond3_fu_349_p2, "exitcond3_fu_349_p2");
    sc_trace(mVcdFile, tmp_162_cast_fu_374_p1, "tmp_162_cast_fu_374_p1");
    sc_trace(mVcdFile, tmp_162_cast_reg_655, "tmp_162_cast_reg_655");
    sc_trace(mVcdFile, tmp_149_fu_394_p2, "tmp_149_fu_394_p2");
    sc_trace(mVcdFile, tmp_149_reg_660, "tmp_149_reg_660");
    sc_trace(mVcdFile, kc_1_fu_429_p2, "kc_1_fu_429_p2");
    sc_trace(mVcdFile, kc_1_reg_668, "kc_1_reg_668");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, cc_fu_435_p2, "cc_fu_435_p2");
    sc_trace(mVcdFile, cc_reg_673, "cc_reg_673");
    sc_trace(mVcdFile, exitcond2_fu_423_p2, "exitcond2_fu_423_p2");
    sc_trace(mVcdFile, src_load_2_reg_688, "src_load_2_reg_688");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, imKernel_load_reg_693, "imKernel_load_reg_693");
    sc_trace(mVcdFile, max_val_3_fu_522_p3, "max_val_3_fu_522_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, r_3_fu_536_p2, "r_3_fu_536_p2");
    sc_trace(mVcdFile, r_3_reg_706, "r_3_reg_706");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_158_cast_fu_550_p1, "tmp_158_cast_fu_550_p1");
    sc_trace(mVcdFile, tmp_158_cast_reg_711, "tmp_158_cast_reg_711");
    sc_trace(mVcdFile, exitcond1_fu_530_p2, "exitcond1_fu_530_p2");
    sc_trace(mVcdFile, c_2_fu_560_p2, "c_2_fu_560_p2");
    sc_trace(mVcdFile, c_2_reg_719, "c_2_reg_719");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_159_cast_fu_575_p1, "tmp_159_cast_fu_575_p1");
    sc_trace(mVcdFile, tmp_159_cast_reg_724, "tmp_159_cast_reg_724");
    sc_trace(mVcdFile, exitcond_fu_554_p2, "exitcond_fu_554_p2");
    sc_trace(mVcdFile, tmp_address0, "tmp_address0");
    sc_trace(mVcdFile, tmp_ce0, "tmp_ce0");
    sc_trace(mVcdFile, tmp_we0, "tmp_we0");
    sc_trace(mVcdFile, tmp_d0, "tmp_d0");
    sc_trace(mVcdFile, tmp_q0, "tmp_q0");
    sc_trace(mVcdFile, r_reg_123, "r_reg_123");
    sc_trace(mVcdFile, c_reg_134, "c_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_reg_145, "i_reg_145");
    sc_trace(mVcdFile, r1_reg_156, "r1_reg_156");
    sc_trace(mVcdFile, exitcond4_fu_333_p2, "exitcond4_fu_333_p2");
    sc_trace(mVcdFile, exitcond6_fu_297_p2, "exitcond6_fu_297_p2");
    sc_trace(mVcdFile, c2_reg_167, "c2_reg_167");
    sc_trace(mVcdFile, max_val_reg_179, "max_val_reg_179");
    sc_trace(mVcdFile, kr_reg_191, "kr_reg_191");
    sc_trace(mVcdFile, max_val_1_reg_202, "max_val_1_reg_202");
    sc_trace(mVcdFile, kc_reg_214, "kc_reg_214");
    sc_trace(mVcdFile, r3_reg_225, "r3_reg_225");
    sc_trace(mVcdFile, c4_reg_236, "c4_reg_236");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_160_cast_fu_414_p1, "tmp_160_cast_fu_414_p1");
    sc_trace(mVcdFile, tmp_165_cast_fu_449_p1, "tmp_165_cast_fu_449_p1");
    sc_trace(mVcdFile, tmp_166_cast_fu_463_p1, "tmp_166_cast_fu_463_p1");
    sc_trace(mVcdFile, tmp_145_fu_400_p1, "tmp_145_fu_400_p1");
    sc_trace(mVcdFile, tmp_s_fu_259_p3, "tmp_s_fu_259_p3");
    sc_trace(mVcdFile, tmp_cast_fu_283_p1, "tmp_cast_fu_283_p1");
    sc_trace(mVcdFile, tmp_141_fu_287_p2, "tmp_141_fu_287_p2");
    sc_trace(mVcdFile, tmp_142_fu_321_p3, "tmp_142_fu_321_p3");
    sc_trace(mVcdFile, kr_cast9_fu_345_p1, "kr_cast9_fu_345_p1");
    sc_trace(mVcdFile, tmp_147_fu_366_p3, "tmp_147_fu_366_p3");
    sc_trace(mVcdFile, tmp_148_fu_382_p3, "tmp_148_fu_382_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_390_p1, "p_shl_cast_fu_390_p1");
    sc_trace(mVcdFile, tmp_137_cast_fu_378_p1, "tmp_137_cast_fu_378_p1");
    sc_trace(mVcdFile, tmp_136_cast_fu_405_p1, "tmp_136_cast_fu_405_p1");
    sc_trace(mVcdFile, tmp_146_fu_409_p2, "tmp_146_fu_409_p2");
    sc_trace(mVcdFile, kc_cast6_fu_419_p1, "kc_cast6_fu_419_p1");
    sc_trace(mVcdFile, tmp_138_cast_fu_440_p1, "tmp_138_cast_fu_440_p1");
    sc_trace(mVcdFile, tmp_151_fu_444_p2, "tmp_151_fu_444_p2");
    sc_trace(mVcdFile, tmp_139_cast_fu_454_p1, "tmp_139_cast_fu_454_p1");
    sc_trace(mVcdFile, tmp_152_fu_458_p2, "tmp_152_fu_458_p2");
    sc_trace(mVcdFile, tmp_132_fu_468_p2, "tmp_132_fu_468_p2");
    sc_trace(mVcdFile, tmp_195_cast_fu_480_p1, "tmp_195_cast_fu_480_p1");
    sc_trace(mVcdFile, tmp_197_cast_fu_483_p1, "tmp_197_cast_fu_483_p1");
    sc_trace(mVcdFile, max_val_5_fu_486_p2, "max_val_5_fu_486_p2");
    sc_trace(mVcdFile, max_val_5_cast_fu_496_p1, "max_val_5_cast_fu_496_p1");
    sc_trace(mVcdFile, tmp_140_fu_500_p2, "tmp_140_fu_500_p2");
    sc_trace(mVcdFile, max_val_5_cast3_fu_492_p1, "max_val_5_cast3_fu_492_p1");
    sc_trace(mVcdFile, tmp_153_fu_506_p1, "tmp_153_fu_506_p1");
    sc_trace(mVcdFile, val_0_max_val_1_fu_510_p3, "val_0_max_val_1_fu_510_p3");
    sc_trace(mVcdFile, tmp_150_fu_472_p3, "tmp_150_fu_472_p3");
    sc_trace(mVcdFile, val_0_max_val_1_cast_fu_518_p1, "val_0_max_val_1_cast_fu_518_p1");
    sc_trace(mVcdFile, tmp_143_fu_542_p3, "tmp_143_fu_542_p3");
    sc_trace(mVcdFile, tmp_134_cast_fu_566_p1, "tmp_134_cast_fu_566_p1");
    sc_trace(mVcdFile, tmp_144_fu_570_p2, "tmp_144_fu_570_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dilate::~dilate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete imKernel_U;
    delete sureBackground_U;
    delete tmp_U;
}

void dilate::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_309_p2.read()))) {
        c2_reg_167 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_349_p2.read(), ap_const_lv1_1))) {
        c2_reg_167 = c_3_reg_636.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_530_p2.read()))) {
        c4_reg_236 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        c4_reg_236 = c_2_reg_719.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_247_p2.read(), ap_const_lv1_0))) {
        c_reg_134 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_reg_134 = c_1_reg_596.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_247_p2.read(), ap_const_lv1_1))) {
        i_reg_145 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_530_p2.read(), ap_const_lv1_1))) {
        i_reg_145 = i_14_reg_614.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_349_p2.read()))) {
        kc_reg_214 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        kc_reg_214 = kc_1_reg_668.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_333_p2.read()))) {
        kr_reg_191 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_423_p2.read(), ap_const_lv1_1))) {
        kr_reg_191 = kr_1_reg_645.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_349_p2.read()))) {
        max_val_1_reg_202 = max_val_reg_179.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        max_val_1_reg_202 = max_val_3_fu_522_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_333_p2.read()))) {
        max_val_reg_179 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_423_p2.read(), ap_const_lv1_1))) {
        max_val_reg_179 = max_val_1_reg_202.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_297_p2.read()))) {
        r1_reg_156 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_333_p2.read()))) {
        r1_reg_156 = r_2_reg_622.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_309_p2.read(), ap_const_lv1_1))) {
        r3_reg_225 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_554_p2.read(), ap_const_lv1_1))) {
        r3_reg_225 = r_3_reg_706.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_271_p2.read(), ap_const_lv1_1))) {
        r_reg_123 = r_1_reg_583.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_reg_123 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_1_reg_596 = c_1_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        c_2_reg_719 = c_2_fu_560_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_3_reg_636 = c_3_fu_339_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_423_p2.read()))) {
        cc_reg_673 = cc_fu_435_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_14_reg_614 = i_14_fu_303_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        imKernel_load_reg_693 = imKernel_q0.read();
        src_load_2_reg_688 = src_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        kc_1_reg_668 = kc_1_fu_429_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        kr_1_reg_645 = kr_1_fu_355_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_1_reg_583 = r_1_fu_253_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_2_reg_622 = r_2_fu_315_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_3_reg_706 = r_3_fu_536_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_349_p2.read()))) {
        rr_reg_650 = rr_fu_361_p2.read();
        tmp_149_reg_660 = tmp_149_fu_394_p2.read();
        tmp_162_cast_reg_655 = tmp_162_cast_fu_374_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond8_fu_247_p2.read(), ap_const_lv1_0))) {
        tmp_153_cast_reg_588 = tmp_153_cast_fu_267_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_271_p2.read()))) {
        tmp_154_cast_reg_601 = tmp_154_cast_fu_292_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_309_p2.read()))) {
        tmp_156_cast_reg_628 = tmp_156_cast_fu_329_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_530_p2.read()))) {
        tmp_158_cast_reg_711 = tmp_158_cast_fu_550_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_554_p2.read()))) {
        tmp_159_cast_reg_724 = tmp_159_cast_fu_575_p1.read();
    }
}

void dilate::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dilate::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void dilate::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void dilate::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void dilate::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void dilate::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void dilate::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dilate::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dilate::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dilate::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dilate::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dilate::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dilate::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dilate::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void dilate::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_297_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dilate::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dilate::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_297_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dilate::thread_c_1_fu_277_p2() {
    c_1_fu_277_p2 = (!c_reg_134.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(c_reg_134.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dilate::thread_c_2_fu_560_p2() {
    c_2_fu_560_p2 = (!c4_reg_236.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(c4_reg_236.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dilate::thread_c_3_fu_339_p2() {
    c_3_fu_339_p2 = (!c2_reg_167.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(c2_reg_167.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dilate::thread_cc_fu_435_p2() {
    cc_fu_435_p2 = (!kc_cast6_fu_419_p1.read().is_01() || !c_3_reg_636.read().is_01())? sc_lv<10>(): (sc_biguint<10>(kc_cast6_fu_419_p1.read()) + sc_biguint<10>(c_3_reg_636.read()));
}

void dilate::thread_exitcond1_fu_530_p2() {
    exitcond1_fu_530_p2 = (!r3_reg_225.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(r3_reg_225.read() == ap_const_lv10_200);
}

void dilate::thread_exitcond2_fu_423_p2() {
    exitcond2_fu_423_p2 = (!kc_reg_214.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(kc_reg_214.read() == ap_const_lv2_3);
}

void dilate::thread_exitcond3_fu_349_p2() {
    exitcond3_fu_349_p2 = (!kr_reg_191.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(kr_reg_191.read() == ap_const_lv2_3);
}

void dilate::thread_exitcond4_fu_333_p2() {
    exitcond4_fu_333_p2 = (!c2_reg_167.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(c2_reg_167.read() == ap_const_lv10_200);
}

void dilate::thread_exitcond5_fu_309_p2() {
    exitcond5_fu_309_p2 = (!r1_reg_156.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(r1_reg_156.read() == ap_const_lv10_200);
}

void dilate::thread_exitcond6_fu_297_p2() {
    exitcond6_fu_297_p2 = (!i_reg_145.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_145.read() == ap_const_lv2_2);
}

void dilate::thread_exitcond7_fu_271_p2() {
    exitcond7_fu_271_p2 = (!c_reg_134.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(c_reg_134.read() == ap_const_lv10_200);
}

void dilate::thread_exitcond8_fu_247_p2() {
    exitcond8_fu_247_p2 = (!r_reg_123.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(r_reg_123.read() == ap_const_lv10_200);
}

void dilate::thread_exitcond_fu_554_p2() {
    exitcond_fu_554_p2 = (!c4_reg_236.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(c4_reg_236.read() == ap_const_lv10_200);
}

void dilate::thread_i_14_fu_303_p2() {
    i_14_fu_303_p2 = (!i_reg_145.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_145.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dilate::thread_imKernel_address0() {
    imKernel_address0 =  (sc_lv<4>) (tmp_166_cast_fu_463_p1.read());
}

void dilate::thread_imKernel_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        imKernel_ce0 = ap_const_logic_1;
    } else {
        imKernel_ce0 = ap_const_logic_0;
    }
}

void dilate::thread_kc_1_fu_429_p2() {
    kc_1_fu_429_p2 = (!kc_reg_214.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(kc_reg_214.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dilate::thread_kc_cast6_fu_419_p1() {
    kc_cast6_fu_419_p1 = esl_zext<10,2>(kc_reg_214.read());
}

void dilate::thread_kr_1_fu_355_p2() {
    kr_1_fu_355_p2 = (!kr_reg_191.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(kr_reg_191.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dilate::thread_kr_cast9_fu_345_p1() {
    kr_cast9_fu_345_p1 = esl_zext<10,2>(kr_reg_191.read());
}

void dilate::thread_max_val_3_fu_522_p3() {
    max_val_3_fu_522_p3 = (!tmp_150_fu_472_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_150_fu_472_p3.read()[0].to_bool())? max_val_1_reg_202.read(): val_0_max_val_1_cast_fu_518_p1.read());
}

void dilate::thread_max_val_5_cast3_fu_492_p1() {
    max_val_5_cast3_fu_492_p1 = esl_zext<31,9>(max_val_5_fu_486_p2.read());
}

void dilate::thread_max_val_5_cast_fu_496_p1() {
    max_val_5_cast_fu_496_p1 = esl_zext<32,9>(max_val_5_fu_486_p2.read());
}

void dilate::thread_max_val_5_fu_486_p2() {
    max_val_5_fu_486_p2 = (!tmp_195_cast_fu_480_p1.read().is_01() || !tmp_197_cast_fu_483_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_195_cast_fu_480_p1.read()) + sc_biguint<9>(tmp_197_cast_fu_483_p1.read()));
}

void dilate::thread_p_shl_cast_fu_390_p1() {
    p_shl_cast_fu_390_p1 = esl_zext<5,4>(tmp_148_fu_382_p3.read());
}

void dilate::thread_r_1_fu_253_p2() {
    r_1_fu_253_p2 = (!r_reg_123.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(r_reg_123.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dilate::thread_r_2_fu_315_p2() {
    r_2_fu_315_p2 = (!r1_reg_156.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(r1_reg_156.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dilate::thread_r_3_fu_536_p2() {
    r_3_fu_536_p2 = (!r3_reg_225.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(r3_reg_225.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void dilate::thread_rr_fu_361_p2() {
    rr_fu_361_p2 = (!r_2_reg_622.read().is_01() || !kr_cast9_fu_345_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(r_2_reg_622.read()) + sc_biguint<10>(kr_cast9_fu_345_p1.read()));
}

void dilate::thread_src_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        src_address0 =  (sc_lv<18>) (tmp_165_cast_fu_449_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        src_address0 =  (sc_lv<18>) (tmp_154_cast_fu_292_p1.read());
    } else {
        src_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void dilate::thread_src_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        src_ce0 = ap_const_logic_1;
    } else {
        src_ce0 = ap_const_logic_0;
    }
}

void dilate::thread_sureBackground_address0() {
    sureBackground_address0 =  (sc_lv<18>) (tmp_159_cast_reg_724.read());
}

void dilate::thread_sureBackground_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sureBackground_ce0 = ap_const_logic_1;
    } else {
        sureBackground_ce0 = ap_const_logic_0;
    }
}

void dilate::thread_sureBackground_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sureBackground_we0 = ap_const_logic_1;
    } else {
        sureBackground_we0 = ap_const_logic_0;
    }
}

void dilate::thread_tmp_132_fu_468_p2() {
    tmp_132_fu_468_p2 = (rr_reg_650.read() | cc_reg_673.read());
}

void dilate::thread_tmp_134_cast_fu_566_p1() {
    tmp_134_cast_fu_566_p1 = esl_zext<20,10>(c4_reg_236.read());
}

void dilate::thread_tmp_136_cast_fu_405_p1() {
    tmp_136_cast_fu_405_p1 = esl_zext<20,10>(c2_reg_167.read());
}

void dilate::thread_tmp_137_cast_fu_378_p1() {
    tmp_137_cast_fu_378_p1 = esl_zext<5,2>(kr_reg_191.read());
}

void dilate::thread_tmp_138_cast_fu_440_p1() {
    tmp_138_cast_fu_440_p1 = esl_zext<20,10>(cc_fu_435_p2.read());
}

void dilate::thread_tmp_139_cast_fu_454_p1() {
    tmp_139_cast_fu_454_p1 = esl_zext<5,2>(kc_reg_214.read());
}

void dilate::thread_tmp_140_fu_500_p2() {
    tmp_140_fu_500_p2 = (!max_val_5_cast_fu_496_p1.read().is_01() || !max_val_1_reg_202.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_val_5_cast_fu_496_p1.read()) > sc_bigint<32>(max_val_1_reg_202.read()));
}

void dilate::thread_tmp_141_fu_287_p2() {
    tmp_141_fu_287_p2 = (!tmp_153_cast_reg_588.read().is_01() || !tmp_cast_fu_283_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_153_cast_reg_588.read()) + sc_biguint<20>(tmp_cast_fu_283_p1.read()));
}

void dilate::thread_tmp_142_fu_321_p3() {
    tmp_142_fu_321_p3 = esl_concat<10,9>(r1_reg_156.read(), ap_const_lv9_0);
}

void dilate::thread_tmp_143_fu_542_p3() {
    tmp_143_fu_542_p3 = esl_concat<10,9>(r3_reg_225.read(), ap_const_lv9_0);
}

void dilate::thread_tmp_144_fu_570_p2() {
    tmp_144_fu_570_p2 = (!tmp_158_cast_reg_711.read().is_01() || !tmp_134_cast_fu_566_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_158_cast_reg_711.read()) + sc_biguint<20>(tmp_134_cast_fu_566_p1.read()));
}

void dilate::thread_tmp_145_fu_400_p1() {
    tmp_145_fu_400_p1 = max_val_reg_179.read().range(8-1, 0);
}

void dilate::thread_tmp_146_fu_409_p2() {
    tmp_146_fu_409_p2 = (!tmp_156_cast_reg_628.read().is_01() || !tmp_136_cast_fu_405_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_156_cast_reg_628.read()) + sc_biguint<20>(tmp_136_cast_fu_405_p1.read()));
}

void dilate::thread_tmp_147_fu_366_p3() {
    tmp_147_fu_366_p3 = esl_concat<10,9>(rr_fu_361_p2.read(), ap_const_lv9_0);
}

void dilate::thread_tmp_148_fu_382_p3() {
    tmp_148_fu_382_p3 = esl_concat<2,2>(kr_reg_191.read(), ap_const_lv2_0);
}

void dilate::thread_tmp_149_fu_394_p2() {
    tmp_149_fu_394_p2 = (!p_shl_cast_fu_390_p1.read().is_01() || !tmp_137_cast_fu_378_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_390_p1.read()) - sc_biguint<5>(tmp_137_cast_fu_378_p1.read()));
}

void dilate::thread_tmp_150_fu_472_p3() {
    tmp_150_fu_472_p3 = tmp_132_fu_468_p2.read().range(9, 9);
}

void dilate::thread_tmp_151_fu_444_p2() {
    tmp_151_fu_444_p2 = (!tmp_138_cast_fu_440_p1.read().is_01() || !tmp_162_cast_reg_655.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_138_cast_fu_440_p1.read()) + sc_biguint<20>(tmp_162_cast_reg_655.read()));
}

void dilate::thread_tmp_152_fu_458_p2() {
    tmp_152_fu_458_p2 = (!tmp_139_cast_fu_454_p1.read().is_01() || !tmp_149_reg_660.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_139_cast_fu_454_p1.read()) + sc_biguint<5>(tmp_149_reg_660.read()));
}

void dilate::thread_tmp_153_cast_fu_267_p1() {
    tmp_153_cast_fu_267_p1 = esl_zext<20,19>(tmp_s_fu_259_p3.read());
}

void dilate::thread_tmp_153_fu_506_p1() {
    tmp_153_fu_506_p1 = max_val_1_reg_202.read().range(31-1, 0);
}

void dilate::thread_tmp_154_cast_fu_292_p1() {
    tmp_154_cast_fu_292_p1 = esl_zext<64,20>(tmp_141_fu_287_p2.read());
}

void dilate::thread_tmp_156_cast_fu_329_p1() {
    tmp_156_cast_fu_329_p1 = esl_zext<20,19>(tmp_142_fu_321_p3.read());
}

void dilate::thread_tmp_158_cast_fu_550_p1() {
    tmp_158_cast_fu_550_p1 = esl_zext<20,19>(tmp_143_fu_542_p3.read());
}

void dilate::thread_tmp_159_cast_fu_575_p1() {
    tmp_159_cast_fu_575_p1 = esl_zext<64,20>(tmp_144_fu_570_p2.read());
}

void dilate::thread_tmp_160_cast_fu_414_p1() {
    tmp_160_cast_fu_414_p1 = esl_zext<64,20>(tmp_146_fu_409_p2.read());
}

void dilate::thread_tmp_162_cast_fu_374_p1() {
    tmp_162_cast_fu_374_p1 = esl_zext<20,19>(tmp_147_fu_366_p3.read());
}

void dilate::thread_tmp_165_cast_fu_449_p1() {
    tmp_165_cast_fu_449_p1 = esl_zext<64,20>(tmp_151_fu_444_p2.read());
}

void dilate::thread_tmp_166_cast_fu_463_p1() {
    tmp_166_cast_fu_463_p1 = esl_sext<64,5>(tmp_152_fu_458_p2.read());
}

void dilate::thread_tmp_195_cast_fu_480_p1() {
    tmp_195_cast_fu_480_p1 = esl_zext<9,8>(src_load_2_reg_688.read());
}

void dilate::thread_tmp_197_cast_fu_483_p1() {
    tmp_197_cast_fu_483_p1 = esl_zext<9,1>(imKernel_load_reg_693.read());
}

void dilate::thread_tmp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        tmp_address0 =  (sc_lv<18>) (tmp_159_cast_fu_575_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_address0 =  (sc_lv<18>) (tmp_160_cast_fu_414_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_address0 =  (sc_lv<18>) (tmp_154_cast_reg_601.read());
    } else {
        tmp_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void dilate::thread_tmp_cast_fu_283_p1() {
    tmp_cast_fu_283_p1 = esl_zext<20,10>(c_reg_134.read());
}

void dilate::thread_tmp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_ce0 = ap_const_logic_1;
    } else {
        tmp_ce0 = ap_const_logic_0;
    }
}

void dilate::thread_tmp_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_d0 = tmp_145_fu_400_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_d0 = src_q0.read();
    } else {
        tmp_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void dilate::thread_tmp_s_fu_259_p3() {
    tmp_s_fu_259_p3 = esl_concat<10,9>(r_reg_123.read(), ap_const_lv9_0);
}

void dilate::thread_tmp_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_349_p2.read(), ap_const_lv1_1)))) {
        tmp_we0 = ap_const_logic_1;
    } else {
        tmp_we0 = ap_const_logic_0;
    }
}

void dilate::thread_val_0_max_val_1_cast_fu_518_p1() {
    val_0_max_val_1_cast_fu_518_p1 = esl_zext<32,31>(val_0_max_val_1_fu_510_p3.read());
}

void dilate::thread_val_0_max_val_1_fu_510_p3() {
    val_0_max_val_1_fu_510_p3 = (!tmp_140_fu_500_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_140_fu_500_p2.read()[0].to_bool())? max_val_5_cast3_fu_492_p1.read(): tmp_153_fu_506_p1.read());
}

void dilate::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond8_fu_247_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond7_fu_271_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_297_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond5_fu_309_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_333_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond3_fu_349_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(exitcond2_fu_423_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond1_fu_530_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond_fu_554_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

