// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module distanceTransform (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outputImage_address0,
        outputImage_ce0,
        outputImage_we0,
        outputImage_d0,
        outputImage_q0,
        outputImage_address1,
        outputImage_ce1,
        outputImage_we1,
        outputImage_d1,
        outputImage_q1,
        morphOpening_address0,
        morphOpening_ce0,
        morphOpening_q0
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_state3 = 54'd4;
parameter    ap_ST_fsm_state4 = 54'd8;
parameter    ap_ST_fsm_state5 = 54'd16;
parameter    ap_ST_fsm_state6 = 54'd32;
parameter    ap_ST_fsm_state7 = 54'd64;
parameter    ap_ST_fsm_state8 = 54'd128;
parameter    ap_ST_fsm_state9 = 54'd256;
parameter    ap_ST_fsm_state10 = 54'd512;
parameter    ap_ST_fsm_state11 = 54'd1024;
parameter    ap_ST_fsm_state12 = 54'd2048;
parameter    ap_ST_fsm_state13 = 54'd4096;
parameter    ap_ST_fsm_state14 = 54'd8192;
parameter    ap_ST_fsm_state15 = 54'd16384;
parameter    ap_ST_fsm_state16 = 54'd32768;
parameter    ap_ST_fsm_state17 = 54'd65536;
parameter    ap_ST_fsm_state18 = 54'd131072;
parameter    ap_ST_fsm_state19 = 54'd262144;
parameter    ap_ST_fsm_state20 = 54'd524288;
parameter    ap_ST_fsm_state21 = 54'd1048576;
parameter    ap_ST_fsm_state22 = 54'd2097152;
parameter    ap_ST_fsm_state23 = 54'd4194304;
parameter    ap_ST_fsm_state24 = 54'd8388608;
parameter    ap_ST_fsm_state25 = 54'd16777216;
parameter    ap_ST_fsm_state26 = 54'd33554432;
parameter    ap_ST_fsm_state27 = 54'd67108864;
parameter    ap_ST_fsm_state28 = 54'd134217728;
parameter    ap_ST_fsm_state29 = 54'd268435456;
parameter    ap_ST_fsm_state30 = 54'd536870912;
parameter    ap_ST_fsm_state31 = 54'd1073741824;
parameter    ap_ST_fsm_state32 = 54'd2147483648;
parameter    ap_ST_fsm_state33 = 54'd4294967296;
parameter    ap_ST_fsm_state34 = 54'd8589934592;
parameter    ap_ST_fsm_state35 = 54'd17179869184;
parameter    ap_ST_fsm_state36 = 54'd34359738368;
parameter    ap_ST_fsm_state37 = 54'd68719476736;
parameter    ap_ST_fsm_state38 = 54'd137438953472;
parameter    ap_ST_fsm_state39 = 54'd274877906944;
parameter    ap_ST_fsm_state40 = 54'd549755813888;
parameter    ap_ST_fsm_state41 = 54'd1099511627776;
parameter    ap_ST_fsm_state42 = 54'd2199023255552;
parameter    ap_ST_fsm_state43 = 54'd4398046511104;
parameter    ap_ST_fsm_state44 = 54'd8796093022208;
parameter    ap_ST_fsm_state45 = 54'd17592186044416;
parameter    ap_ST_fsm_state46 = 54'd35184372088832;
parameter    ap_ST_fsm_state47 = 54'd70368744177664;
parameter    ap_ST_fsm_state48 = 54'd140737488355328;
parameter    ap_ST_fsm_state49 = 54'd281474976710656;
parameter    ap_ST_fsm_state50 = 54'd562949953421312;
parameter    ap_ST_fsm_state51 = 54'd1125899906842624;
parameter    ap_ST_fsm_state52 = 54'd2251799813685248;
parameter    ap_ST_fsm_state53 = 54'd4503599627370496;
parameter    ap_ST_fsm_state54 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [17:0] outputImage_address0;
output   outputImage_ce0;
output   outputImage_we0;
output  [31:0] outputImage_d0;
input  [31:0] outputImage_q0;
output  [17:0] outputImage_address1;
output   outputImage_ce1;
output   outputImage_we1;
output  [31:0] outputImage_d1;
input  [31:0] outputImage_q1;
output  [17:0] morphOpening_address0;
output   morphOpening_ce0;
input  [7:0] morphOpening_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[17:0] outputImage_address0;
reg outputImage_ce0;
reg outputImage_we0;
reg[31:0] outputImage_d0;
reg[17:0] outputImage_address1;
reg outputImage_ce1;
reg outputImage_we1;
reg[31:0] outputImage_d1;
reg morphOpening_ce0;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_274;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire   [31:0] grp_fu_235_p2;
reg   [31:0] reg_281;
reg   [31:0] reg_288;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state44;
reg   [31:0] reg_295;
wire   [63:0] grp_fu_243_p1;
reg   [63:0] reg_302;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state52;
wire   [63:0] grp_fu_252_p2;
reg   [63:0] reg_308;
wire   [31:0] grp_fu_240_p1;
reg   [31:0] reg_314;
wire    ap_CS_fsm_state28;
wire   [0:0] tmp_91_fu_744_p2;
wire    ap_CS_fsm_state53;
wire   [0:0] tmp_130_fu_1144_p2;
wire   [9:0] i_13_fu_325_p2;
reg   [9:0] i_13_reg_1159;
wire    ap_CS_fsm_state2;
wire   [19:0] tmp_98_cast_fu_339_p1;
reg   [19:0] tmp_98_cast_reg_1164;
wire   [0:0] exitcond3_fu_319_p2;
wire   [9:0] j_12_fu_349_p2;
wire    ap_CS_fsm_state3;
wire   [9:0] y_fu_375_p2;
reg   [9:0] y_reg_1180;
wire    ap_CS_fsm_state4;
wire   [19:0] tmp_103_cast_fu_389_p1;
reg   [19:0] tmp_103_cast_reg_1185;
wire   [0:0] exitcond1_fu_369_p2;
wire   [0:0] tmp_s_fu_393_p2;
reg   [0:0] tmp_s_reg_1191;
wire  signed [19:0] tmp_135_cast_fu_413_p1;
reg  signed [19:0] tmp_135_cast_reg_1196;
wire   [9:0] x_2_fu_423_p2;
reg   [9:0] x_2_reg_1205;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond_fu_417_p2;
reg   [17:0] outputImage_addr_1_reg_1215;
reg   [17:0] outputImage_addr_5_reg_1221;
wire   [0:0] tmp_100_fu_454_p2;
reg   [0:0] tmp_100_reg_1226;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_102_fu_460_p2;
reg   [0:0] tmp_102_reg_1230;
wire   [0:0] or_cond_fu_648_p2;
reg   [0:0] or_cond_reg_1246;
wire    ap_CS_fsm_state20;
reg   [0:0] tmp_91_reg_1255;
wire  signed [19:0] tmp_139_cast_fu_766_p1;
reg  signed [19:0] tmp_139_cast_reg_1262;
wire    ap_CS_fsm_state30;
wire   [0:0] tmp_86_fu_750_p3;
wire   [0:0] tmp_95_fu_770_p2;
reg   [0:0] tmp_95_reg_1270;
wire   [19:0] tmp_141_cast_fu_790_p1;
reg   [19:0] tmp_141_cast_reg_1275;
wire   [0:0] tmp_103_fu_802_p2;
reg   [0:0] tmp_103_reg_1284;
wire    ap_CS_fsm_state31;
wire   [0:0] tmp_101_fu_794_p3;
wire   [9:0] y_2_fu_822_p2;
reg   [17:0] outputImage_addr_3_reg_1299;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
reg   [17:0] outputImage_addr_7_reg_1313;
wire   [0:0] or_cond4_fu_1034_p2;
reg   [0:0] or_cond4_reg_1322;
wire    ap_CS_fsm_state45;
reg   [17:0] outputImage_addr_10_reg_1331;
reg   [0:0] tmp_130_reg_1337;
wire   [9:0] x_fu_1150_p2;
wire    ap_CS_fsm_state54;
reg   [9:0] i_reg_166;
wire   [0:0] exitcond2_fu_343_p2;
reg   [9:0] j_reg_177;
reg   [9:0] y1_assign_reg_188;
reg   [9:0] x1_assign_reg_199;
wire    ap_CS_fsm_state29;
reg   [9:0] y1_assign_1_reg_211;
wire   [9:0] ap_phi_mux_x1_assign_1_phi_fu_227_p4;
reg   [9:0] x1_assign_1_reg_223;
wire   [63:0] tmp_136_cast_fu_364_p1;
wire   [63:0] tmp_142_cast_fu_438_p1;
wire  signed [63:0] tmp_143_cast_fu_449_p1;
wire   [63:0] tmp_144_cast_fu_475_p1;
wire  signed [63:0] tmp_149_cast_fu_661_p1;
wire   [63:0] tmp_145_cast_fu_817_p1;
wire   [63:0] tmp_146_cast_fu_837_p1;
wire   [63:0] tmp_147_cast_fu_935_p1;
wire   [63:0] tmp_148_cast_fu_945_p1;
wire   [63:0] tmp_150_cast_fu_1047_p1;
wire   [63:0] tmp_151_cast_fu_1061_p1;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_55_fu_558_p2;
wire    ap_CS_fsm_state18;
wire   [0:0] tmp_73_fu_642_p2;
wire    ap_CS_fsm_state26;
wire   [0:0] tmp_64_fu_920_p2;
wire    ap_CS_fsm_state43;
wire   [0:0] tmp_82_fu_1028_p2;
wire    ap_CS_fsm_state51;
reg   [31:0] grp_fu_235_p0;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state40;
reg   [31:0] grp_fu_243_p0;
reg   [31:0] grp_fu_248_p0;
reg   [31:0] grp_fu_248_p1;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state47;
reg   [9:0] grp_fu_267_p1;
wire   [18:0] tmp_fu_331_p3;
wire   [19:0] tmp_97_cast_fu_355_p1;
wire   [19:0] tmp_84_fu_359_p2;
wire   [18:0] tmp_75_fu_381_p3;
wire   [9:0] y2_assign_fu_399_p2;
wire   [18:0] tmp_77_fu_405_p3;
wire   [19:0] tmp_102_cast_fu_429_p1;
wire   [19:0] tmp_98_fu_433_p2;
wire   [19:0] tmp_99_fu_444_p2;
wire   [9:0] grp_fu_261_p2;
wire   [19:0] tmp_109_cast_fu_466_p1;
wire   [19:0] tmp_105_fu_470_p2;
wire   [31:0] tmp_155_to_int_fu_480_p1;
wire   [31:0] outputImage_load_1_t_fu_498_p1;
wire   [7:0] tmp_47_fu_484_p4;
wire   [22:0] tmp_107_fu_494_p1;
wire   [0:0] notrhs5_fu_522_p2;
wire   [0:0] notlhs6_fu_516_p2;
wire   [7:0] tmp_49_fu_502_p4;
wire   [22:0] tmp_108_fu_512_p1;
wire   [0:0] notrhs7_fu_540_p2;
wire   [0:0] notlhs8_fu_534_p2;
wire   [0:0] tmp_51_fu_528_p2;
wire   [0:0] tmp_52_fu_546_p2;
wire   [0:0] tmp_53_fu_552_p2;
wire   [0:0] grp_fu_248_p2;
wire   [31:0] tmp_162_to_int_fu_564_p1;
wire   [31:0] outputImage_load_5_t_fu_582_p1;
wire   [7:0] tmp_65_fu_568_p4;
wire   [22:0] tmp_116_fu_578_p1;
wire   [0:0] notrhs8_fu_606_p2;
wire   [0:0] notlhs7_fu_600_p2;
wire   [7:0] tmp_67_fu_586_p4;
wire   [22:0] tmp_118_fu_596_p1;
wire   [0:0] notrhs2_fu_624_p2;
wire   [0:0] notlhs9_fu_618_p2;
wire   [0:0] tmp_69_fu_612_p2;
wire   [0:0] tmp_70_fu_630_p2;
wire   [0:0] tmp_71_fu_636_p2;
wire   [19:0] tmp_118_cast_fu_652_p1;
wire   [19:0] tmp_135_fu_656_p2;
wire   [63:0] tmp_170_to_int_fu_666_p1;
wire   [63:0] tmp_171_to_int_fu_684_p1;
wire   [10:0] tmp_83_fu_670_p4;
wire   [51:0] tmp_136_fu_680_p1;
wire   [0:0] notrhs_fu_708_p2;
wire   [0:0] notlhs_fu_702_p2;
wire   [10:0] tmp_85_fu_688_p4;
wire   [51:0] tmp_137_fu_698_p1;
wire   [0:0] notrhs6_fu_726_p2;
wire   [0:0] notlhs5_fu_720_p2;
wire   [0:0] tmp_87_fu_714_p2;
wire   [0:0] tmp_88_fu_732_p2;
wire   [0:0] tmp_89_fu_738_p2;
wire   [0:0] grp_fu_257_p2;
wire   [18:0] tmp_93_fu_758_p3;
wire   [9:0] y2_assign_1_fu_776_p2;
wire   [18:0] tmp_97_fu_782_p3;
wire   [9:0] grp_fu_267_p2;
wire   [19:0] tmp_112_cast_fu_808_p1;
wire   [19:0] tmp_110_fu_812_p2;
wire   [19:0] tmp_114_cast_fu_828_p1;
wire   [19:0] tmp_112_fu_832_p2;
wire   [31:0] tmp_159_to_int_fu_842_p1;
wire   [31:0] outputImage_load_3_t_fu_860_p1;
wire   [7:0] tmp_56_fu_846_p4;
wire   [22:0] tmp_113_fu_856_p1;
wire   [0:0] notrhs9_fu_884_p2;
wire   [0:0] notlhs1_fu_878_p2;
wire   [7:0] tmp_58_fu_864_p4;
wire   [22:0] tmp_114_fu_874_p1;
wire   [0:0] notrhs1_fu_902_p2;
wire   [0:0] notlhs2_fu_896_p2;
wire   [0:0] tmp_60_fu_890_p2;
wire   [0:0] tmp_61_fu_908_p2;
wire   [0:0] tmp_62_fu_914_p2;
wire   [19:0] tmp_116_cast_fu_926_p1;
wire   [19:0] tmp_122_fu_930_p2;
wire   [19:0] tmp_125_fu_940_p2;
wire   [31:0] tmp_165_to_int_fu_950_p1;
wire   [31:0] outputImage_load_7_t_fu_968_p1;
wire   [7:0] tmp_74_fu_954_p4;
wire   [22:0] tmp_133_fu_964_p1;
wire   [0:0] notrhs3_fu_992_p2;
wire   [0:0] notlhs3_fu_986_p2;
wire   [7:0] tmp_76_fu_972_p4;
wire   [22:0] tmp_134_fu_982_p1;
wire   [0:0] notrhs4_fu_1010_p2;
wire   [0:0] notlhs4_fu_1004_p2;
wire   [0:0] tmp_78_fu_998_p2;
wire   [0:0] tmp_79_fu_1016_p2;
wire   [0:0] tmp_80_fu_1022_p2;
wire   [19:0] tmp_122_cast_fu_1038_p1;
wire   [19:0] tmp_138_fu_1042_p2;
wire   [19:0] tmp_125_cast_fu_1052_p1;
wire   [19:0] tmp_139_fu_1056_p2;
wire   [63:0] tmp_176_to_int_fu_1066_p1;
wire   [63:0] tmp_178_to_int_fu_1084_p1;
wire   [10:0] tmp_92_fu_1070_p4;
wire   [51:0] tmp_140_fu_1080_p1;
wire   [0:0] notrhs10_fu_1108_p2;
wire   [0:0] notlhs10_fu_1102_p2;
wire   [10:0] tmp_94_fu_1088_p4;
wire   [51:0] tmp_141_fu_1098_p1;
wire   [0:0] notrhs11_fu_1126_p2;
wire   [0:0] notlhs11_fu_1120_p2;
wire   [0:0] tmp_96_fu_1114_p2;
wire   [0:0] tmp_127_fu_1132_p2;
wire   [0:0] tmp_128_fu_1138_p2;
reg   [53:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
end

imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_235_p0),
    .din1(32'd1065353216),
    .ce(1'b1),
    .dout(grp_fu_235_p2)
);

imageProcessing_fptrunc_64ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
imageProcessing_fptrunc_64ns_32_1_1_U32(
    .din0(reg_308),
    .dout(grp_fu_240_p1)
);

imageProcessing_fpext_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
imageProcessing_fpext_32ns_64_1_1_U33(
    .din0(grp_fu_243_p0),
    .dout(grp_fu_243_p1)
);

imageProcessing_fcmp_32ns_32ns_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
imageProcessing_fcmp_32ns_32ns_1_1_1_U34(
    .din0(grp_fu_248_p0),
    .din1(grp_fu_248_p1),
    .opcode(5'd4),
    .dout(grp_fu_248_p2)
);

imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
imageProcessing_dadd_64ns_64ns_64_6_full_dsp_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_302),
    .din1(64'd4609047870845172685),
    .ce(1'b1),
    .dout(grp_fu_252_p2)
);

imageProcessing_dcmp_64ns_64ns_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
imageProcessing_dcmp_64ns_64ns_1_1_1_U36(
    .din0(reg_308),
    .din1(reg_302),
    .opcode(5'd4),
    .dout(grp_fu_257_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_343_p2 == 1'd1))) begin
        i_reg_166 <= i_13_reg_1159;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_166 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_177 <= 10'd0;
    end else if (((exitcond2_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_177 <= j_12_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        reg_274 <= outputImage_q1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_274 <= outputImage_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        reg_288 <= outputImage_q0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_288 <= outputImage_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_86_fu_750_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        x1_assign_1_reg_223 <= 10'd511;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        x1_assign_1_reg_223 <= x_fu_1150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_369_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_assign_reg_199 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        x1_assign_reg_199 <= x_2_reg_1205;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond1_fu_369_p2 == 1'd1))) begin
        y1_assign_1_reg_211 <= 10'd511;
    end else if (((1'b1 == ap_CS_fsm_state31) & (tmp_101_fu_794_p3 == 1'd1))) begin
        y1_assign_1_reg_211 <= y_2_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_319_p2 == 1'd1))) begin
        y1_assign_reg_188 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_417_p2 == 1'd1))) begin
        y1_assign_reg_188 <= y_reg_1180;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_13_reg_1159 <= i_13_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        or_cond4_reg_1322 <= or_cond4_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        or_cond_reg_1246 <= or_cond_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (or_cond4_fu_1034_p2 == 1'd1))) begin
        outputImage_addr_10_reg_1331 <= tmp_151_cast_fu_1061_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_417_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        outputImage_addr_1_reg_1215 <= tmp_142_cast_fu_438_p1;
        outputImage_addr_5_reg_1221 <= tmp_143_cast_fu_449_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        outputImage_addr_3_reg_1299 <= tmp_146_cast_fu_837_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (tmp_95_reg_1270 == 1'd1))) begin
        outputImage_addr_7_reg_1313 <= tmp_148_cast_fu_945_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_281 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_295 <= grp_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_302 <= grp_fu_243_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_308 <= grp_fu_252_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state53) & (tmp_130_fu_1144_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state28) & (tmp_91_fu_744_p2 == 1'd1)))) begin
        reg_314 <= grp_fu_240_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_100_reg_1226 <= tmp_100_fu_454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_100_fu_454_p2 == 1'd1))) begin
        tmp_102_reg_1230 <= tmp_102_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_369_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_103_cast_reg_1185[18 : 9] <= tmp_103_cast_fu_389_p1[18 : 9];
        tmp_135_cast_reg_1196[19 : 9] <= tmp_135_cast_fu_413_p1[19 : 9];
        tmp_s_reg_1191 <= tmp_s_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_101_fu_794_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        tmp_103_reg_1284 <= tmp_103_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_130_reg_1337 <= tmp_130_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_86_fu_750_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        tmp_139_cast_reg_1262[19 : 9] <= tmp_139_cast_fu_766_p1[19 : 9];
        tmp_141_cast_reg_1275[18 : 9] <= tmp_141_cast_fu_790_p1[18 : 9];
        tmp_95_reg_1270 <= tmp_95_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_91_reg_1255 <= tmp_91_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_98_cast_reg_1164[18 : 9] <= tmp_98_cast_fu_339_p1[18 : 9];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x_2_reg_1205 <= x_2_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        y_reg_1180 <= y_fu_375_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state30) & (tmp_86_fu_750_p3 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & (tmp_86_fu_750_p3 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_235_p0 = reg_288;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_235_p0 = reg_274;
    end else begin
        grp_fu_235_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_243_p0 = outputImage_q1;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_243_p0 = outputImage_q0;
    end else begin
        grp_fu_243_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_248_p0 = reg_295;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_248_p0 = reg_281;
    end else begin
        grp_fu_248_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_248_p1 = reg_288;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_248_p1 = reg_274;
    end else begin
        grp_fu_248_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_267_p1 = x1_assign_1_reg_223;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_267_p1 = ap_phi_mux_x1_assign_1_phi_fu_227_p4;
    end else begin
        grp_fu_267_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        morphOpening_ce0 = 1'b1;
    end else begin
        morphOpening_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        outputImage_address0 = outputImage_addr_10_reg_1331;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        outputImage_address0 = outputImage_addr_7_reg_1313;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        outputImage_address0 = tmp_147_cast_fu_935_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        outputImage_address0 = tmp_146_cast_fu_837_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        outputImage_address0 = tmp_149_cast_fu_661_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_102_fu_460_p2 == 1'd1) & (tmp_100_fu_454_p2 == 1'd1))) begin
        outputImage_address0 = tmp_144_cast_fu_475_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | ((tmp_100_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)))) begin
        outputImage_address0 = outputImage_addr_1_reg_1215;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        outputImage_address0 = tmp_136_cast_fu_364_p1;
    end else begin
        outputImage_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        outputImage_address1 = outputImage_addr_10_reg_1331;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        outputImage_address1 = tmp_150_cast_fu_1047_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        outputImage_address1 = outputImage_addr_7_reg_1313;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        outputImage_address1 = outputImage_addr_3_reg_1299;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        outputImage_address1 = tmp_145_cast_fu_817_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state20))) begin
        outputImage_address1 = outputImage_addr_1_reg_1215;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        outputImage_address1 = outputImage_addr_5_reg_1221;
    end else begin
        outputImage_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state3) | ((tmp_100_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_102_fu_460_p2 == 1'd1) & (tmp_100_fu_454_p2 == 1'd1)))) begin
        outputImage_ce0 = 1'b1;
    end else begin
        outputImage_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state20))) begin
        outputImage_ce1 = 1'b1;
    end else begin
        outputImage_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        outputImage_d0 = reg_295;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        outputImage_d0 = reg_281;
    end else if (((tmp_100_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        outputImage_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        outputImage_d0 = 32'd1232348160;
    end else begin
        outputImage_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        outputImage_d1 = reg_281;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state54))) begin
        outputImage_d1 = reg_314;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        outputImage_d1 = reg_295;
    end else begin
        outputImage_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (tmp_55_fu_558_p2 == 1'd1) & (tmp_102_reg_1230 == 1'd1)) | ((1'b1 == ap_CS_fsm_state45) & (tmp_82_fu_1028_p2 == 1'd1) & (tmp_95_reg_1270 == 1'd1)) | ((tmp_100_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((exitcond2_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        outputImage_we0 = 1'b1;
    end else begin
        outputImage_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state29) & (tmp_91_reg_1255 == 1'd1) & (or_cond_reg_1246 == 1'd1) & (tmp_100_reg_1226 == 1'd1)) | ((1'b1 == ap_CS_fsm_state54) & (tmp_130_reg_1337 == 1'd1) & (or_cond4_reg_1322 == 1'd1)) | ((1'b1 == ap_CS_fsm_state38) & (tmp_64_fu_920_p2 == 1'd1) & (tmp_103_reg_1284 == 1'd1)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_73_fu_642_p2 == 1'd1) & (tmp_s_reg_1191 == 1'd1)))) begin
        outputImage_we1 = 1'b1;
    end else begin
        outputImage_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_319_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond2_fu_343_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond1_fu_369_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_417_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_102_fu_460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_100_fu_454_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_102_fu_460_p2 == 1'd1) & (tmp_100_fu_454_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((tmp_s_reg_1191 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((or_cond_fu_648_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (tmp_86_fu_750_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (tmp_101_fu_794_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else if (((tmp_101_fu_794_p3 == 1'd0) & (tmp_103_fu_802_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((tmp_95_reg_1270 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((or_cond4_fu_1034_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_phi_mux_x1_assign_1_phi_fu_227_p4 = x1_assign_1_reg_223;

assign exitcond1_fu_369_p2 = ((y1_assign_reg_188 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond2_fu_343_p2 = ((j_reg_177 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond3_fu_319_p2 = ((i_reg_166 == 10'd512) ? 1'b1 : 1'b0);

assign exitcond_fu_417_p2 = ((x1_assign_reg_199 == 10'd512) ? 1'b1 : 1'b0);

assign grp_fu_261_p2 = ($signed(10'd1023) + $signed(x1_assign_reg_199));

assign grp_fu_267_p2 = (10'd1 + grp_fu_267_p1);

assign i_13_fu_325_p2 = (i_reg_166 + 10'd1);

assign j_12_fu_349_p2 = (j_reg_177 + 10'd1);

assign morphOpening_address0 = tmp_142_cast_fu_438_p1;

assign notlhs10_fu_1102_p2 = ((tmp_92_fu_1070_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs11_fu_1120_p2 = ((tmp_94_fu_1088_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs1_fu_878_p2 = ((tmp_56_fu_846_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_896_p2 = ((tmp_58_fu_864_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_986_p2 = ((tmp_74_fu_954_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_1004_p2 = ((tmp_76_fu_972_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_720_p2 = ((tmp_85_fu_688_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs6_fu_516_p2 = ((tmp_47_fu_484_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs7_fu_600_p2 = ((tmp_65_fu_568_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs8_fu_534_p2 = ((tmp_49_fu_502_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs9_fu_618_p2 = ((tmp_67_fu_586_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_702_p2 = ((tmp_83_fu_670_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notrhs10_fu_1108_p2 = ((tmp_140_fu_1080_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs11_fu_1126_p2 = ((tmp_141_fu_1098_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs1_fu_902_p2 = ((tmp_114_fu_874_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_624_p2 = ((tmp_118_fu_596_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_992_p2 = ((tmp_133_fu_964_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_1010_p2 = ((tmp_134_fu_982_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_522_p2 = ((tmp_107_fu_494_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_726_p2 = ((tmp_137_fu_698_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_540_p2 = ((tmp_108_fu_512_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_606_p2 = ((tmp_116_fu_578_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs9_fu_884_p2 = ((tmp_113_fu_856_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_708_p2 = ((tmp_136_fu_680_p1 == 52'd0) ? 1'b1 : 1'b0);

assign or_cond4_fu_1034_p2 = (tmp_95_reg_1270 & tmp_103_reg_1284);

assign or_cond_fu_648_p2 = (tmp_s_reg_1191 & tmp_102_reg_1230);

assign outputImage_load_1_t_fu_498_p1 = reg_274;

assign outputImage_load_3_t_fu_860_p1 = reg_274;

assign outputImage_load_5_t_fu_582_p1 = reg_288;

assign outputImage_load_7_t_fu_968_p1 = reg_288;

assign tmp_100_fu_454_p2 = ((morphOpening_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_101_fu_794_p3 = x1_assign_1_reg_223[32'd9];

assign tmp_102_cast_fu_429_p1 = x1_assign_reg_199;

assign tmp_102_fu_460_p2 = ((x1_assign_reg_199 != 10'd0) ? 1'b1 : 1'b0);

assign tmp_103_cast_fu_389_p1 = tmp_75_fu_381_p3;

assign tmp_103_fu_802_p2 = ((x1_assign_1_reg_223 != 10'd511) ? 1'b1 : 1'b0);

assign tmp_105_fu_470_p2 = (tmp_103_cast_reg_1185 + tmp_109_cast_fu_466_p1);

assign tmp_107_fu_494_p1 = tmp_155_to_int_fu_480_p1[22:0];

assign tmp_108_fu_512_p1 = outputImage_load_1_t_fu_498_p1[22:0];

assign tmp_109_cast_fu_466_p1 = grp_fu_261_p2;

assign tmp_110_fu_812_p2 = ($signed(tmp_139_cast_reg_1262) + $signed(tmp_112_cast_fu_808_p1));

assign tmp_112_cast_fu_808_p1 = grp_fu_267_p2;

assign tmp_112_fu_832_p2 = ($signed(tmp_139_cast_reg_1262) + $signed(tmp_114_cast_fu_828_p1));

assign tmp_113_fu_856_p1 = tmp_159_to_int_fu_842_p1[22:0];

assign tmp_114_cast_fu_828_p1 = x1_assign_1_reg_223;

assign tmp_114_fu_874_p1 = outputImage_load_3_t_fu_860_p1[22:0];

assign tmp_116_cast_fu_926_p1 = x1_assign_1_reg_223;

assign tmp_116_fu_578_p1 = tmp_162_to_int_fu_564_p1[22:0];

assign tmp_118_cast_fu_652_p1 = grp_fu_261_p2;

assign tmp_118_fu_596_p1 = outputImage_load_5_t_fu_582_p1[22:0];

assign tmp_122_cast_fu_1038_p1 = grp_fu_267_p2;

assign tmp_122_fu_930_p2 = (tmp_141_cast_reg_1275 + tmp_116_cast_fu_926_p1);

assign tmp_125_cast_fu_1052_p1 = x1_assign_1_reg_223;

assign tmp_125_fu_940_p2 = ($signed(tmp_139_cast_reg_1262) + $signed(tmp_116_cast_fu_926_p1));

assign tmp_127_fu_1132_p2 = (notrhs11_fu_1126_p2 | notlhs11_fu_1120_p2);

assign tmp_128_fu_1138_p2 = (tmp_96_fu_1114_p2 & tmp_127_fu_1132_p2);

assign tmp_130_fu_1144_p2 = (tmp_128_fu_1138_p2 & grp_fu_257_p2);

assign tmp_133_fu_964_p1 = tmp_165_to_int_fu_950_p1[22:0];

assign tmp_134_fu_982_p1 = outputImage_load_7_t_fu_968_p1[22:0];

assign tmp_135_cast_fu_413_p1 = $signed(tmp_77_fu_405_p3);

assign tmp_135_fu_656_p2 = ($signed(tmp_135_cast_reg_1196) + $signed(tmp_118_cast_fu_652_p1));

assign tmp_136_cast_fu_364_p1 = tmp_84_fu_359_p2;

assign tmp_136_fu_680_p1 = tmp_170_to_int_fu_666_p1[51:0];

assign tmp_137_fu_698_p1 = tmp_171_to_int_fu_684_p1[51:0];

assign tmp_138_fu_1042_p2 = (tmp_141_cast_reg_1275 + tmp_122_cast_fu_1038_p1);

assign tmp_139_cast_fu_766_p1 = $signed(tmp_93_fu_758_p3);

assign tmp_139_fu_1056_p2 = ($signed(tmp_139_cast_reg_1262) + $signed(tmp_125_cast_fu_1052_p1));

assign tmp_140_fu_1080_p1 = tmp_176_to_int_fu_1066_p1[51:0];

assign tmp_141_cast_fu_790_p1 = tmp_97_fu_782_p3;

assign tmp_141_fu_1098_p1 = tmp_178_to_int_fu_1084_p1[51:0];

assign tmp_142_cast_fu_438_p1 = tmp_98_fu_433_p2;

assign tmp_143_cast_fu_449_p1 = $signed(tmp_99_fu_444_p2);

assign tmp_144_cast_fu_475_p1 = tmp_105_fu_470_p2;

assign tmp_145_cast_fu_817_p1 = tmp_110_fu_812_p2;

assign tmp_146_cast_fu_837_p1 = tmp_112_fu_832_p2;

assign tmp_147_cast_fu_935_p1 = tmp_122_fu_930_p2;

assign tmp_148_cast_fu_945_p1 = tmp_125_fu_940_p2;

assign tmp_149_cast_fu_661_p1 = $signed(tmp_135_fu_656_p2);

assign tmp_150_cast_fu_1047_p1 = tmp_138_fu_1042_p2;

assign tmp_151_cast_fu_1061_p1 = tmp_139_fu_1056_p2;

assign tmp_155_to_int_fu_480_p1 = reg_281;

assign tmp_159_to_int_fu_842_p1 = reg_281;

assign tmp_162_to_int_fu_564_p1 = reg_295;

assign tmp_165_to_int_fu_950_p1 = reg_295;

assign tmp_170_to_int_fu_666_p1 = reg_308;

assign tmp_171_to_int_fu_684_p1 = reg_302;

assign tmp_176_to_int_fu_1066_p1 = reg_308;

assign tmp_178_to_int_fu_1084_p1 = reg_302;

assign tmp_47_fu_484_p4 = {{tmp_155_to_int_fu_480_p1[30:23]}};

assign tmp_49_fu_502_p4 = {{outputImage_load_1_t_fu_498_p1[30:23]}};

assign tmp_51_fu_528_p2 = (notrhs5_fu_522_p2 | notlhs6_fu_516_p2);

assign tmp_52_fu_546_p2 = (notrhs7_fu_540_p2 | notlhs8_fu_534_p2);

assign tmp_53_fu_552_p2 = (tmp_52_fu_546_p2 & tmp_51_fu_528_p2);

assign tmp_55_fu_558_p2 = (tmp_53_fu_552_p2 & grp_fu_248_p2);

assign tmp_56_fu_846_p4 = {{tmp_159_to_int_fu_842_p1[30:23]}};

assign tmp_58_fu_864_p4 = {{outputImage_load_3_t_fu_860_p1[30:23]}};

assign tmp_60_fu_890_p2 = (notrhs9_fu_884_p2 | notlhs1_fu_878_p2);

assign tmp_61_fu_908_p2 = (notrhs1_fu_902_p2 | notlhs2_fu_896_p2);

assign tmp_62_fu_914_p2 = (tmp_61_fu_908_p2 & tmp_60_fu_890_p2);

assign tmp_64_fu_920_p2 = (tmp_62_fu_914_p2 & grp_fu_248_p2);

assign tmp_65_fu_568_p4 = {{tmp_162_to_int_fu_564_p1[30:23]}};

assign tmp_67_fu_586_p4 = {{outputImage_load_5_t_fu_582_p1[30:23]}};

assign tmp_69_fu_612_p2 = (notrhs8_fu_606_p2 | notlhs7_fu_600_p2);

assign tmp_70_fu_630_p2 = (notrhs2_fu_624_p2 | notlhs9_fu_618_p2);

assign tmp_71_fu_636_p2 = (tmp_70_fu_630_p2 & tmp_69_fu_612_p2);

assign tmp_73_fu_642_p2 = (tmp_71_fu_636_p2 & grp_fu_248_p2);

assign tmp_74_fu_954_p4 = {{tmp_165_to_int_fu_950_p1[30:23]}};

assign tmp_75_fu_381_p3 = {{y1_assign_reg_188}, {9'd0}};

assign tmp_76_fu_972_p4 = {{outputImage_load_7_t_fu_968_p1[30:23]}};

assign tmp_77_fu_405_p3 = {{y2_assign_fu_399_p2}, {9'd0}};

assign tmp_78_fu_998_p2 = (notrhs3_fu_992_p2 | notlhs3_fu_986_p2);

assign tmp_79_fu_1016_p2 = (notrhs4_fu_1010_p2 | notlhs4_fu_1004_p2);

assign tmp_80_fu_1022_p2 = (tmp_79_fu_1016_p2 & tmp_78_fu_998_p2);

assign tmp_82_fu_1028_p2 = (tmp_80_fu_1022_p2 & grp_fu_248_p2);

assign tmp_83_fu_670_p4 = {{tmp_170_to_int_fu_666_p1[62:52]}};

assign tmp_84_fu_359_p2 = (tmp_98_cast_reg_1164 + tmp_97_cast_fu_355_p1);

assign tmp_85_fu_688_p4 = {{tmp_171_to_int_fu_684_p1[62:52]}};

assign tmp_86_fu_750_p3 = y1_assign_1_reg_211[32'd9];

assign tmp_87_fu_714_p2 = (notrhs_fu_708_p2 | notlhs_fu_702_p2);

assign tmp_88_fu_732_p2 = (notrhs6_fu_726_p2 | notlhs5_fu_720_p2);

assign tmp_89_fu_738_p2 = (tmp_88_fu_732_p2 & tmp_87_fu_714_p2);

assign tmp_91_fu_744_p2 = (tmp_89_fu_738_p2 & grp_fu_257_p2);

assign tmp_92_fu_1070_p4 = {{tmp_176_to_int_fu_1066_p1[62:52]}};

assign tmp_93_fu_758_p3 = {{y1_assign_1_reg_211}, {9'd0}};

assign tmp_94_fu_1088_p4 = {{tmp_178_to_int_fu_1084_p1[62:52]}};

assign tmp_95_fu_770_p2 = ((y1_assign_1_reg_211 != 10'd511) ? 1'b1 : 1'b0);

assign tmp_96_fu_1114_p2 = (notrhs10_fu_1108_p2 | notlhs10_fu_1102_p2);

assign tmp_97_cast_fu_355_p1 = j_reg_177;

assign tmp_97_fu_782_p3 = {{y2_assign_1_fu_776_p2}, {9'd0}};

assign tmp_98_cast_fu_339_p1 = tmp_fu_331_p3;

assign tmp_98_fu_433_p2 = (tmp_103_cast_reg_1185 + tmp_102_cast_fu_429_p1);

assign tmp_99_fu_444_p2 = ($signed(tmp_135_cast_reg_1196) + $signed(tmp_102_cast_fu_429_p1));

assign tmp_fu_331_p3 = {{i_reg_166}, {9'd0}};

assign tmp_s_fu_393_p2 = ((y1_assign_reg_188 != 10'd0) ? 1'b1 : 1'b0);

assign x_2_fu_423_p2 = (x1_assign_reg_199 + 10'd1);

assign x_fu_1150_p2 = ($signed(x1_assign_1_reg_223) + $signed(10'd1023));

assign y2_assign_1_fu_776_p2 = (y1_assign_1_reg_211 + 10'd1);

assign y2_assign_fu_399_p2 = ($signed(y1_assign_reg_188) + $signed(10'd1023));

assign y_2_fu_822_p2 = ($signed(y1_assign_1_reg_211) + $signed(10'd1023));

assign y_fu_375_p2 = (y1_assign_reg_188 + 10'd1);

always @ (posedge ap_clk) begin
    tmp_98_cast_reg_1164[8:0] <= 9'b000000000;
    tmp_98_cast_reg_1164[19] <= 1'b0;
    tmp_103_cast_reg_1185[8:0] <= 9'b000000000;
    tmp_103_cast_reg_1185[19] <= 1'b0;
    tmp_135_cast_reg_1196[8:0] <= 9'b000000000;
    tmp_139_cast_reg_1262[8:0] <= 9'b000000000;
    tmp_141_cast_reg_1275[8:0] <= 9'b000000000;
    tmp_141_cast_reg_1275[19] <= 1'b0;
end

endmodule //distanceTransform
