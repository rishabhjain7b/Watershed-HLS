// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dilate_HH_
#define _dilate_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dilate_imKernel.h"
#include "dilate_sureBackground.h"
#include "morphologyEx_temp.h"

namespace ap_rtl {

struct dilate : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<18> > src_address0;
    sc_out< sc_logic > src_ce0;
    sc_in< sc_lv<8> > src_q0;


    // Module declarations
    dilate(sc_module_name name);
    SC_HAS_PROCESS(dilate);

    ~dilate();

    sc_trace_file* mVcdFile;

    dilate_imKernel* imKernel_U;
    dilate_sureBackground* sureBackground_U;
    morphologyEx_temp* tmp_U;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > imKernel_address0;
    sc_signal< sc_logic > imKernel_ce0;
    sc_signal< sc_lv<1> > imKernel_q0;
    sc_signal< sc_lv<18> > sureBackground_address0;
    sc_signal< sc_logic > sureBackground_ce0;
    sc_signal< sc_logic > sureBackground_we0;
    sc_signal< sc_lv<10> > r_1_fu_253_p2;
    sc_signal< sc_lv<10> > r_1_reg_583;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<20> > tmp_153_cast_fu_267_p1;
    sc_signal< sc_lv<20> > tmp_153_cast_reg_588;
    sc_signal< sc_lv<1> > exitcond8_fu_247_p2;
    sc_signal< sc_lv<10> > c_1_fu_277_p2;
    sc_signal< sc_lv<10> > c_1_reg_596;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_154_cast_fu_292_p1;
    sc_signal< sc_lv<64> > tmp_154_cast_reg_601;
    sc_signal< sc_lv<1> > exitcond7_fu_271_p2;
    sc_signal< sc_lv<2> > i_14_fu_303_p2;
    sc_signal< sc_lv<2> > i_14_reg_614;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > r_2_fu_315_p2;
    sc_signal< sc_lv<10> > r_2_reg_622;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<20> > tmp_156_cast_fu_329_p1;
    sc_signal< sc_lv<20> > tmp_156_cast_reg_628;
    sc_signal< sc_lv<1> > exitcond5_fu_309_p2;
    sc_signal< sc_lv<10> > c_3_fu_339_p2;
    sc_signal< sc_lv<10> > c_3_reg_636;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > kr_1_fu_355_p2;
    sc_signal< sc_lv<2> > kr_1_reg_645;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<10> > rr_fu_361_p2;
    sc_signal< sc_lv<10> > rr_reg_650;
    sc_signal< sc_lv<1> > exitcond3_fu_349_p2;
    sc_signal< sc_lv<20> > tmp_162_cast_fu_374_p1;
    sc_signal< sc_lv<20> > tmp_162_cast_reg_655;
    sc_signal< sc_lv<5> > tmp_149_fu_394_p2;
    sc_signal< sc_lv<5> > tmp_149_reg_660;
    sc_signal< sc_lv<2> > kc_1_fu_429_p2;
    sc_signal< sc_lv<2> > kc_1_reg_668;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<10> > cc_fu_435_p2;
    sc_signal< sc_lv<10> > cc_reg_673;
    sc_signal< sc_lv<1> > exitcond2_fu_423_p2;
    sc_signal< sc_lv<8> > src_load_2_reg_688;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > imKernel_load_reg_693;
    sc_signal< sc_lv<32> > max_val_3_fu_522_p3;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<10> > r_3_fu_536_p2;
    sc_signal< sc_lv<10> > r_3_reg_706;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<20> > tmp_158_cast_fu_550_p1;
    sc_signal< sc_lv<20> > tmp_158_cast_reg_711;
    sc_signal< sc_lv<1> > exitcond1_fu_530_p2;
    sc_signal< sc_lv<10> > c_2_fu_560_p2;
    sc_signal< sc_lv<10> > c_2_reg_719;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > tmp_159_cast_fu_575_p1;
    sc_signal< sc_lv<64> > tmp_159_cast_reg_724;
    sc_signal< sc_lv<1> > exitcond_fu_554_p2;
    sc_signal< sc_lv<18> > tmp_address0;
    sc_signal< sc_logic > tmp_ce0;
    sc_signal< sc_logic > tmp_we0;
    sc_signal< sc_lv<8> > tmp_d0;
    sc_signal< sc_lv<8> > tmp_q0;
    sc_signal< sc_lv<10> > r_reg_123;
    sc_signal< sc_lv<10> > c_reg_134;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > i_reg_145;
    sc_signal< sc_lv<10> > r1_reg_156;
    sc_signal< sc_lv<1> > exitcond4_fu_333_p2;
    sc_signal< sc_lv<1> > exitcond6_fu_297_p2;
    sc_signal< sc_lv<10> > c2_reg_167;
    sc_signal< sc_lv<32> > max_val_reg_179;
    sc_signal< sc_lv<2> > kr_reg_191;
    sc_signal< sc_lv<32> > max_val_1_reg_202;
    sc_signal< sc_lv<2> > kc_reg_214;
    sc_signal< sc_lv<10> > r3_reg_225;
    sc_signal< sc_lv<10> > c4_reg_236;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > tmp_160_cast_fu_414_p1;
    sc_signal< sc_lv<64> > tmp_165_cast_fu_449_p1;
    sc_signal< sc_lv<64> > tmp_166_cast_fu_463_p1;
    sc_signal< sc_lv<8> > tmp_145_fu_400_p1;
    sc_signal< sc_lv<19> > tmp_s_fu_259_p3;
    sc_signal< sc_lv<20> > tmp_cast_fu_283_p1;
    sc_signal< sc_lv<20> > tmp_141_fu_287_p2;
    sc_signal< sc_lv<19> > tmp_142_fu_321_p3;
    sc_signal< sc_lv<10> > kr_cast9_fu_345_p1;
    sc_signal< sc_lv<19> > tmp_147_fu_366_p3;
    sc_signal< sc_lv<4> > tmp_148_fu_382_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_390_p1;
    sc_signal< sc_lv<5> > tmp_137_cast_fu_378_p1;
    sc_signal< sc_lv<20> > tmp_136_cast_fu_405_p1;
    sc_signal< sc_lv<20> > tmp_146_fu_409_p2;
    sc_signal< sc_lv<10> > kc_cast6_fu_419_p1;
    sc_signal< sc_lv<20> > tmp_138_cast_fu_440_p1;
    sc_signal< sc_lv<20> > tmp_151_fu_444_p2;
    sc_signal< sc_lv<5> > tmp_139_cast_fu_454_p1;
    sc_signal< sc_lv<5> > tmp_152_fu_458_p2;
    sc_signal< sc_lv<10> > tmp_132_fu_468_p2;
    sc_signal< sc_lv<9> > tmp_195_cast_fu_480_p1;
    sc_signal< sc_lv<9> > tmp_197_cast_fu_483_p1;
    sc_signal< sc_lv<9> > max_val_5_fu_486_p2;
    sc_signal< sc_lv<32> > max_val_5_cast_fu_496_p1;
    sc_signal< sc_lv<1> > tmp_140_fu_500_p2;
    sc_signal< sc_lv<31> > max_val_5_cast3_fu_492_p1;
    sc_signal< sc_lv<31> > tmp_153_fu_506_p1;
    sc_signal< sc_lv<31> > val_0_max_val_1_fu_510_p3;
    sc_signal< sc_lv<1> > tmp_150_fu_472_p3;
    sc_signal< sc_lv<32> > val_0_max_val_1_cast_fu_518_p1;
    sc_signal< sc_lv<19> > tmp_143_fu_542_p3;
    sc_signal< sc_lv<20> > tmp_134_cast_fu_566_p1;
    sc_signal< sc_lv<20> > tmp_144_fu_570_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_1_fu_277_p2();
    void thread_c_2_fu_560_p2();
    void thread_c_3_fu_339_p2();
    void thread_cc_fu_435_p2();
    void thread_exitcond1_fu_530_p2();
    void thread_exitcond2_fu_423_p2();
    void thread_exitcond3_fu_349_p2();
    void thread_exitcond4_fu_333_p2();
    void thread_exitcond5_fu_309_p2();
    void thread_exitcond6_fu_297_p2();
    void thread_exitcond7_fu_271_p2();
    void thread_exitcond8_fu_247_p2();
    void thread_exitcond_fu_554_p2();
    void thread_i_14_fu_303_p2();
    void thread_imKernel_address0();
    void thread_imKernel_ce0();
    void thread_kc_1_fu_429_p2();
    void thread_kc_cast6_fu_419_p1();
    void thread_kr_1_fu_355_p2();
    void thread_kr_cast9_fu_345_p1();
    void thread_max_val_3_fu_522_p3();
    void thread_max_val_5_cast3_fu_492_p1();
    void thread_max_val_5_cast_fu_496_p1();
    void thread_max_val_5_fu_486_p2();
    void thread_p_shl_cast_fu_390_p1();
    void thread_r_1_fu_253_p2();
    void thread_r_2_fu_315_p2();
    void thread_r_3_fu_536_p2();
    void thread_rr_fu_361_p2();
    void thread_src_address0();
    void thread_src_ce0();
    void thread_sureBackground_address0();
    void thread_sureBackground_ce0();
    void thread_sureBackground_we0();
    void thread_tmp_132_fu_468_p2();
    void thread_tmp_134_cast_fu_566_p1();
    void thread_tmp_136_cast_fu_405_p1();
    void thread_tmp_137_cast_fu_378_p1();
    void thread_tmp_138_cast_fu_440_p1();
    void thread_tmp_139_cast_fu_454_p1();
    void thread_tmp_140_fu_500_p2();
    void thread_tmp_141_fu_287_p2();
    void thread_tmp_142_fu_321_p3();
    void thread_tmp_143_fu_542_p3();
    void thread_tmp_144_fu_570_p2();
    void thread_tmp_145_fu_400_p1();
    void thread_tmp_146_fu_409_p2();
    void thread_tmp_147_fu_366_p3();
    void thread_tmp_148_fu_382_p3();
    void thread_tmp_149_fu_394_p2();
    void thread_tmp_150_fu_472_p3();
    void thread_tmp_151_fu_444_p2();
    void thread_tmp_152_fu_458_p2();
    void thread_tmp_153_cast_fu_267_p1();
    void thread_tmp_153_fu_506_p1();
    void thread_tmp_154_cast_fu_292_p1();
    void thread_tmp_156_cast_fu_329_p1();
    void thread_tmp_158_cast_fu_550_p1();
    void thread_tmp_159_cast_fu_575_p1();
    void thread_tmp_160_cast_fu_414_p1();
    void thread_tmp_162_cast_fu_374_p1();
    void thread_tmp_165_cast_fu_449_p1();
    void thread_tmp_166_cast_fu_463_p1();
    void thread_tmp_195_cast_fu_480_p1();
    void thread_tmp_197_cast_fu_483_p1();
    void thread_tmp_address0();
    void thread_tmp_cast_fu_283_p1();
    void thread_tmp_ce0();
    void thread_tmp_d0();
    void thread_tmp_s_fu_259_p3();
    void thread_tmp_we0();
    void thread_val_0_max_val_1_cast_fu_518_p1();
    void thread_val_0_max_val_1_fu_510_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
