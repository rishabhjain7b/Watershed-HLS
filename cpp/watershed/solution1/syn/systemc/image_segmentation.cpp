// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "image_segmentation.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic image_segmentation::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic image_segmentation::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<35> image_segmentation::ap_ST_fsm_state1 = "1";
const sc_lv<35> image_segmentation::ap_ST_fsm_state2 = "10";
const sc_lv<35> image_segmentation::ap_ST_fsm_state3 = "100";
const sc_lv<35> image_segmentation::ap_ST_fsm_state4 = "1000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state5 = "10000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state6 = "100000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state7 = "1000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state8 = "10000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state9 = "100000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state10 = "1000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state11 = "10000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state12 = "100000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<35> image_segmentation::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<32> image_segmentation::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> image_segmentation::ap_const_lv32_C = "1100";
const sc_lv<1> image_segmentation::ap_const_lv1_1 = "1";
const sc_lv<32> image_segmentation::ap_const_lv32_F = "1111";
const sc_lv<1> image_segmentation::ap_const_lv1_0 = "0";
const sc_lv<32> image_segmentation::ap_const_lv32_D = "1101";
const sc_lv<32> image_segmentation::ap_const_lv32_E = "1110";
const sc_lv<32> image_segmentation::ap_const_lv32_13 = "10011";
const sc_lv<32> image_segmentation::ap_const_lv32_14 = "10100";
const sc_lv<32> image_segmentation::ap_const_lv32_15 = "10101";
const sc_lv<32> image_segmentation::ap_const_lv32_16 = "10110";
const sc_lv<32> image_segmentation::ap_const_lv32_17 = "10111";
const sc_lv<32> image_segmentation::ap_const_lv32_18 = "11000";
const sc_lv<32> image_segmentation::ap_const_lv32_1C = "11100";
const sc_lv<32> image_segmentation::ap_const_lv32_1D = "11101";
const sc_lv<32> image_segmentation::ap_const_lv32_20 = "100000";
const sc_lv<32> image_segmentation::ap_const_lv32_21 = "100001";
const sc_lv<10> image_segmentation::ap_const_lv10_0 = "0000000000";
const sc_lv<32> image_segmentation::ap_const_lv32_B = "1011";
const sc_lv<32> image_segmentation::ap_const_lv32_10 = "10000";
const sc_lv<32> image_segmentation::ap_const_lv32_1E = "11110";
const sc_lv<32> image_segmentation::ap_const_lv32_1F = "11111";
const bool image_segmentation::ap_const_boolean_0 = false;
const sc_lv<32> image_segmentation::ap_const_lv32_22 = "100010";
const sc_lv<32> image_segmentation::ap_const_lv32_8 = "1000";
const sc_lv<32> image_segmentation::ap_const_lv32_9 = "1001";
const sc_lv<32> image_segmentation::ap_const_lv32_1 = "1";
const sc_lv<32> image_segmentation::ap_const_lv32_2 = "10";
const sc_lv<32> image_segmentation::ap_const_lv32_3 = "11";
const sc_lv<32> image_segmentation::ap_const_lv32_4 = "100";
const sc_lv<32> image_segmentation::ap_const_lv32_5 = "101";
const sc_lv<32> image_segmentation::ap_const_lv32_6 = "110";
const sc_lv<32> image_segmentation::ap_const_lv32_7 = "111";
const sc_lv<32> image_segmentation::ap_const_lv32_A = "1010";
const sc_lv<18> image_segmentation::ap_const_lv18_0 = "000000000000000000";
const sc_lv<32> image_segmentation::ap_const_lv32_3F000000 = "111111000000000000000000000000";
const sc_lv<10> image_segmentation::ap_const_lv10_200 = "1000000000";
const sc_lv<10> image_segmentation::ap_const_lv10_1 = "1";
const sc_lv<9> image_segmentation::ap_const_lv9_0 = "000000000";
const sc_lv<8> image_segmentation::ap_const_lv8_FF = "11111111";
const sc_lv<23> image_segmentation::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> image_segmentation::ap_const_lv9_181 = "110000001";
const sc_lv<8> image_segmentation::ap_const_lv8_7F = "1111111";
const sc_lv<5> image_segmentation::ap_const_lv5_2 = "10";
const bool image_segmentation::ap_const_boolean_1 = true;

image_segmentation::image_segmentation(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grayOutput_U = new watershed_algorithm_watershedOutput("grayOutput_U");
    grayOutput_U->clk(ap_clk);
    grayOutput_U->reset(ap_rst);
    grayOutput_U->address0(grayOutput_address0);
    grayOutput_U->ce0(grayOutput_ce0);
    grayOutput_U->we0(grayOutput_we0);
    grayOutput_U->d0(grp_RGBtoGray_512_512_2_fu_302_output_r_d0);
    grayOutput_U->q0(grayOutput_q0);
    binaryThreshold_U = new image_segmentation_binaryThreshold("binaryThreshold_U");
    binaryThreshold_U->clk(ap_clk);
    binaryThreshold_U->reset(ap_rst);
    binaryThreshold_U->address0(binaryThreshold_address0);
    binaryThreshold_U->ce0(binaryThreshold_ce0);
    binaryThreshold_U->we0(binaryThreshold_we0);
    binaryThreshold_U->d0(grp_thresholdOtsu_fu_318_dst_d0);
    binaryThreshold_U->q0(binaryThreshold_q0);
    morphOpening_U = new watershed_algorithm_watershedOutput("morphOpening_U");
    morphOpening_U->clk(ap_clk);
    morphOpening_U->reset(ap_rst);
    morphOpening_U->address0(morphOpening_address0);
    morphOpening_U->ce0(morphOpening_ce0);
    morphOpening_U->we0(morphOpening_we0);
    morphOpening_U->d0(grp_morphologyEx_fu_348_dst_d0);
    morphOpening_U->q0(morphOpening_q0);
    distanceTransformOut_U = new image_segmentation_distanceTransformOut("distanceTransformOut_U");
    distanceTransformOut_U->clk(ap_clk);
    distanceTransformOut_U->reset(ap_rst);
    distanceTransformOut_U->address0(distanceTransformOut_address0);
    distanceTransformOut_U->ce0(distanceTransformOut_ce0);
    distanceTransformOut_U->we0(distanceTransformOut_we0);
    distanceTransformOut_U->d0(grp_distanceTransform_fu_294_outputImage_d0);
    distanceTransformOut_U->q0(distanceTransformOut_q0);
    distanceTransformOut_U->address1(grp_distanceTransform_fu_294_outputImage_address1);
    distanceTransformOut_U->ce1(distanceTransformOut_ce1);
    distanceTransformOut_U->we1(distanceTransformOut_we1);
    distanceTransformOut_U->d1(grp_distanceTransform_fu_294_outputImage_d1);
    distanceTransformOut_U->q1(distanceTransformOut_q1);
    sureForeground_U = new image_segmentation_binaryThreshold("sureForeground_U");
    sureForeground_U->clk(ap_clk);
    sureForeground_U->reset(ap_rst);
    sureForeground_U->address0(sureForeground_address0);
    sureForeground_U->ce0(sureForeground_ce0);
    sureForeground_U->we0(sureForeground_we0);
    sureForeground_U->d0(tmp_46_reg_965);
    sureForeground_U->q0(sureForeground_q0);
    grp_distanceTransform_fu_294 = new distanceTransform("grp_distanceTransform_fu_294");
    grp_distanceTransform_fu_294->ap_clk(ap_clk);
    grp_distanceTransform_fu_294->ap_rst(ap_rst);
    grp_distanceTransform_fu_294->ap_start(grp_distanceTransform_fu_294_ap_start);
    grp_distanceTransform_fu_294->ap_done(grp_distanceTransform_fu_294_ap_done);
    grp_distanceTransform_fu_294->ap_idle(grp_distanceTransform_fu_294_ap_idle);
    grp_distanceTransform_fu_294->ap_ready(grp_distanceTransform_fu_294_ap_ready);
    grp_distanceTransform_fu_294->outputImage_address0(grp_distanceTransform_fu_294_outputImage_address0);
    grp_distanceTransform_fu_294->outputImage_ce0(grp_distanceTransform_fu_294_outputImage_ce0);
    grp_distanceTransform_fu_294->outputImage_we0(grp_distanceTransform_fu_294_outputImage_we0);
    grp_distanceTransform_fu_294->outputImage_d0(grp_distanceTransform_fu_294_outputImage_d0);
    grp_distanceTransform_fu_294->outputImage_q0(distanceTransformOut_q0);
    grp_distanceTransform_fu_294->outputImage_address1(grp_distanceTransform_fu_294_outputImage_address1);
    grp_distanceTransform_fu_294->outputImage_ce1(grp_distanceTransform_fu_294_outputImage_ce1);
    grp_distanceTransform_fu_294->outputImage_we1(grp_distanceTransform_fu_294_outputImage_we1);
    grp_distanceTransform_fu_294->outputImage_d1(grp_distanceTransform_fu_294_outputImage_d1);
    grp_distanceTransform_fu_294->outputImage_q1(distanceTransformOut_q1);
    grp_distanceTransform_fu_294->morphOpening_address0(grp_distanceTransform_fu_294_morphOpening_address0);
    grp_distanceTransform_fu_294->morphOpening_ce0(grp_distanceTransform_fu_294_morphOpening_ce0);
    grp_distanceTransform_fu_294->morphOpening_q0(morphOpening_q0);
    grp_RGBtoGray_512_512_2_fu_302 = new RGBtoGray_512_512_2("grp_RGBtoGray_512_512_2_fu_302");
    grp_RGBtoGray_512_512_2_fu_302->ap_clk(ap_clk);
    grp_RGBtoGray_512_512_2_fu_302->ap_rst(ap_rst);
    grp_RGBtoGray_512_512_2_fu_302->ap_start(grp_RGBtoGray_512_512_2_fu_302_ap_start);
    grp_RGBtoGray_512_512_2_fu_302->ap_done(grp_RGBtoGray_512_512_2_fu_302_ap_done);
    grp_RGBtoGray_512_512_2_fu_302->ap_idle(grp_RGBtoGray_512_512_2_fu_302_ap_idle);
    grp_RGBtoGray_512_512_2_fu_302->ap_ready(grp_RGBtoGray_512_512_2_fu_302_ap_ready);
    grp_RGBtoGray_512_512_2_fu_302->input_r_address0(grp_RGBtoGray_512_512_2_fu_302_input_r_address0);
    grp_RGBtoGray_512_512_2_fu_302->input_r_ce0(grp_RGBtoGray_512_512_2_fu_302_input_r_ce0);
    grp_RGBtoGray_512_512_2_fu_302->input_r_q0(input_image_r_q0);
    grp_RGBtoGray_512_512_2_fu_302->input_g_address0(grp_RGBtoGray_512_512_2_fu_302_input_g_address0);
    grp_RGBtoGray_512_512_2_fu_302->input_g_ce0(grp_RGBtoGray_512_512_2_fu_302_input_g_ce0);
    grp_RGBtoGray_512_512_2_fu_302->input_g_q0(input_image_g_q0);
    grp_RGBtoGray_512_512_2_fu_302->input_b_address0(grp_RGBtoGray_512_512_2_fu_302_input_b_address0);
    grp_RGBtoGray_512_512_2_fu_302->input_b_ce0(grp_RGBtoGray_512_512_2_fu_302_input_b_ce0);
    grp_RGBtoGray_512_512_2_fu_302->input_b_q0(input_image_b_q0);
    grp_RGBtoGray_512_512_2_fu_302->output_r_address0(grp_RGBtoGray_512_512_2_fu_302_output_r_address0);
    grp_RGBtoGray_512_512_2_fu_302->output_r_ce0(grp_RGBtoGray_512_512_2_fu_302_output_r_ce0);
    grp_RGBtoGray_512_512_2_fu_302->output_r_we0(grp_RGBtoGray_512_512_2_fu_302_output_r_we0);
    grp_RGBtoGray_512_512_2_fu_302->output_r_d0(grp_RGBtoGray_512_512_2_fu_302_output_r_d0);
    grp_thresholdOtsu_fu_318 = new thresholdOtsu("grp_thresholdOtsu_fu_318");
    grp_thresholdOtsu_fu_318->ap_clk(ap_clk);
    grp_thresholdOtsu_fu_318->ap_rst(ap_rst);
    grp_thresholdOtsu_fu_318->ap_start(grp_thresholdOtsu_fu_318_ap_start);
    grp_thresholdOtsu_fu_318->ap_done(grp_thresholdOtsu_fu_318_ap_done);
    grp_thresholdOtsu_fu_318->ap_idle(grp_thresholdOtsu_fu_318_ap_idle);
    grp_thresholdOtsu_fu_318->ap_ready(grp_thresholdOtsu_fu_318_ap_ready);
    grp_thresholdOtsu_fu_318->src_address0(grp_thresholdOtsu_fu_318_src_address0);
    grp_thresholdOtsu_fu_318->src_ce0(grp_thresholdOtsu_fu_318_src_ce0);
    grp_thresholdOtsu_fu_318->src_q0(grayOutput_q0);
    grp_thresholdOtsu_fu_318->dst_address0(grp_thresholdOtsu_fu_318_dst_address0);
    grp_thresholdOtsu_fu_318->dst_ce0(grp_thresholdOtsu_fu_318_dst_ce0);
    grp_thresholdOtsu_fu_318->dst_we0(grp_thresholdOtsu_fu_318_dst_we0);
    grp_thresholdOtsu_fu_318->dst_d0(grp_thresholdOtsu_fu_318_dst_d0);
    grp_watershed_algorithm_fu_328 = new watershed_algorithm("grp_watershed_algorithm_fu_328");
    grp_watershed_algorithm_fu_328->ap_clk(ap_clk);
    grp_watershed_algorithm_fu_328->ap_rst(ap_rst);
    grp_watershed_algorithm_fu_328->ap_start(grp_watershed_algorithm_fu_328_ap_start);
    grp_watershed_algorithm_fu_328->ap_done(grp_watershed_algorithm_fu_328_ap_done);
    grp_watershed_algorithm_fu_328->ap_idle(grp_watershed_algorithm_fu_328_ap_idle);
    grp_watershed_algorithm_fu_328->ap_ready(grp_watershed_algorithm_fu_328_ap_ready);
    grp_watershed_algorithm_fu_328->grayOutput_address0(grp_watershed_algorithm_fu_328_grayOutput_address0);
    grp_watershed_algorithm_fu_328->grayOutput_ce0(grp_watershed_algorithm_fu_328_grayOutput_ce0);
    grp_watershed_algorithm_fu_328->grayOutput_q0(grayOutput_q0);
    grp_connectedComponents_fu_340 = new connectedComponents("grp_connectedComponents_fu_340");
    grp_connectedComponents_fu_340->ap_clk(ap_clk);
    grp_connectedComponents_fu_340->ap_rst(ap_rst);
    grp_connectedComponents_fu_340->ap_start(grp_connectedComponents_fu_340_ap_start);
    grp_connectedComponents_fu_340->ap_done(grp_connectedComponents_fu_340_ap_done);
    grp_connectedComponents_fu_340->ap_idle(grp_connectedComponents_fu_340_ap_idle);
    grp_connectedComponents_fu_340->ap_ready(grp_connectedComponents_fu_340_ap_ready);
    grp_connectedComponents_fu_340->sureForeground_address0(grp_connectedComponents_fu_340_sureForeground_address0);
    grp_connectedComponents_fu_340->sureForeground_ce0(grp_connectedComponents_fu_340_sureForeground_ce0);
    grp_connectedComponents_fu_340->sureForeground_q0(sureForeground_q0);
    grp_morphologyEx_fu_348 = new morphologyEx("grp_morphologyEx_fu_348");
    grp_morphologyEx_fu_348->ap_clk(ap_clk);
    grp_morphologyEx_fu_348->ap_rst(ap_rst);
    grp_morphologyEx_fu_348->ap_start(grp_morphologyEx_fu_348_ap_start);
    grp_morphologyEx_fu_348->ap_done(grp_morphologyEx_fu_348_ap_done);
    grp_morphologyEx_fu_348->ap_idle(grp_morphologyEx_fu_348_ap_idle);
    grp_morphologyEx_fu_348->ap_ready(grp_morphologyEx_fu_348_ap_ready);
    grp_morphologyEx_fu_348->dst_address0(grp_morphologyEx_fu_348_dst_address0);
    grp_morphologyEx_fu_348->dst_ce0(grp_morphologyEx_fu_348_dst_ce0);
    grp_morphologyEx_fu_348->dst_we0(grp_morphologyEx_fu_348_dst_we0);
    grp_morphologyEx_fu_348->dst_d0(grp_morphologyEx_fu_348_dst_d0);
    grp_morphologyEx_fu_348->dst_q0(morphOpening_q0);
    grp_morphologyEx_fu_348->binaryThreshold_address0(grp_morphologyEx_fu_348_binaryThreshold_address0);
    grp_morphologyEx_fu_348->binaryThreshold_ce0(grp_morphologyEx_fu_348_binaryThreshold_ce0);
    grp_morphologyEx_fu_348->binaryThreshold_q0(binaryThreshold_q0);
    grp_dilate_fu_356 = new dilate("grp_dilate_fu_356");
    grp_dilate_fu_356->ap_clk(ap_clk);
    grp_dilate_fu_356->ap_rst(ap_rst);
    grp_dilate_fu_356->ap_start(grp_dilate_fu_356_ap_start);
    grp_dilate_fu_356->ap_done(grp_dilate_fu_356_ap_done);
    grp_dilate_fu_356->ap_idle(grp_dilate_fu_356_ap_idle);
    grp_dilate_fu_356->ap_ready(grp_dilate_fu_356_ap_ready);
    grp_dilate_fu_356->src_address0(grp_dilate_fu_356_src_address0);
    grp_dilate_fu_356->src_ce0(grp_dilate_fu_356_src_ce0);
    grp_dilate_fu_356->src_q0(morphOpening_q0);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50 = new imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50");
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50->clk(ap_clk);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50->reset(ap_rst);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50->din0(max_fu_108);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50->din1(ap_var_for_const0);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50->ce(ap_var_for_const1);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50->dout(grp_fu_366_p2);
    imageProcessing_sitofp_32ns_32_5_1_U51 = new imageProcessing_sitofp_32ns_32_5_1<1,5,32,32>("imageProcessing_sitofp_32ns_32_5_1_U51");
    imageProcessing_sitofp_32ns_32_5_1_U51->clk(ap_clk);
    imageProcessing_sitofp_32ns_32_5_1_U51->reset(ap_rst);
    imageProcessing_sitofp_32ns_32_5_1_U51->din0(grp_fu_371_p0);
    imageProcessing_sitofp_32ns_32_5_1_U51->ce(ap_var_for_const1);
    imageProcessing_sitofp_32ns_32_5_1_U51->dout(grp_fu_371_p1);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U52 = new imageProcessing_fcmp_32ns_32ns_1_1_1<1,1,32,32,1>("imageProcessing_fcmp_32ns_32ns_1_1_1_U52");
    imageProcessing_fcmp_32ns_32ns_1_1_1_U52->din0(grp_fu_374_p0);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U52->din1(grp_fu_374_p1);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U52->opcode(ap_var_for_const2);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U52->dout(grp_fu_374_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state32_on_subcall_done);
    sensitive << ( grp_watershed_algorithm_fu_328_ap_done );
    sensitive << ( grp_connectedComponents_fu_340_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( exitcond3_i_fu_790_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( exitcond3_i_fu_790_p2 );

    SC_METHOD(thread_binaryThreshold_address0);
    sensitive << ( grp_thresholdOtsu_fu_318_dst_address0 );
    sensitive << ( grp_morphologyEx_fu_348_binaryThreshold_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_binaryThreshold_ce0);
    sensitive << ( grp_thresholdOtsu_fu_318_dst_ce0 );
    sensitive << ( grp_morphologyEx_fu_348_binaryThreshold_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_binaryThreshold_we0);
    sensitive << ( grp_thresholdOtsu_fu_318_dst_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_distanceTransformOut_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_85_cast_fu_596_p1 );
    sensitive << ( grp_distanceTransform_fu_294_outputImage_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_82_cast_fu_438_p1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_distanceTransformOut_ce0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_distanceTransform_fu_294_outputImage_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_distanceTransformOut_ce1);
    sensitive << ( grp_distanceTransform_fu_294_outputImage_ce1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_distanceTransformOut_we0);
    sensitive << ( grp_distanceTransform_fu_294_outputImage_we0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_distanceTransformOut_we1);
    sensitive << ( grp_distanceTransform_fu_294_outputImage_we1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_exitcond1_i7_fu_551_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( i_i6_reg_250 );

    SC_METHOD(thread_exitcond1_i_fu_393_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_i_reg_228 );

    SC_METHOD(thread_exitcond2_i_fu_814_p2);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( j_i4_reg_283 );

    SC_METHOD(thread_exitcond3_i_fu_790_p2);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( i_i2_reg_272 );

    SC_METHOD(thread_exitcond_i1_fu_575_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( j_i1_reg_261 );

    SC_METHOD(thread_exitcond_i_fu_417_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( j_i_reg_239 );

    SC_METHOD(thread_grayOutput_address0);
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_output_r_address0 );
    sensitive << ( grp_thresholdOtsu_fu_318_src_address0 );
    sensitive << ( grp_watershed_algorithm_fu_328_grayOutput_address0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grayOutput_ce0);
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_output_r_ce0 );
    sensitive << ( grp_thresholdOtsu_fu_318_src_ce0 );
    sensitive << ( grp_watershed_algorithm_fu_328_grayOutput_ce0 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grayOutput_we0);
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_output_r_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_RGBtoGray_512_512_2_fu_302_ap_start);
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_ap_start_reg );

    SC_METHOD(thread_grp_connectedComponents_fu_340_ap_start);
    sensitive << ( grp_connectedComponents_fu_340_ap_start_reg );

    SC_METHOD(thread_grp_dilate_fu_356_ap_start);
    sensitive << ( grp_dilate_fu_356_ap_start_reg );

    SC_METHOD(thread_grp_distanceTransform_fu_294_ap_start);
    sensitive << ( grp_distanceTransform_fu_294_ap_start_reg );

    SC_METHOD(thread_grp_fu_371_p0);
    sensitive << ( val_V_reg_949 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_fu_374_p0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( val_reg_875 );
    sensitive << ( tmp_54_i_reg_959 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_fu_374_p1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( thresholdValue_assig_reg_887 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( max_fu_108 );

    SC_METHOD(thread_grp_morphologyEx_fu_348_ap_start);
    sensitive << ( grp_morphologyEx_fu_348_ap_start_reg );

    SC_METHOD(thread_grp_thresholdOtsu_fu_318_ap_start);
    sensitive << ( grp_thresholdOtsu_fu_318_ap_start_reg );

    SC_METHOD(thread_grp_watershed_algorithm_fu_328_ap_start);
    sensitive << ( grp_watershed_algorithm_fu_328_ap_start_reg );

    SC_METHOD(thread_i_10_fu_557_p2);
    sensitive << ( i_i6_reg_250 );

    SC_METHOD(thread_i_11_fu_796_p2);
    sensitive << ( i_i2_reg_272 );

    SC_METHOD(thread_i_fu_399_p2);
    sensitive << ( i_i_reg_228 );

    SC_METHOD(thread_input_image_b_address0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( tmp_89_cast_fu_835_p1 );
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_input_b_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_image_b_ce0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_input_b_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_image_g_address0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( tmp_89_cast_fu_835_p1 );
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_input_g_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_image_g_ce0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_input_g_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_image_r_address0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( tmp_89_cast_fu_835_p1 );
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_input_r_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_image_r_ce0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_isNeg_fu_656_p3);
    sensitive << ( sh_assign_fu_650_p2 );

    SC_METHOD(thread_j_10_fu_820_p2);
    sensitive << ( j_i4_reg_283 );

    SC_METHOD(thread_j_9_fu_581_p2);
    sensitive << ( j_i1_reg_261 );

    SC_METHOD(thread_j_fu_423_p2);
    sensitive << ( j_i_reg_239 );

    SC_METHOD(thread_mantissa_V_1_cast1_fu_643_p1);
    sensitive << ( mantissa_V_fu_634_p4 );

    SC_METHOD(thread_mantissa_V_fu_634_p4);
    sensitive << ( tmp_V_1_reg_944 );

    SC_METHOD(thread_max_1_i_to_int_fu_460_p1);
    sensitive << ( reg_383 );

    SC_METHOD(thread_max_2_fu_525_p3);
    sensitive << ( reg_383 );
    sensitive << ( val_reg_875 );
    sensitive << ( tmp_35_fu_520_p2 );

    SC_METHOD(thread_morphOpening_address0);
    sensitive << ( grp_distanceTransform_fu_294_morphOpening_address0 );
    sensitive << ( grp_morphologyEx_fu_348_dst_address0 );
    sensitive << ( grp_dilate_fu_356_src_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_morphOpening_ce0);
    sensitive << ( grp_distanceTransform_fu_294_morphOpening_ce0 );
    sensitive << ( grp_morphologyEx_fu_348_dst_ce0 );
    sensitive << ( grp_dilate_fu_356_src_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_morphOpening_we0);
    sensitive << ( grp_morphologyEx_fu_348_dst_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_notlhs2_fu_496_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_29_fu_464_p4 );

    SC_METHOD(thread_notlhs3_fu_756_p2);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_38_fu_742_p4 );

    SC_METHOD(thread_notlhs4_fu_610_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( exitcond_i1_fu_575_p2 );
    sensitive << ( tmp_40_fu_601_p4 );

    SC_METHOD(thread_notlhs_fu_478_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_fu_446_p4 );

    SC_METHOD(thread_notrhs2_fu_502_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_64_fu_474_p1 );

    SC_METHOD(thread_notrhs3_fu_762_p2);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_70_fu_752_p1 );

    SC_METHOD(thread_notrhs4_fu_545_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_61_fu_541_p1 );

    SC_METHOD(thread_notrhs_fu_484_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_63_fu_456_p1 );

    SC_METHOD(thread_output_image_b_address0);
    sensitive << ( tmp_89_cast_reg_991 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_b_ce0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_b_d0);
    sensitive << ( input_image_b_q0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_b_we0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_g_address0);
    sensitive << ( tmp_89_cast_reg_991 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_g_ce0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_g_d0);
    sensitive << ( input_image_g_q0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_g_we0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_r_address0);
    sensitive << ( tmp_89_cast_reg_991 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_r_ce0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_r_d0);
    sensitive << ( input_image_r_q0 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_output_image_r_we0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_p_Val2_s_fu_616_p1);
    sensitive << ( distanceTransformOut_q0 );

    SC_METHOD(thread_r_V_1_fu_699_p2);
    sensitive << ( mantissa_V_1_cast1_fu_643_p1 );
    sensitive << ( tmp_i_i_i_i_44_fu_689_p1 );

    SC_METHOD(thread_r_V_fu_693_p2);
    sensitive << ( mantissa_V_fu_634_p4 );
    sensitive << ( sh_assign_6_cast_cas_fu_685_p1 );

    SC_METHOD(thread_sh_assign_6_cast_cas_fu_685_p1);
    sensitive << ( ush_fu_673_p3 );

    SC_METHOD(thread_sh_assign_6_cast_fu_681_p1);
    sensitive << ( ush_fu_673_p3 );

    SC_METHOD(thread_sh_assign_fu_650_p2);
    sensitive << ( tmp_i_i_i_i_i_cast_fu_647_p1 );

    SC_METHOD(thread_sureForeground_address0);
    sensitive << ( tmp_85_cast_reg_923 );
    sensitive << ( grp_connectedComponents_fu_340_sureForeground_address0 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_sureForeground_ce0);
    sensitive << ( grp_connectedComponents_fu_340_sureForeground_ce0 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_sureForeground_we0);
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_thresholdValue_assig_1_fu_537_p1);
    sensitive << ( grp_fu_366_p2 );

    SC_METHOD(thread_tmp_29_fu_464_p4);
    sensitive << ( max_1_i_to_int_fu_460_p1 );

    SC_METHOD(thread_tmp_31_fu_490_p2);
    sensitive << ( notrhs_fu_484_p2 );
    sensitive << ( notlhs_fu_478_p2 );

    SC_METHOD(thread_tmp_32_fu_508_p2);
    sensitive << ( notrhs2_fu_502_p2 );
    sensitive << ( notlhs2_fu_496_p2 );

    SC_METHOD(thread_tmp_33_fu_514_p2);
    sensitive << ( tmp_31_fu_490_p2 );
    sensitive << ( tmp_32_fu_508_p2 );

    SC_METHOD(thread_tmp_35_fu_520_p2);
    sensitive << ( tmp_34_reg_882 );
    sensitive << ( tmp_33_fu_514_p2 );

    SC_METHOD(thread_tmp_38_fu_742_p4);
    sensitive << ( tmp_54_i_to_int_fu_739_p1 );

    SC_METHOD(thread_tmp_40_fu_601_p4);
    sensitive << ( thresholdValue_assig_1_reg_892 );

    SC_METHOD(thread_tmp_42_fu_768_p2);
    sensitive << ( notrhs3_fu_762_p2 );
    sensitive << ( notlhs3_fu_756_p2 );

    SC_METHOD(thread_tmp_43_fu_774_p2);
    sensitive << ( notrhs4_reg_897 );
    sensitive << ( notlhs4_reg_933 );

    SC_METHOD(thread_tmp_44_fu_778_p2);
    sensitive << ( tmp_42_fu_768_p2 );
    sensitive << ( tmp_43_fu_774_p2 );

    SC_METHOD(thread_tmp_46_fu_784_p2);
    sensitive << ( grp_fu_374_p2 );
    sensitive << ( tmp_44_fu_778_p2 );

    SC_METHOD(thread_tmp_54_i_to_int_fu_739_p1);
    sensitive << ( tmp_54_i_reg_959 );

    SC_METHOD(thread_tmp_60_fu_563_p3);
    sensitive << ( i_i6_reg_250 );

    SC_METHOD(thread_tmp_61_fu_541_p1);
    sensitive << ( thresholdValue_assig_1_fu_537_p1 );

    SC_METHOD(thread_tmp_62_fu_433_p2);
    sensitive << ( tmp_79_cast_reg_857 );
    sensitive << ( tmp_i_cast_fu_429_p1 );

    SC_METHOD(thread_tmp_63_fu_456_p1);
    sensitive << ( val_to_int_fu_443_p1 );

    SC_METHOD(thread_tmp_64_fu_474_p1);
    sensitive << ( max_1_i_to_int_fu_460_p1 );

    SC_METHOD(thread_tmp_65_fu_802_p3);
    sensitive << ( i_i2_reg_272 );

    SC_METHOD(thread_tmp_66_fu_591_p2);
    sensitive << ( tmp_81_cast_reg_910 );
    sensitive << ( tmp_i9_cast_fu_587_p1 );

    SC_METHOD(thread_tmp_67_fu_713_p1);
    sensitive << ( tmp_69_fu_705_p3 );

    SC_METHOD(thread_tmp_68_fu_717_p4);
    sensitive << ( r_V_1_fu_699_p2 );

    SC_METHOD(thread_tmp_69_fu_705_p3);
    sensitive << ( r_V_fu_693_p2 );

    SC_METHOD(thread_tmp_70_fu_752_p1);
    sensitive << ( tmp_54_i_to_int_fu_739_p1 );

    SC_METHOD(thread_tmp_71_fu_830_p2);
    sensitive << ( tmp_84_cast_reg_978 );
    sensitive << ( tmp_i5_cast_fu_826_p1 );

    SC_METHOD(thread_tmp_79_cast_fu_413_p1);
    sensitive << ( tmp_s_fu_405_p3 );

    SC_METHOD(thread_tmp_81_cast_fu_571_p1);
    sensitive << ( tmp_60_fu_563_p3 );

    SC_METHOD(thread_tmp_82_cast_fu_438_p1);
    sensitive << ( tmp_62_fu_433_p2 );

    SC_METHOD(thread_tmp_84_cast_fu_810_p1);
    sensitive << ( tmp_65_fu_802_p3 );

    SC_METHOD(thread_tmp_85_cast_fu_596_p1);
    sensitive << ( tmp_66_fu_591_p2 );

    SC_METHOD(thread_tmp_89_cast_fu_835_p1);
    sensitive << ( tmp_71_fu_830_p2 );

    SC_METHOD(thread_tmp_V_1_fu_630_p1);
    sensitive << ( p_Val2_s_fu_616_p1 );

    SC_METHOD(thread_tmp_fu_446_p4);
    sensitive << ( val_to_int_fu_443_p1 );

    SC_METHOD(thread_tmp_i5_cast_fu_826_p1);
    sensitive << ( j_i4_reg_283 );

    SC_METHOD(thread_tmp_i9_cast_fu_587_p1);
    sensitive << ( j_i1_reg_261 );

    SC_METHOD(thread_tmp_i_cast_fu_429_p1);
    sensitive << ( j_i_reg_239 );

    SC_METHOD(thread_tmp_i_i_i_i_44_fu_689_p1);
    sensitive << ( sh_assign_6_cast_fu_681_p1 );

    SC_METHOD(thread_tmp_i_i_i_i_cast_fu_669_p1);
    sensitive << ( tmp_i_i_i_i_fu_664_p2 );

    SC_METHOD(thread_tmp_i_i_i_i_fu_664_p2);
    sensitive << ( tmp_V_reg_938 );

    SC_METHOD(thread_tmp_i_i_i_i_i_cast_fu_647_p1);
    sensitive << ( tmp_V_reg_938 );

    SC_METHOD(thread_tmp_s_fu_405_p3);
    sensitive << ( i_i_reg_228 );

    SC_METHOD(thread_ush_fu_673_p3);
    sensitive << ( sh_assign_fu_650_p2 );
    sensitive << ( isNeg_fu_656_p3 );
    sensitive << ( tmp_i_i_i_i_cast_fu_669_p1 );

    SC_METHOD(thread_val_V_fu_727_p3);
    sensitive << ( isNeg_fu_656_p3 );
    sensitive << ( tmp_67_fu_713_p1 );
    sensitive << ( tmp_68_fu_717_p4 );

    SC_METHOD(thread_val_to_int_fu_443_p1);
    sensitive << ( val_reg_875 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond1_i_fu_393_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_i_fu_417_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond1_i7_fu_551_p2 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( exitcond_i1_fu_575_p2 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( exitcond3_i_fu_790_p2 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( exitcond2_i_fu_814_p2 );
    sensitive << ( grp_distanceTransform_fu_294_ap_done );
    sensitive << ( grp_RGBtoGray_512_512_2_fu_302_ap_done );
    sensitive << ( grp_thresholdOtsu_fu_318_ap_done );
    sensitive << ( grp_morphologyEx_fu_348_ap_done );
    sensitive << ( grp_dilate_fu_356_ap_done );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_state32_on_subcall_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000000000000000001";
    grp_distanceTransform_fu_294_ap_start_reg = SC_LOGIC_0;
    grp_RGBtoGray_512_512_2_fu_302_ap_start_reg = SC_LOGIC_0;
    grp_thresholdOtsu_fu_318_ap_start_reg = SC_LOGIC_0;
    grp_watershed_algorithm_fu_328_ap_start_reg = SC_LOGIC_0;
    grp_connectedComponents_fu_340_ap_start_reg = SC_LOGIC_0;
    grp_morphologyEx_fu_348_ap_start_reg = SC_LOGIC_0;
    grp_dilate_fu_356_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "image_segmentation_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_image_r_address0, "(port)input_image_r_address0");
    sc_trace(mVcdFile, input_image_r_ce0, "(port)input_image_r_ce0");
    sc_trace(mVcdFile, input_image_r_q0, "(port)input_image_r_q0");
    sc_trace(mVcdFile, input_image_g_address0, "(port)input_image_g_address0");
    sc_trace(mVcdFile, input_image_g_ce0, "(port)input_image_g_ce0");
    sc_trace(mVcdFile, input_image_g_q0, "(port)input_image_g_q0");
    sc_trace(mVcdFile, input_image_b_address0, "(port)input_image_b_address0");
    sc_trace(mVcdFile, input_image_b_ce0, "(port)input_image_b_ce0");
    sc_trace(mVcdFile, input_image_b_q0, "(port)input_image_b_q0");
    sc_trace(mVcdFile, output_image_r_address0, "(port)output_image_r_address0");
    sc_trace(mVcdFile, output_image_r_ce0, "(port)output_image_r_ce0");
    sc_trace(mVcdFile, output_image_r_we0, "(port)output_image_r_we0");
    sc_trace(mVcdFile, output_image_r_d0, "(port)output_image_r_d0");
    sc_trace(mVcdFile, output_image_g_address0, "(port)output_image_g_address0");
    sc_trace(mVcdFile, output_image_g_ce0, "(port)output_image_g_ce0");
    sc_trace(mVcdFile, output_image_g_we0, "(port)output_image_g_we0");
    sc_trace(mVcdFile, output_image_g_d0, "(port)output_image_g_d0");
    sc_trace(mVcdFile, output_image_b_address0, "(port)output_image_b_address0");
    sc_trace(mVcdFile, output_image_b_ce0, "(port)output_image_b_ce0");
    sc_trace(mVcdFile, output_image_b_we0, "(port)output_image_b_we0");
    sc_trace(mVcdFile, output_image_b_d0, "(port)output_image_b_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grayOutput_address0, "grayOutput_address0");
    sc_trace(mVcdFile, grayOutput_ce0, "grayOutput_ce0");
    sc_trace(mVcdFile, grayOutput_we0, "grayOutput_we0");
    sc_trace(mVcdFile, grayOutput_q0, "grayOutput_q0");
    sc_trace(mVcdFile, binaryThreshold_address0, "binaryThreshold_address0");
    sc_trace(mVcdFile, binaryThreshold_ce0, "binaryThreshold_ce0");
    sc_trace(mVcdFile, binaryThreshold_we0, "binaryThreshold_we0");
    sc_trace(mVcdFile, binaryThreshold_q0, "binaryThreshold_q0");
    sc_trace(mVcdFile, morphOpening_address0, "morphOpening_address0");
    sc_trace(mVcdFile, morphOpening_ce0, "morphOpening_ce0");
    sc_trace(mVcdFile, morphOpening_we0, "morphOpening_we0");
    sc_trace(mVcdFile, morphOpening_q0, "morphOpening_q0");
    sc_trace(mVcdFile, distanceTransformOut_address0, "distanceTransformOut_address0");
    sc_trace(mVcdFile, distanceTransformOut_ce0, "distanceTransformOut_ce0");
    sc_trace(mVcdFile, distanceTransformOut_we0, "distanceTransformOut_we0");
    sc_trace(mVcdFile, distanceTransformOut_q0, "distanceTransformOut_q0");
    sc_trace(mVcdFile, distanceTransformOut_ce1, "distanceTransformOut_ce1");
    sc_trace(mVcdFile, distanceTransformOut_we1, "distanceTransformOut_we1");
    sc_trace(mVcdFile, distanceTransformOut_q1, "distanceTransformOut_q1");
    sc_trace(mVcdFile, sureForeground_address0, "sureForeground_address0");
    sc_trace(mVcdFile, sureForeground_ce0, "sureForeground_ce0");
    sc_trace(mVcdFile, sureForeground_we0, "sureForeground_we0");
    sc_trace(mVcdFile, sureForeground_q0, "sureForeground_q0");
    sc_trace(mVcdFile, reg_383, "reg_383");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond1_i_fu_393_p2, "exitcond1_i_fu_393_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, i_fu_399_p2, "i_fu_399_p2");
    sc_trace(mVcdFile, i_reg_852, "i_reg_852");
    sc_trace(mVcdFile, tmp_79_cast_fu_413_p1, "tmp_79_cast_fu_413_p1");
    sc_trace(mVcdFile, tmp_79_cast_reg_857, "tmp_79_cast_reg_857");
    sc_trace(mVcdFile, j_fu_423_p2, "j_fu_423_p2");
    sc_trace(mVcdFile, j_reg_865, "j_reg_865");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, exitcond_i_fu_417_p2, "exitcond_i_fu_417_p2");
    sc_trace(mVcdFile, val_reg_875, "val_reg_875");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_374_p2, "grp_fu_374_p2");
    sc_trace(mVcdFile, tmp_34_reg_882, "tmp_34_reg_882");
    sc_trace(mVcdFile, grp_fu_366_p2, "grp_fu_366_p2");
    sc_trace(mVcdFile, thresholdValue_assig_reg_887, "thresholdValue_assig_reg_887");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, thresholdValue_assig_1_fu_537_p1, "thresholdValue_assig_1_fu_537_p1");
    sc_trace(mVcdFile, thresholdValue_assig_1_reg_892, "thresholdValue_assig_1_reg_892");
    sc_trace(mVcdFile, notrhs4_fu_545_p2, "notrhs4_fu_545_p2");
    sc_trace(mVcdFile, notrhs4_reg_897, "notrhs4_reg_897");
    sc_trace(mVcdFile, i_10_fu_557_p2, "i_10_fu_557_p2");
    sc_trace(mVcdFile, i_10_reg_905, "i_10_reg_905");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_81_cast_fu_571_p1, "tmp_81_cast_fu_571_p1");
    sc_trace(mVcdFile, tmp_81_cast_reg_910, "tmp_81_cast_reg_910");
    sc_trace(mVcdFile, exitcond1_i7_fu_551_p2, "exitcond1_i7_fu_551_p2");
    sc_trace(mVcdFile, j_9_fu_581_p2, "j_9_fu_581_p2");
    sc_trace(mVcdFile, j_9_reg_918, "j_9_reg_918");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_85_cast_fu_596_p1, "tmp_85_cast_fu_596_p1");
    sc_trace(mVcdFile, tmp_85_cast_reg_923, "tmp_85_cast_reg_923");
    sc_trace(mVcdFile, exitcond_i1_fu_575_p2, "exitcond_i1_fu_575_p2");
    sc_trace(mVcdFile, notlhs4_fu_610_p2, "notlhs4_fu_610_p2");
    sc_trace(mVcdFile, notlhs4_reg_933, "notlhs4_reg_933");
    sc_trace(mVcdFile, tmp_V_reg_938, "tmp_V_reg_938");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_V_1_fu_630_p1, "tmp_V_1_fu_630_p1");
    sc_trace(mVcdFile, tmp_V_1_reg_944, "tmp_V_1_reg_944");
    sc_trace(mVcdFile, val_V_fu_727_p3, "val_V_fu_727_p3");
    sc_trace(mVcdFile, val_V_reg_949, "val_V_reg_949");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_371_p1, "grp_fu_371_p1");
    sc_trace(mVcdFile, tmp_54_i_reg_959, "tmp_54_i_reg_959");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, tmp_46_fu_784_p2, "tmp_46_fu_784_p2");
    sc_trace(mVcdFile, tmp_46_reg_965, "tmp_46_reg_965");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, i_11_fu_796_p2, "i_11_fu_796_p2");
    sc_trace(mVcdFile, i_11_reg_973, "i_11_reg_973");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, tmp_84_cast_fu_810_p1, "tmp_84_cast_fu_810_p1");
    sc_trace(mVcdFile, tmp_84_cast_reg_978, "tmp_84_cast_reg_978");
    sc_trace(mVcdFile, exitcond3_i_fu_790_p2, "exitcond3_i_fu_790_p2");
    sc_trace(mVcdFile, j_10_fu_820_p2, "j_10_fu_820_p2");
    sc_trace(mVcdFile, j_10_reg_986, "j_10_reg_986");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, tmp_89_cast_fu_835_p1, "tmp_89_cast_fu_835_p1");
    sc_trace(mVcdFile, tmp_89_cast_reg_991, "tmp_89_cast_reg_991");
    sc_trace(mVcdFile, exitcond2_i_fu_814_p2, "exitcond2_i_fu_814_p2");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_ap_start, "grp_distanceTransform_fu_294_ap_start");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_ap_done, "grp_distanceTransform_fu_294_ap_done");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_ap_idle, "grp_distanceTransform_fu_294_ap_idle");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_ap_ready, "grp_distanceTransform_fu_294_ap_ready");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_address0, "grp_distanceTransform_fu_294_outputImage_address0");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_ce0, "grp_distanceTransform_fu_294_outputImage_ce0");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_we0, "grp_distanceTransform_fu_294_outputImage_we0");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_d0, "grp_distanceTransform_fu_294_outputImage_d0");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_address1, "grp_distanceTransform_fu_294_outputImage_address1");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_ce1, "grp_distanceTransform_fu_294_outputImage_ce1");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_we1, "grp_distanceTransform_fu_294_outputImage_we1");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_outputImage_d1, "grp_distanceTransform_fu_294_outputImage_d1");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_morphOpening_address0, "grp_distanceTransform_fu_294_morphOpening_address0");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_morphOpening_ce0, "grp_distanceTransform_fu_294_morphOpening_ce0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_ap_start, "grp_RGBtoGray_512_512_2_fu_302_ap_start");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_ap_done, "grp_RGBtoGray_512_512_2_fu_302_ap_done");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_ap_idle, "grp_RGBtoGray_512_512_2_fu_302_ap_idle");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_ap_ready, "grp_RGBtoGray_512_512_2_fu_302_ap_ready");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_input_r_address0, "grp_RGBtoGray_512_512_2_fu_302_input_r_address0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_input_r_ce0, "grp_RGBtoGray_512_512_2_fu_302_input_r_ce0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_input_g_address0, "grp_RGBtoGray_512_512_2_fu_302_input_g_address0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_input_g_ce0, "grp_RGBtoGray_512_512_2_fu_302_input_g_ce0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_input_b_address0, "grp_RGBtoGray_512_512_2_fu_302_input_b_address0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_input_b_ce0, "grp_RGBtoGray_512_512_2_fu_302_input_b_ce0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_output_r_address0, "grp_RGBtoGray_512_512_2_fu_302_output_r_address0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_output_r_ce0, "grp_RGBtoGray_512_512_2_fu_302_output_r_ce0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_output_r_we0, "grp_RGBtoGray_512_512_2_fu_302_output_r_we0");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_output_r_d0, "grp_RGBtoGray_512_512_2_fu_302_output_r_d0");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_ap_start, "grp_thresholdOtsu_fu_318_ap_start");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_ap_done, "grp_thresholdOtsu_fu_318_ap_done");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_ap_idle, "grp_thresholdOtsu_fu_318_ap_idle");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_ap_ready, "grp_thresholdOtsu_fu_318_ap_ready");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_src_address0, "grp_thresholdOtsu_fu_318_src_address0");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_src_ce0, "grp_thresholdOtsu_fu_318_src_ce0");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_dst_address0, "grp_thresholdOtsu_fu_318_dst_address0");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_dst_ce0, "grp_thresholdOtsu_fu_318_dst_ce0");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_dst_we0, "grp_thresholdOtsu_fu_318_dst_we0");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_dst_d0, "grp_thresholdOtsu_fu_318_dst_d0");
    sc_trace(mVcdFile, grp_watershed_algorithm_fu_328_ap_start, "grp_watershed_algorithm_fu_328_ap_start");
    sc_trace(mVcdFile, grp_watershed_algorithm_fu_328_ap_done, "grp_watershed_algorithm_fu_328_ap_done");
    sc_trace(mVcdFile, grp_watershed_algorithm_fu_328_ap_idle, "grp_watershed_algorithm_fu_328_ap_idle");
    sc_trace(mVcdFile, grp_watershed_algorithm_fu_328_ap_ready, "grp_watershed_algorithm_fu_328_ap_ready");
    sc_trace(mVcdFile, grp_watershed_algorithm_fu_328_grayOutput_address0, "grp_watershed_algorithm_fu_328_grayOutput_address0");
    sc_trace(mVcdFile, grp_watershed_algorithm_fu_328_grayOutput_ce0, "grp_watershed_algorithm_fu_328_grayOutput_ce0");
    sc_trace(mVcdFile, grp_connectedComponents_fu_340_ap_start, "grp_connectedComponents_fu_340_ap_start");
    sc_trace(mVcdFile, grp_connectedComponents_fu_340_ap_done, "grp_connectedComponents_fu_340_ap_done");
    sc_trace(mVcdFile, grp_connectedComponents_fu_340_ap_idle, "grp_connectedComponents_fu_340_ap_idle");
    sc_trace(mVcdFile, grp_connectedComponents_fu_340_ap_ready, "grp_connectedComponents_fu_340_ap_ready");
    sc_trace(mVcdFile, grp_connectedComponents_fu_340_sureForeground_address0, "grp_connectedComponents_fu_340_sureForeground_address0");
    sc_trace(mVcdFile, grp_connectedComponents_fu_340_sureForeground_ce0, "grp_connectedComponents_fu_340_sureForeground_ce0");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_ap_start, "grp_morphologyEx_fu_348_ap_start");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_ap_done, "grp_morphologyEx_fu_348_ap_done");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_ap_idle, "grp_morphologyEx_fu_348_ap_idle");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_ap_ready, "grp_morphologyEx_fu_348_ap_ready");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_dst_address0, "grp_morphologyEx_fu_348_dst_address0");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_dst_ce0, "grp_morphologyEx_fu_348_dst_ce0");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_dst_we0, "grp_morphologyEx_fu_348_dst_we0");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_dst_d0, "grp_morphologyEx_fu_348_dst_d0");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_binaryThreshold_address0, "grp_morphologyEx_fu_348_binaryThreshold_address0");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_binaryThreshold_ce0, "grp_morphologyEx_fu_348_binaryThreshold_ce0");
    sc_trace(mVcdFile, grp_dilate_fu_356_ap_start, "grp_dilate_fu_356_ap_start");
    sc_trace(mVcdFile, grp_dilate_fu_356_ap_done, "grp_dilate_fu_356_ap_done");
    sc_trace(mVcdFile, grp_dilate_fu_356_ap_idle, "grp_dilate_fu_356_ap_idle");
    sc_trace(mVcdFile, grp_dilate_fu_356_ap_ready, "grp_dilate_fu_356_ap_ready");
    sc_trace(mVcdFile, grp_dilate_fu_356_src_address0, "grp_dilate_fu_356_src_address0");
    sc_trace(mVcdFile, grp_dilate_fu_356_src_ce0, "grp_dilate_fu_356_src_ce0");
    sc_trace(mVcdFile, i_i_reg_228, "i_i_reg_228");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_i_reg_239, "j_i_reg_239");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_i6_reg_250, "i_i6_reg_250");
    sc_trace(mVcdFile, j_i1_reg_261, "j_i1_reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, i_i2_reg_272, "i_i2_reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_block_state32_on_subcall_done, "ap_block_state32_on_subcall_done");
    sc_trace(mVcdFile, j_i4_reg_283, "j_i4_reg_283");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_distanceTransform_fu_294_ap_start_reg, "grp_distanceTransform_fu_294_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_RGBtoGray_512_512_2_fu_302_ap_start_reg, "grp_RGBtoGray_512_512_2_fu_302_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_thresholdOtsu_fu_318_ap_start_reg, "grp_thresholdOtsu_fu_318_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_watershed_algorithm_fu_328_ap_start_reg, "grp_watershed_algorithm_fu_328_ap_start_reg");
    sc_trace(mVcdFile, grp_connectedComponents_fu_340_ap_start_reg, "grp_connectedComponents_fu_340_ap_start_reg");
    sc_trace(mVcdFile, grp_morphologyEx_fu_348_ap_start_reg, "grp_morphologyEx_fu_348_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_dilate_fu_356_ap_start_reg, "grp_dilate_fu_356_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_82_cast_fu_438_p1, "tmp_82_cast_fu_438_p1");
    sc_trace(mVcdFile, max_fu_108, "max_fu_108");
    sc_trace(mVcdFile, max_2_fu_525_p3, "max_2_fu_525_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_371_p0, "grp_fu_371_p0");
    sc_trace(mVcdFile, grp_fu_374_p0, "grp_fu_374_p0");
    sc_trace(mVcdFile, grp_fu_374_p1, "grp_fu_374_p1");
    sc_trace(mVcdFile, tmp_s_fu_405_p3, "tmp_s_fu_405_p3");
    sc_trace(mVcdFile, tmp_i_cast_fu_429_p1, "tmp_i_cast_fu_429_p1");
    sc_trace(mVcdFile, tmp_62_fu_433_p2, "tmp_62_fu_433_p2");
    sc_trace(mVcdFile, val_to_int_fu_443_p1, "val_to_int_fu_443_p1");
    sc_trace(mVcdFile, max_1_i_to_int_fu_460_p1, "max_1_i_to_int_fu_460_p1");
    sc_trace(mVcdFile, tmp_fu_446_p4, "tmp_fu_446_p4");
    sc_trace(mVcdFile, tmp_63_fu_456_p1, "tmp_63_fu_456_p1");
    sc_trace(mVcdFile, notrhs_fu_484_p2, "notrhs_fu_484_p2");
    sc_trace(mVcdFile, notlhs_fu_478_p2, "notlhs_fu_478_p2");
    sc_trace(mVcdFile, tmp_29_fu_464_p4, "tmp_29_fu_464_p4");
    sc_trace(mVcdFile, tmp_64_fu_474_p1, "tmp_64_fu_474_p1");
    sc_trace(mVcdFile, notrhs2_fu_502_p2, "notrhs2_fu_502_p2");
    sc_trace(mVcdFile, notlhs2_fu_496_p2, "notlhs2_fu_496_p2");
    sc_trace(mVcdFile, tmp_31_fu_490_p2, "tmp_31_fu_490_p2");
    sc_trace(mVcdFile, tmp_32_fu_508_p2, "tmp_32_fu_508_p2");
    sc_trace(mVcdFile, tmp_33_fu_514_p2, "tmp_33_fu_514_p2");
    sc_trace(mVcdFile, tmp_35_fu_520_p2, "tmp_35_fu_520_p2");
    sc_trace(mVcdFile, tmp_61_fu_541_p1, "tmp_61_fu_541_p1");
    sc_trace(mVcdFile, tmp_60_fu_563_p3, "tmp_60_fu_563_p3");
    sc_trace(mVcdFile, tmp_i9_cast_fu_587_p1, "tmp_i9_cast_fu_587_p1");
    sc_trace(mVcdFile, tmp_66_fu_591_p2, "tmp_66_fu_591_p2");
    sc_trace(mVcdFile, tmp_40_fu_601_p4, "tmp_40_fu_601_p4");
    sc_trace(mVcdFile, p_Val2_s_fu_616_p1, "p_Val2_s_fu_616_p1");
    sc_trace(mVcdFile, mantissa_V_fu_634_p4, "mantissa_V_fu_634_p4");
    sc_trace(mVcdFile, tmp_i_i_i_i_i_cast_fu_647_p1, "tmp_i_i_i_i_i_cast_fu_647_p1");
    sc_trace(mVcdFile, sh_assign_fu_650_p2, "sh_assign_fu_650_p2");
    sc_trace(mVcdFile, tmp_i_i_i_i_fu_664_p2, "tmp_i_i_i_i_fu_664_p2");
    sc_trace(mVcdFile, isNeg_fu_656_p3, "isNeg_fu_656_p3");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast_fu_669_p1, "tmp_i_i_i_i_cast_fu_669_p1");
    sc_trace(mVcdFile, ush_fu_673_p3, "ush_fu_673_p3");
    sc_trace(mVcdFile, sh_assign_6_cast_fu_681_p1, "sh_assign_6_cast_fu_681_p1");
    sc_trace(mVcdFile, sh_assign_6_cast_cas_fu_685_p1, "sh_assign_6_cast_cas_fu_685_p1");
    sc_trace(mVcdFile, mantissa_V_1_cast1_fu_643_p1, "mantissa_V_1_cast1_fu_643_p1");
    sc_trace(mVcdFile, tmp_i_i_i_i_44_fu_689_p1, "tmp_i_i_i_i_44_fu_689_p1");
    sc_trace(mVcdFile, r_V_fu_693_p2, "r_V_fu_693_p2");
    sc_trace(mVcdFile, tmp_69_fu_705_p3, "tmp_69_fu_705_p3");
    sc_trace(mVcdFile, r_V_1_fu_699_p2, "r_V_1_fu_699_p2");
    sc_trace(mVcdFile, tmp_67_fu_713_p1, "tmp_67_fu_713_p1");
    sc_trace(mVcdFile, tmp_68_fu_717_p4, "tmp_68_fu_717_p4");
    sc_trace(mVcdFile, tmp_54_i_to_int_fu_739_p1, "tmp_54_i_to_int_fu_739_p1");
    sc_trace(mVcdFile, tmp_38_fu_742_p4, "tmp_38_fu_742_p4");
    sc_trace(mVcdFile, tmp_70_fu_752_p1, "tmp_70_fu_752_p1");
    sc_trace(mVcdFile, notrhs3_fu_762_p2, "notrhs3_fu_762_p2");
    sc_trace(mVcdFile, notlhs3_fu_756_p2, "notlhs3_fu_756_p2");
    sc_trace(mVcdFile, tmp_42_fu_768_p2, "tmp_42_fu_768_p2");
    sc_trace(mVcdFile, tmp_43_fu_774_p2, "tmp_43_fu_774_p2");
    sc_trace(mVcdFile, tmp_44_fu_778_p2, "tmp_44_fu_778_p2");
    sc_trace(mVcdFile, tmp_65_fu_802_p3, "tmp_65_fu_802_p3");
    sc_trace(mVcdFile, tmp_i5_cast_fu_826_p1, "tmp_i5_cast_fu_826_p1");
    sc_trace(mVcdFile, tmp_71_fu_830_p2, "tmp_71_fu_830_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

image_segmentation::~image_segmentation() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grayOutput_U;
    delete binaryThreshold_U;
    delete morphOpening_U;
    delete distanceTransformOut_U;
    delete sureForeground_U;
    delete grp_distanceTransform_fu_294;
    delete grp_RGBtoGray_512_512_2_fu_302;
    delete grp_thresholdOtsu_fu_318;
    delete grp_watershed_algorithm_fu_328;
    delete grp_connectedComponents_fu_340;
    delete grp_morphologyEx_fu_348;
    delete grp_dilate_fu_356;
    delete imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U50;
    delete imageProcessing_sitofp_32ns_32_5_1_U51;
    delete imageProcessing_fcmp_32ns_32ns_1_1_1_U52;
}

void image_segmentation::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void image_segmentation::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_3F000000;
}

void image_segmentation::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void image_segmentation::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_RGBtoGray_512_512_2_fu_302_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_RGBtoGray_512_512_2_fu_302_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_RGBtoGray_512_512_2_fu_302_ap_ready.read())) {
            grp_RGBtoGray_512_512_2_fu_302_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_connectedComponents_fu_340_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i7_fu_551_p2.read()))) {
            grp_connectedComponents_fu_340_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_connectedComponents_fu_340_ap_ready.read())) {
            grp_connectedComponents_fu_340_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dilate_fu_356_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_dilate_fu_356_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dilate_fu_356_ap_ready.read())) {
            grp_dilate_fu_356_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_distanceTransform_fu_294_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_distanceTransform_fu_294_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_distanceTransform_fu_294_ap_ready.read())) {
            grp_distanceTransform_fu_294_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_morphologyEx_fu_348_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_morphologyEx_fu_348_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_morphologyEx_fu_348_ap_ready.read())) {
            grp_morphologyEx_fu_348_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_thresholdOtsu_fu_318_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_thresholdOtsu_fu_318_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_thresholdOtsu_fu_318_ap_ready.read())) {
            grp_thresholdOtsu_fu_318_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_watershed_algorithm_fu_328_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i7_fu_551_p2.read()))) {
            grp_watershed_algorithm_fu_328_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_watershed_algorithm_fu_328_ap_ready.read())) {
            grp_watershed_algorithm_fu_328_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_i_fu_814_p2.read()))) {
        i_i2_reg_272 = i_11_reg_973.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                esl_seteq<1,1,1>(ap_block_state32_on_subcall_done.read(), ap_const_boolean_0))) {
        i_i2_reg_272 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i1_fu_575_p2.read()))) {
        i_i6_reg_250 = i_10_reg_905.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_i6_reg_250 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_417_p2.read()))) {
        i_i_reg_228 = i_reg_852.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_i_reg_228 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i7_fu_551_p2.read()))) {
        j_i1_reg_261 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        j_i1_reg_261 = j_9_reg_918.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_i_fu_790_p2.read()))) {
        j_i4_reg_283 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        j_i4_reg_283 = j_10_reg_986.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_393_p2.read(), ap_const_lv1_0))) {
        j_i_reg_239 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j_i_reg_239 = j_reg_865.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        max_fu_108 = max_2_fu_525_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        max_fu_108 = distanceTransformOut_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        i_10_reg_905 = i_10_fu_557_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        i_11_reg_973 = i_11_fu_796_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_reg_852 = i_fu_399_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        j_10_reg_986 = j_10_fu_820_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        j_9_reg_918 = j_9_fu_581_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j_reg_865 = j_fu_423_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_575_p2.read()))) {
        notlhs4_reg_933 = notlhs4_fu_610_p2.read();
        tmp_85_cast_reg_923 = tmp_85_cast_fu_596_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        notrhs4_reg_897 = notrhs4_fu_545_p2.read();
        thresholdValue_assig_1_reg_892 = thresholdValue_assig_1_fu_537_p1.read();
        thresholdValue_assig_reg_887 = grp_fu_366_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
  esl_seteq<1,1,1>(exitcond1_i_fu_393_p2.read(), ap_const_lv1_1)) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        reg_383 = max_fu_108.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_34_reg_882 = grp_fu_374_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        tmp_46_reg_965 = tmp_46_fu_784_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        tmp_54_i_reg_959 = grp_fu_371_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_393_p2.read(), ap_const_lv1_0))) {
        tmp_79_cast_reg_857 = tmp_79_cast_fu_413_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i7_fu_551_p2.read()))) {
        tmp_81_cast_reg_910 = tmp_81_cast_fu_571_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_i_fu_790_p2.read()))) {
        tmp_84_cast_reg_978 = tmp_84_cast_fu_810_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_fu_814_p2.read()))) {
        tmp_89_cast_reg_991 = tmp_89_cast_fu_835_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_V_1_reg_944 = tmp_V_1_fu_630_p1.read();
        tmp_V_reg_938 = p_Val2_s_fu_616_p1.read().range(30, 23);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        val_V_reg_949 = val_V_fu_727_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        val_reg_875 = distanceTransformOut_q0.read();
    }
}

void image_segmentation::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void image_segmentation::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void image_segmentation::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void image_segmentation::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void image_segmentation::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void image_segmentation::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void image_segmentation::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void image_segmentation::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void image_segmentation::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void image_segmentation::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void image_segmentation::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void image_segmentation::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void image_segmentation::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void image_segmentation::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void image_segmentation::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void image_segmentation::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void image_segmentation::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void image_segmentation::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void image_segmentation::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void image_segmentation::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void image_segmentation::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void image_segmentation::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void image_segmentation::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void image_segmentation::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void image_segmentation::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void image_segmentation::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void image_segmentation::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void image_segmentation::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void image_segmentation::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void image_segmentation::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void image_segmentation::thread_ap_block_state32_on_subcall_done() {
    ap_block_state32_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_connectedComponents_fu_340_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_watershed_algorithm_fu_328_ap_done.read()));
}

void image_segmentation::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_i_fu_790_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void image_segmentation::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void image_segmentation::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_i_fu_790_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void image_segmentation::thread_binaryThreshold_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        binaryThreshold_address0 = grp_morphologyEx_fu_348_binaryThreshold_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        binaryThreshold_address0 = grp_thresholdOtsu_fu_318_dst_address0.read();
    } else {
        binaryThreshold_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_binaryThreshold_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        binaryThreshold_ce0 = grp_morphologyEx_fu_348_binaryThreshold_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        binaryThreshold_ce0 = grp_thresholdOtsu_fu_318_dst_ce0.read();
    } else {
        binaryThreshold_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_binaryThreshold_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        binaryThreshold_we0 = grp_thresholdOtsu_fu_318_dst_we0.read();
    } else {
        binaryThreshold_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_distanceTransformOut_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        distanceTransformOut_address0 =  (sc_lv<18>) (tmp_85_cast_fu_596_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        distanceTransformOut_address0 =  (sc_lv<18>) (tmp_82_cast_fu_438_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        distanceTransformOut_address0 = ap_const_lv18_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        distanceTransformOut_address0 = grp_distanceTransform_fu_294_outputImage_address0.read();
    } else {
        distanceTransformOut_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_distanceTransformOut_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        distanceTransformOut_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        distanceTransformOut_ce0 = grp_distanceTransform_fu_294_outputImage_ce0.read();
    } else {
        distanceTransformOut_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_distanceTransformOut_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        distanceTransformOut_ce1 = grp_distanceTransform_fu_294_outputImage_ce1.read();
    } else {
        distanceTransformOut_ce1 = ap_const_logic_0;
    }
}

void image_segmentation::thread_distanceTransformOut_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        distanceTransformOut_we0 = grp_distanceTransform_fu_294_outputImage_we0.read();
    } else {
        distanceTransformOut_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_distanceTransformOut_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        distanceTransformOut_we1 = grp_distanceTransform_fu_294_outputImage_we1.read();
    } else {
        distanceTransformOut_we1 = ap_const_logic_0;
    }
}

void image_segmentation::thread_exitcond1_i7_fu_551_p2() {
    exitcond1_i7_fu_551_p2 = (!i_i6_reg_250.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i_i6_reg_250.read() == ap_const_lv10_200);
}

void image_segmentation::thread_exitcond1_i_fu_393_p2() {
    exitcond1_i_fu_393_p2 = (!i_i_reg_228.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_228.read() == ap_const_lv10_200);
}

void image_segmentation::thread_exitcond2_i_fu_814_p2() {
    exitcond2_i_fu_814_p2 = (!j_i4_reg_283.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j_i4_reg_283.read() == ap_const_lv10_200);
}

void image_segmentation::thread_exitcond3_i_fu_790_p2() {
    exitcond3_i_fu_790_p2 = (!i_i2_reg_272.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_272.read() == ap_const_lv10_200);
}

void image_segmentation::thread_exitcond_i1_fu_575_p2() {
    exitcond_i1_fu_575_p2 = (!j_i1_reg_261.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j_i1_reg_261.read() == ap_const_lv10_200);
}

void image_segmentation::thread_exitcond_i_fu_417_p2() {
    exitcond_i_fu_417_p2 = (!j_i_reg_239.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_239.read() == ap_const_lv10_200);
}

void image_segmentation::thread_grayOutput_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grayOutput_address0 = grp_watershed_algorithm_fu_328_grayOutput_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grayOutput_address0 = grp_thresholdOtsu_fu_318_src_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grayOutput_address0 = grp_RGBtoGray_512_512_2_fu_302_output_r_address0.read();
    } else {
        grayOutput_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_grayOutput_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grayOutput_ce0 = grp_watershed_algorithm_fu_328_grayOutput_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grayOutput_ce0 = grp_thresholdOtsu_fu_318_src_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grayOutput_ce0 = grp_RGBtoGray_512_512_2_fu_302_output_r_ce0.read();
    } else {
        grayOutput_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_grayOutput_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grayOutput_we0 = grp_RGBtoGray_512_512_2_fu_302_output_r_we0.read();
    } else {
        grayOutput_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_grp_RGBtoGray_512_512_2_fu_302_ap_start() {
    grp_RGBtoGray_512_512_2_fu_302_ap_start = grp_RGBtoGray_512_512_2_fu_302_ap_start_reg.read();
}

void image_segmentation::thread_grp_connectedComponents_fu_340_ap_start() {
    grp_connectedComponents_fu_340_ap_start = grp_connectedComponents_fu_340_ap_start_reg.read();
}

void image_segmentation::thread_grp_dilate_fu_356_ap_start() {
    grp_dilate_fu_356_ap_start = grp_dilate_fu_356_ap_start_reg.read();
}

void image_segmentation::thread_grp_distanceTransform_fu_294_ap_start() {
    grp_distanceTransform_fu_294_ap_start = grp_distanceTransform_fu_294_ap_start_reg.read();
}

void image_segmentation::thread_grp_fu_371_p0() {
    grp_fu_371_p0 = esl_zext<32,8>(val_V_reg_949.read());
}

void image_segmentation::thread_grp_fu_374_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_fu_374_p0 = tmp_54_i_reg_959.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_374_p0 = val_reg_875.read();
    } else {
        grp_fu_374_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void image_segmentation::thread_grp_fu_374_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_fu_374_p1 = thresholdValue_assig_reg_887.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_374_p1 = max_fu_108.read();
    } else {
        grp_fu_374_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void image_segmentation::thread_grp_morphologyEx_fu_348_ap_start() {
    grp_morphologyEx_fu_348_ap_start = grp_morphologyEx_fu_348_ap_start_reg.read();
}

void image_segmentation::thread_grp_thresholdOtsu_fu_318_ap_start() {
    grp_thresholdOtsu_fu_318_ap_start = grp_thresholdOtsu_fu_318_ap_start_reg.read();
}

void image_segmentation::thread_grp_watershed_algorithm_fu_328_ap_start() {
    grp_watershed_algorithm_fu_328_ap_start = grp_watershed_algorithm_fu_328_ap_start_reg.read();
}

void image_segmentation::thread_i_10_fu_557_p2() {
    i_10_fu_557_p2 = (!i_i6_reg_250.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_i6_reg_250.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void image_segmentation::thread_i_11_fu_796_p2() {
    i_11_fu_796_p2 = (!i_i2_reg_272.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_i2_reg_272.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void image_segmentation::thread_i_fu_399_p2() {
    i_fu_399_p2 = (!i_i_reg_228.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_i_reg_228.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void image_segmentation::thread_input_image_b_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_image_b_address0 =  (sc_lv<18>) (tmp_89_cast_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_image_b_address0 = grp_RGBtoGray_512_512_2_fu_302_input_b_address0.read();
    } else {
        input_image_b_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_input_image_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_image_b_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_image_b_ce0 = grp_RGBtoGray_512_512_2_fu_302_input_b_ce0.read();
    } else {
        input_image_b_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_input_image_g_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_image_g_address0 =  (sc_lv<18>) (tmp_89_cast_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_image_g_address0 = grp_RGBtoGray_512_512_2_fu_302_input_g_address0.read();
    } else {
        input_image_g_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_input_image_g_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_image_g_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_image_g_ce0 = grp_RGBtoGray_512_512_2_fu_302_input_g_ce0.read();
    } else {
        input_image_g_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_input_image_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_image_r_address0 =  (sc_lv<18>) (tmp_89_cast_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_image_r_address0 = grp_RGBtoGray_512_512_2_fu_302_input_r_address0.read();
    } else {
        input_image_r_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_input_image_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        input_image_r_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_image_r_ce0 = grp_RGBtoGray_512_512_2_fu_302_input_r_ce0.read();
    } else {
        input_image_r_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_isNeg_fu_656_p3() {
    isNeg_fu_656_p3 = sh_assign_fu_650_p2.read().range(8, 8);
}

void image_segmentation::thread_j_10_fu_820_p2() {
    j_10_fu_820_p2 = (!j_i4_reg_283.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_i4_reg_283.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void image_segmentation::thread_j_9_fu_581_p2() {
    j_9_fu_581_p2 = (!j_i1_reg_261.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_i1_reg_261.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void image_segmentation::thread_j_fu_423_p2() {
    j_fu_423_p2 = (!j_i_reg_239.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_i_reg_239.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void image_segmentation::thread_mantissa_V_1_cast1_fu_643_p1() {
    mantissa_V_1_cast1_fu_643_p1 = esl_zext<55,25>(mantissa_V_fu_634_p4.read());
}

void image_segmentation::thread_mantissa_V_fu_634_p4() {
    mantissa_V_fu_634_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_reg_944.read()), ap_const_lv1_0);
}

void image_segmentation::thread_max_1_i_to_int_fu_460_p1() {
    max_1_i_to_int_fu_460_p1 = reg_383.read();
}

void image_segmentation::thread_max_2_fu_525_p3() {
    max_2_fu_525_p3 = (!tmp_35_fu_520_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_35_fu_520_p2.read()[0].to_bool())? val_reg_875.read(): reg_383.read());
}

void image_segmentation::thread_morphOpening_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        morphOpening_address0 = grp_dilate_fu_356_src_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        morphOpening_address0 = grp_morphologyEx_fu_348_dst_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        morphOpening_address0 = grp_distanceTransform_fu_294_morphOpening_address0.read();
    } else {
        morphOpening_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_morphOpening_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        morphOpening_ce0 = grp_dilate_fu_356_src_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        morphOpening_ce0 = grp_morphologyEx_fu_348_dst_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        morphOpening_ce0 = grp_distanceTransform_fu_294_morphOpening_ce0.read();
    } else {
        morphOpening_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_morphOpening_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        morphOpening_we0 = grp_morphologyEx_fu_348_dst_we0.read();
    } else {
        morphOpening_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_notlhs2_fu_496_p2() {
    notlhs2_fu_496_p2 = (!tmp_29_fu_464_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_29_fu_464_p4.read() != ap_const_lv8_FF);
}

void image_segmentation::thread_notlhs3_fu_756_p2() {
    notlhs3_fu_756_p2 = (!tmp_38_fu_742_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_38_fu_742_p4.read() != ap_const_lv8_FF);
}

void image_segmentation::thread_notlhs4_fu_610_p2() {
    notlhs4_fu_610_p2 = (!tmp_40_fu_601_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_40_fu_601_p4.read() != ap_const_lv8_FF);
}

void image_segmentation::thread_notlhs_fu_478_p2() {
    notlhs_fu_478_p2 = (!tmp_fu_446_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_446_p4.read() != ap_const_lv8_FF);
}

void image_segmentation::thread_notrhs2_fu_502_p2() {
    notrhs2_fu_502_p2 = (!tmp_64_fu_474_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_64_fu_474_p1.read() == ap_const_lv23_0);
}

void image_segmentation::thread_notrhs3_fu_762_p2() {
    notrhs3_fu_762_p2 = (!tmp_70_fu_752_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_70_fu_752_p1.read() == ap_const_lv23_0);
}

void image_segmentation::thread_notrhs4_fu_545_p2() {
    notrhs4_fu_545_p2 = (!tmp_61_fu_541_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_61_fu_541_p1.read() == ap_const_lv23_0);
}

void image_segmentation::thread_notrhs_fu_484_p2() {
    notrhs_fu_484_p2 = (!tmp_63_fu_456_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_63_fu_456_p1.read() == ap_const_lv23_0);
}

void image_segmentation::thread_output_image_b_address0() {
    output_image_b_address0 =  (sc_lv<18>) (tmp_89_cast_reg_991.read());
}

void image_segmentation::thread_output_image_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        output_image_b_ce0 = ap_const_logic_1;
    } else {
        output_image_b_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_output_image_b_d0() {
    output_image_b_d0 = input_image_b_q0.read();
}

void image_segmentation::thread_output_image_b_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        output_image_b_we0 = ap_const_logic_1;
    } else {
        output_image_b_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_output_image_g_address0() {
    output_image_g_address0 =  (sc_lv<18>) (tmp_89_cast_reg_991.read());
}

void image_segmentation::thread_output_image_g_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        output_image_g_ce0 = ap_const_logic_1;
    } else {
        output_image_g_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_output_image_g_d0() {
    output_image_g_d0 = input_image_g_q0.read();
}

void image_segmentation::thread_output_image_g_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        output_image_g_we0 = ap_const_logic_1;
    } else {
        output_image_g_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_output_image_r_address0() {
    output_image_r_address0 =  (sc_lv<18>) (tmp_89_cast_reg_991.read());
}

void image_segmentation::thread_output_image_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        output_image_r_ce0 = ap_const_logic_1;
    } else {
        output_image_r_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_output_image_r_d0() {
    output_image_r_d0 = input_image_r_q0.read();
}

void image_segmentation::thread_output_image_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        output_image_r_we0 = ap_const_logic_1;
    } else {
        output_image_r_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_p_Val2_s_fu_616_p1() {
    p_Val2_s_fu_616_p1 = distanceTransformOut_q0.read();
}

void image_segmentation::thread_r_V_1_fu_699_p2() {
    r_V_1_fu_699_p2 = (!tmp_i_i_i_i_44_fu_689_p1.read().is_01())? sc_lv<55>(): mantissa_V_1_cast1_fu_643_p1.read() << (unsigned short)tmp_i_i_i_i_44_fu_689_p1.read().to_uint();
}

void image_segmentation::thread_r_V_fu_693_p2() {
    r_V_fu_693_p2 = (!sh_assign_6_cast_cas_fu_685_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_634_p4.read() >> (unsigned short)sh_assign_6_cast_cas_fu_685_p1.read().to_uint();
}

void image_segmentation::thread_sh_assign_6_cast_cas_fu_685_p1() {
    sh_assign_6_cast_cas_fu_685_p1 = esl_sext<25,9>(ush_fu_673_p3.read());
}

void image_segmentation::thread_sh_assign_6_cast_fu_681_p1() {
    sh_assign_6_cast_fu_681_p1 = esl_sext<32,9>(ush_fu_673_p3.read());
}

void image_segmentation::thread_sh_assign_fu_650_p2() {
    sh_assign_fu_650_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_i_i_cast_fu_647_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_i_i_cast_fu_647_p1.read()));
}

void image_segmentation::thread_sureForeground_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        sureForeground_address0 =  (sc_lv<18>) (tmp_85_cast_reg_923.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        sureForeground_address0 = grp_connectedComponents_fu_340_sureForeground_address0.read();
    } else {
        sureForeground_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void image_segmentation::thread_sureForeground_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        sureForeground_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        sureForeground_ce0 = grp_connectedComponents_fu_340_sureForeground_ce0.read();
    } else {
        sureForeground_ce0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_sureForeground_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        sureForeground_we0 = ap_const_logic_1;
    } else {
        sureForeground_we0 = ap_const_logic_0;
    }
}

void image_segmentation::thread_thresholdValue_assig_1_fu_537_p1() {
    thresholdValue_assig_1_fu_537_p1 = grp_fu_366_p2.read();
}

void image_segmentation::thread_tmp_29_fu_464_p4() {
    tmp_29_fu_464_p4 = max_1_i_to_int_fu_460_p1.read().range(30, 23);
}

void image_segmentation::thread_tmp_31_fu_490_p2() {
    tmp_31_fu_490_p2 = (notrhs_fu_484_p2.read() | notlhs_fu_478_p2.read());
}

void image_segmentation::thread_tmp_32_fu_508_p2() {
    tmp_32_fu_508_p2 = (notrhs2_fu_502_p2.read() | notlhs2_fu_496_p2.read());
}

void image_segmentation::thread_tmp_33_fu_514_p2() {
    tmp_33_fu_514_p2 = (tmp_31_fu_490_p2.read() & tmp_32_fu_508_p2.read());
}

void image_segmentation::thread_tmp_35_fu_520_p2() {
    tmp_35_fu_520_p2 = (tmp_33_fu_514_p2.read() & tmp_34_reg_882.read());
}

void image_segmentation::thread_tmp_38_fu_742_p4() {
    tmp_38_fu_742_p4 = tmp_54_i_to_int_fu_739_p1.read().range(30, 23);
}

void image_segmentation::thread_tmp_40_fu_601_p4() {
    tmp_40_fu_601_p4 = thresholdValue_assig_1_reg_892.read().range(30, 23);
}

void image_segmentation::thread_tmp_42_fu_768_p2() {
    tmp_42_fu_768_p2 = (notrhs3_fu_762_p2.read() | notlhs3_fu_756_p2.read());
}

void image_segmentation::thread_tmp_43_fu_774_p2() {
    tmp_43_fu_774_p2 = (notrhs4_reg_897.read() | notlhs4_reg_933.read());
}

void image_segmentation::thread_tmp_44_fu_778_p2() {
    tmp_44_fu_778_p2 = (tmp_42_fu_768_p2.read() & tmp_43_fu_774_p2.read());
}

void image_segmentation::thread_tmp_46_fu_784_p2() {
    tmp_46_fu_784_p2 = (tmp_44_fu_778_p2.read() & grp_fu_374_p2.read());
}

void image_segmentation::thread_tmp_54_i_to_int_fu_739_p1() {
    tmp_54_i_to_int_fu_739_p1 = tmp_54_i_reg_959.read();
}

void image_segmentation::thread_tmp_60_fu_563_p3() {
    tmp_60_fu_563_p3 = esl_concat<10,9>(i_i6_reg_250.read(), ap_const_lv9_0);
}

void image_segmentation::thread_tmp_61_fu_541_p1() {
    tmp_61_fu_541_p1 = thresholdValue_assig_1_fu_537_p1.read().range(23-1, 0);
}

void image_segmentation::thread_tmp_62_fu_433_p2() {
    tmp_62_fu_433_p2 = (!tmp_79_cast_reg_857.read().is_01() || !tmp_i_cast_fu_429_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_79_cast_reg_857.read()) + sc_biguint<20>(tmp_i_cast_fu_429_p1.read()));
}

void image_segmentation::thread_tmp_63_fu_456_p1() {
    tmp_63_fu_456_p1 = val_to_int_fu_443_p1.read().range(23-1, 0);
}

void image_segmentation::thread_tmp_64_fu_474_p1() {
    tmp_64_fu_474_p1 = max_1_i_to_int_fu_460_p1.read().range(23-1, 0);
}

void image_segmentation::thread_tmp_65_fu_802_p3() {
    tmp_65_fu_802_p3 = esl_concat<10,9>(i_i2_reg_272.read(), ap_const_lv9_0);
}

void image_segmentation::thread_tmp_66_fu_591_p2() {
    tmp_66_fu_591_p2 = (!tmp_i9_cast_fu_587_p1.read().is_01() || !tmp_81_cast_reg_910.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_i9_cast_fu_587_p1.read()) + sc_biguint<20>(tmp_81_cast_reg_910.read()));
}

void image_segmentation::thread_tmp_67_fu_713_p1() {
    tmp_67_fu_713_p1 = esl_zext<8,1>(tmp_69_fu_705_p3.read());
}

void image_segmentation::thread_tmp_68_fu_717_p4() {
    tmp_68_fu_717_p4 = r_V_1_fu_699_p2.read().range(31, 24);
}

void image_segmentation::thread_tmp_69_fu_705_p3() {
    tmp_69_fu_705_p3 = r_V_fu_693_p2.read().range(24, 24);
}

void image_segmentation::thread_tmp_70_fu_752_p1() {
    tmp_70_fu_752_p1 = tmp_54_i_to_int_fu_739_p1.read().range(23-1, 0);
}

void image_segmentation::thread_tmp_71_fu_830_p2() {
    tmp_71_fu_830_p2 = (!tmp_84_cast_reg_978.read().is_01() || !tmp_i5_cast_fu_826_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_84_cast_reg_978.read()) + sc_biguint<20>(tmp_i5_cast_fu_826_p1.read()));
}

void image_segmentation::thread_tmp_79_cast_fu_413_p1() {
    tmp_79_cast_fu_413_p1 = esl_zext<20,19>(tmp_s_fu_405_p3.read());
}

void image_segmentation::thread_tmp_81_cast_fu_571_p1() {
    tmp_81_cast_fu_571_p1 = esl_zext<20,19>(tmp_60_fu_563_p3.read());
}

void image_segmentation::thread_tmp_82_cast_fu_438_p1() {
    tmp_82_cast_fu_438_p1 = esl_zext<64,20>(tmp_62_fu_433_p2.read());
}

void image_segmentation::thread_tmp_84_cast_fu_810_p1() {
    tmp_84_cast_fu_810_p1 = esl_zext<20,19>(tmp_65_fu_802_p3.read());
}

void image_segmentation::thread_tmp_85_cast_fu_596_p1() {
    tmp_85_cast_fu_596_p1 = esl_zext<64,20>(tmp_66_fu_591_p2.read());
}

void image_segmentation::thread_tmp_89_cast_fu_835_p1() {
    tmp_89_cast_fu_835_p1 = esl_zext<64,20>(tmp_71_fu_830_p2.read());
}

void image_segmentation::thread_tmp_V_1_fu_630_p1() {
    tmp_V_1_fu_630_p1 = p_Val2_s_fu_616_p1.read().range(23-1, 0);
}

void image_segmentation::thread_tmp_fu_446_p4() {
    tmp_fu_446_p4 = val_to_int_fu_443_p1.read().range(30, 23);
}

void image_segmentation::thread_tmp_i5_cast_fu_826_p1() {
    tmp_i5_cast_fu_826_p1 = esl_zext<20,10>(j_i4_reg_283.read());
}

void image_segmentation::thread_tmp_i9_cast_fu_587_p1() {
    tmp_i9_cast_fu_587_p1 = esl_zext<20,10>(j_i1_reg_261.read());
}

void image_segmentation::thread_tmp_i_cast_fu_429_p1() {
    tmp_i_cast_fu_429_p1 = esl_zext<20,10>(j_i_reg_239.read());
}

void image_segmentation::thread_tmp_i_i_i_i_44_fu_689_p1() {
    tmp_i_i_i_i_44_fu_689_p1 = esl_zext<55,32>(sh_assign_6_cast_fu_681_p1.read());
}

void image_segmentation::thread_tmp_i_i_i_i_cast_fu_669_p1() {
    tmp_i_i_i_i_cast_fu_669_p1 = esl_sext<9,8>(tmp_i_i_i_i_fu_664_p2.read());
}

void image_segmentation::thread_tmp_i_i_i_i_fu_664_p2() {
    tmp_i_i_i_i_fu_664_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_reg_938.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_reg_938.read()));
}

void image_segmentation::thread_tmp_i_i_i_i_i_cast_fu_647_p1() {
    tmp_i_i_i_i_i_cast_fu_647_p1 = esl_zext<9,8>(tmp_V_reg_938.read());
}

void image_segmentation::thread_tmp_s_fu_405_p3() {
    tmp_s_fu_405_p3 = esl_concat<10,9>(i_i_reg_228.read(), ap_const_lv9_0);
}

void image_segmentation::thread_ush_fu_673_p3() {
    ush_fu_673_p3 = (!isNeg_fu_656_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_656_p3.read()[0].to_bool())? tmp_i_i_i_i_cast_fu_669_p1.read(): sh_assign_fu_650_p2.read());
}

void image_segmentation::thread_val_V_fu_727_p3() {
    val_V_fu_727_p3 = (!isNeg_fu_656_p3.read()[0].is_01())? sc_lv<8>(): ((isNeg_fu_656_p3.read()[0].to_bool())? tmp_67_fu_713_p1.read(): tmp_68_fu_717_p4.read());
}

void image_segmentation::thread_val_to_int_fu_443_p1() {
    val_to_int_fu_443_p1 = val_reg_875.read();
}

void image_segmentation::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_RGBtoGray_512_512_2_fu_302_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_thresholdOtsu_fu_318_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_morphologyEx_fu_348_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_dilate_fu_356_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_distanceTransform_fu_294_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_393_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_417_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i7_fu_551_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i1_fu_575_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(ap_block_state32_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_i_fu_790_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        case 8589934592 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_i_fu_814_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<35>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

