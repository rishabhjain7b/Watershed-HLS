// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "morphologyEx.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic morphologyEx::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic morphologyEx::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> morphologyEx::ap_ST_fsm_state1 = "1";
const sc_lv<17> morphologyEx::ap_ST_fsm_state2 = "10";
const sc_lv<17> morphologyEx::ap_ST_fsm_state3 = "100";
const sc_lv<17> morphologyEx::ap_ST_fsm_state4 = "1000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state5 = "10000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state6 = "100000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> morphologyEx::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> morphologyEx::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> morphologyEx::ap_const_lv32_1 = "1";
const sc_lv<1> morphologyEx::ap_const_lv1_0 = "0";
const sc_lv<32> morphologyEx::ap_const_lv32_2 = "10";
const sc_lv<32> morphologyEx::ap_const_lv32_3 = "11";
const sc_lv<32> morphologyEx::ap_const_lv32_4 = "100";
const sc_lv<32> morphologyEx::ap_const_lv32_5 = "101";
const sc_lv<1> morphologyEx::ap_const_lv1_1 = "1";
const sc_lv<32> morphologyEx::ap_const_lv32_6 = "110";
const sc_lv<32> morphologyEx::ap_const_lv32_7 = "111";
const sc_lv<32> morphologyEx::ap_const_lv32_8 = "1000";
const sc_lv<32> morphologyEx::ap_const_lv32_9 = "1001";
const sc_lv<32> morphologyEx::ap_const_lv32_A = "1010";
const sc_lv<32> morphologyEx::ap_const_lv32_B = "1011";
const sc_lv<32> morphologyEx::ap_const_lv32_C = "1100";
const sc_lv<32> morphologyEx::ap_const_lv32_D = "1101";
const sc_lv<32> morphologyEx::ap_const_lv32_E = "1110";
const sc_lv<32> morphologyEx::ap_const_lv32_F = "1111";
const sc_lv<10> morphologyEx::ap_const_lv10_0 = "0000000000";
const sc_lv<2> morphologyEx::ap_const_lv2_0 = "00";
const sc_lv<32> morphologyEx::ap_const_lv32_FF = "11111111";
const sc_lv<32> morphologyEx::ap_const_lv32_10 = "10000";
const sc_lv<10> morphologyEx::ap_const_lv10_200 = "1000000000";
const sc_lv<10> morphologyEx::ap_const_lv10_1 = "1";
const sc_lv<9> morphologyEx::ap_const_lv9_0 = "000000000";
const sc_lv<2> morphologyEx::ap_const_lv2_3 = "11";
const sc_lv<2> morphologyEx::ap_const_lv2_1 = "1";
const sc_lv<2> morphologyEx::ap_const_lv2_2 = "10";
const bool morphologyEx::ap_const_boolean_1 = true;

morphologyEx::morphologyEx(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_U = new morphologyEx_temp("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    temp_U->q0(temp_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond6_fu_531_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond6_fu_531_p2 );

    SC_METHOD(thread_binaryThreshold_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_63_cast_fu_498_p1 );

    SC_METHOD(thread_binaryThreshold_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dst_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_66_cast_reg_1028 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_53_cast_fu_416_p1 );
    sensitive << ( tmp_77_cast_fu_754_p1 );

    SC_METHOD(thread_dst_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_dst_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( temp_q0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_40_fu_402_p1 );

    SC_METHOD(thread_dst_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_331_p2 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_exitcond10_fu_291_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i1_reg_116 );

    SC_METHOD(thread_exitcond1_fu_795_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( i9_reg_265 );

    SC_METHOD(thread_exitcond2_fu_677_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( l6_reg_254 );

    SC_METHOD(thread_exitcond3_fu_587_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( k5_reg_231 );

    SC_METHOD(thread_exitcond4_fu_575_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j4_reg_207 );

    SC_METHOD(thread_exitcond5_fu_547_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i3_reg_196 );

    SC_METHOD(thread_exitcond6_fu_531_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( iter_reg_185 );

    SC_METHOD(thread_exitcond7_fu_421_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( l_reg_162 );

    SC_METHOD(thread_exitcond8_fu_331_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_reg_139 );

    SC_METHOD(thread_exitcond9_fu_319_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j2_reg_127 );

    SC_METHOD(thread_exitcond_fu_819_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( j9_reg_276 );

    SC_METHOD(thread_i1_cast_fu_287_p1);
    sensitive << ( i1_reg_116 );

    SC_METHOD(thread_i3_cast_fu_543_p1);
    sensitive << ( i3_reg_196 );

    SC_METHOD(thread_i_8_fu_553_p2);
    sensitive << ( i3_reg_196 );

    SC_METHOD(thread_i_9_fu_801_p2);
    sensitive << ( i9_reg_265 );

    SC_METHOD(thread_i_fu_297_p2);
    sensitive << ( i1_reg_116 );

    SC_METHOD(thread_icmp2_fu_472_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond7_fu_421_p2 );
    sensitive << ( tmp_44_fu_462_p4 );

    SC_METHOD(thread_icmp3_fu_638_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond3_fu_587_p2 );
    sensitive << ( tmp_54_fu_628_p4 );

    SC_METHOD(thread_icmp4_fu_728_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond2_fu_677_p2 );
    sensitive << ( tmp_57_fu_718_p4 );

    SC_METHOD(thread_icmp_fu_382_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_331_p2 );
    sensitive << ( tmp_42_fu_372_p4 );

    SC_METHOD(thread_iter_1_fu_537_p2);
    sensitive << ( iter_reg_185 );

    SC_METHOD(thread_j2_cast_fu_315_p1);
    sensitive << ( j2_reg_127 );

    SC_METHOD(thread_j4_cast_fu_571_p1);
    sensitive << ( j4_reg_207 );

    SC_METHOD(thread_j_7_fu_825_p2);
    sensitive << ( j9_reg_276 );

    SC_METHOD(thread_j_8_fu_581_p2);
    sensitive << ( j4_reg_207 );

    SC_METHOD(thread_j_fu_325_p2);
    sensitive << ( j2_reg_127 );

    SC_METHOD(thread_k_2_fu_337_p2);
    sensitive << ( k_reg_139 );

    SC_METHOD(thread_k_3_fu_593_p2);
    sensitive << ( k5_reg_231 );

    SC_METHOD(thread_l_1_fu_427_p2);
    sensitive << ( l_reg_162 );

    SC_METHOD(thread_l_2_fu_683_p2);
    sensitive << ( l6_reg_254 );

    SC_METHOD(thread_max_val_2_cast_fu_762_p1);
    sensitive << ( dst_q0 );

    SC_METHOD(thread_max_val_2_fu_758_p1);
    sensitive << ( dst_q0 );

    SC_METHOD(thread_max_val_2_max_val_1_fu_776_p3);
    sensitive << ( tmp_59_fu_766_p2 );
    sensitive << ( max_val_2_cast_fu_762_p1 );
    sensitive << ( tmp_60_fu_772_p1 );

    SC_METHOD(thread_max_val_2_max_val_1_s_fu_784_p1);
    sensitive << ( max_val_2_max_val_1_fu_776_p3 );

    SC_METHOD(thread_max_val_3_fu_788_p3);
    sensitive << ( or_cond6_reg_987 );
    sensitive << ( max_val_1_reg_242 );
    sensitive << ( max_val_2_max_val_1_s_fu_784_p1 );

    SC_METHOD(thread_min_val_2_fu_502_p3);
    sensitive << ( binaryThreshold_q0 );

    SC_METHOD(thread_min_val_2_min_val_1_fu_516_p3);
    sensitive << ( min_val_1_reg_173 );
    sensitive << ( min_val_2_fu_502_p3 );
    sensitive << ( tmp_50_fu_510_p2 );

    SC_METHOD(thread_min_val_3_fu_524_p3);
    sensitive << ( or_cond3_reg_902 );
    sensitive << ( min_val_1_reg_173 );
    sensitive << ( min_val_2_min_val_1_fu_516_p3 );

    SC_METHOD(thread_or_cond3_fu_484_p2);
    sensitive << ( tmp4_reg_889 );
    sensitive << ( tmp5_fu_478_p2 );

    SC_METHOD(thread_or_cond6_fu_740_p2);
    sensitive << ( tmp8_reg_974 );
    sensitive << ( tmp9_fu_734_p2 );

    SC_METHOD(thread_rev1_fu_622_p2);
    sensitive << ( tmp_53_fu_614_p3 );

    SC_METHOD(thread_rev2_fu_712_p2);
    sensitive << ( tmp_56_fu_704_p3 );

    SC_METHOD(thread_rev7_fu_456_p2);
    sensitive << ( tmp_43_fu_448_p3 );

    SC_METHOD(thread_rev_fu_366_p2);
    sensitive << ( tmp_41_fu_358_p3 );

    SC_METHOD(thread_temp_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_66_cast_fu_840_p1 );
    sensitive << ( tmp_69_cast_fu_672_p1 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( max_val_reg_219 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond3_fu_587_p2 );

    SC_METHOD(thread_tmp2_cast_fu_349_p1);
    sensitive << ( tmp2_fu_343_p2 );

    SC_METHOD(thread_tmp2_fu_343_p2);
    sensitive << ( k_reg_139 );

    SC_METHOD(thread_tmp3_cast_fu_439_p1);
    sensitive << ( tmp3_fu_433_p2 );

    SC_METHOD(thread_tmp3_fu_433_p2);
    sensitive << ( l_reg_162 );

    SC_METHOD(thread_tmp4_fu_396_p2);
    sensitive << ( icmp_fu_382_p2 );
    sensitive << ( rev_fu_366_p2 );

    SC_METHOD(thread_tmp5_fu_478_p2);
    sensitive << ( icmp2_fu_472_p2 );
    sensitive << ( rev7_fu_456_p2 );

    SC_METHOD(thread_tmp6_cast_fu_605_p1);
    sensitive << ( tmp6_fu_599_p2 );

    SC_METHOD(thread_tmp6_fu_599_p2);
    sensitive << ( k5_reg_231 );

    SC_METHOD(thread_tmp7_cast_fu_695_p1);
    sensitive << ( tmp7_fu_689_p2 );

    SC_METHOD(thread_tmp7_fu_689_p2);
    sensitive << ( l6_reg_254 );

    SC_METHOD(thread_tmp8_fu_652_p2);
    sensitive << ( icmp3_fu_638_p2 );
    sensitive << ( rev1_fu_622_p2 );

    SC_METHOD(thread_tmp9_fu_734_p2);
    sensitive << ( icmp4_fu_728_p2 );
    sensitive << ( rev2_fu_712_p2 );

    SC_METHOD(thread_tmp_40_fu_402_p1);
    sensitive << ( min_val_reg_150 );

    SC_METHOD(thread_tmp_41_fu_358_p3);
    sensitive << ( x_fu_353_p2 );

    SC_METHOD(thread_tmp_42_fu_372_p4);
    sensitive << ( x_fu_353_p2 );

    SC_METHOD(thread_tmp_43_fu_448_p3);
    sensitive << ( y_fu_443_p2 );

    SC_METHOD(thread_tmp_44_fu_462_p4);
    sensitive << ( y_fu_443_p2 );

    SC_METHOD(thread_tmp_46_fu_411_p2);
    sensitive << ( tmp_50_cast_reg_858 );
    sensitive << ( tmp_49_cast_fu_407_p1 );

    SC_METHOD(thread_tmp_47_fu_388_p3);
    sensitive << ( x_fu_353_p2 );

    SC_METHOD(thread_tmp_48_fu_807_p3);
    sensitive << ( i9_reg_265 );

    SC_METHOD(thread_tmp_49_cast_fu_407_p1);
    sensitive << ( j2_reg_127 );

    SC_METHOD(thread_tmp_49_fu_493_p2);
    sensitive << ( tmp_47_reg_884 );
    sensitive << ( tmp_62_cast_fu_489_p1 );

    SC_METHOD(thread_tmp_50_cast_fu_311_p1);
    sensitive << ( tmp_fu_303_p3 );

    SC_METHOD(thread_tmp_50_fu_510_p2);
    sensitive << ( or_cond3_reg_902 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( min_val_1_reg_173 );
    sensitive << ( min_val_2_fu_502_p3 );

    SC_METHOD(thread_tmp_51_fu_835_p2);
    sensitive << ( tmp_59_cast_reg_1015 );
    sensitive << ( tmp_65_cast_fu_831_p1 );

    SC_METHOD(thread_tmp_52_cast_fu_567_p1);
    sensitive << ( tmp_s_fu_559_p3 );

    SC_METHOD(thread_tmp_52_fu_667_p2);
    sensitive << ( tmp_52_cast_reg_943 );
    sensitive << ( tmp_68_cast_fu_663_p1 );

    SC_METHOD(thread_tmp_53_cast_fu_416_p1);
    sensitive << ( tmp_46_fu_411_p2 );

    SC_METHOD(thread_tmp_53_fu_614_p3);
    sensitive << ( x_1_fu_609_p2 );

    SC_METHOD(thread_tmp_54_fu_628_p4);
    sensitive << ( x_1_fu_609_p2 );

    SC_METHOD(thread_tmp_55_fu_644_p3);
    sensitive << ( x_1_fu_609_p2 );

    SC_METHOD(thread_tmp_56_fu_704_p3);
    sensitive << ( y_1_fu_699_p2 );

    SC_METHOD(thread_tmp_57_fu_718_p4);
    sensitive << ( y_1_fu_699_p2 );

    SC_METHOD(thread_tmp_58_fu_749_p2);
    sensitive << ( tmp_55_reg_969 );
    sensitive << ( tmp_76_cast_fu_745_p1 );

    SC_METHOD(thread_tmp_59_cast_fu_815_p1);
    sensitive << ( tmp_48_fu_807_p3 );

    SC_METHOD(thread_tmp_59_fu_766_p2);
    sensitive << ( or_cond6_reg_987 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( max_val_1_reg_242 );
    sensitive << ( max_val_2_fu_758_p1 );

    SC_METHOD(thread_tmp_60_fu_772_p1);
    sensitive << ( max_val_1_reg_242 );

    SC_METHOD(thread_tmp_62_cast_fu_489_p1);
    sensitive << ( y_fu_443_p2 );

    SC_METHOD(thread_tmp_63_cast_fu_498_p1);
    sensitive << ( tmp_49_reg_907 );

    SC_METHOD(thread_tmp_65_cast_fu_831_p1);
    sensitive << ( j9_reg_276 );

    SC_METHOD(thread_tmp_66_cast_fu_840_p1);
    sensitive << ( tmp_51_fu_835_p2 );

    SC_METHOD(thread_tmp_68_cast_fu_663_p1);
    sensitive << ( j4_reg_207 );

    SC_METHOD(thread_tmp_69_cast_fu_672_p1);
    sensitive << ( tmp_52_fu_667_p2 );

    SC_METHOD(thread_tmp_76_cast_fu_745_p1);
    sensitive << ( y_1_fu_699_p2 );

    SC_METHOD(thread_tmp_77_cast_fu_754_p1);
    sensitive << ( tmp_58_reg_992 );

    SC_METHOD(thread_tmp_fu_303_p3);
    sensitive << ( i1_reg_116 );

    SC_METHOD(thread_tmp_s_fu_559_p3);
    sensitive << ( i3_reg_196 );

    SC_METHOD(thread_x_1_fu_609_p2);
    sensitive << ( i3_cast_reg_930 );
    sensitive << ( tmp6_cast_fu_605_p1 );

    SC_METHOD(thread_x_fu_353_p2);
    sensitive << ( i1_cast_reg_845 );
    sensitive << ( tmp2_cast_fu_349_p1 );

    SC_METHOD(thread_y_1_fu_699_p2);
    sensitive << ( j4_cast_reg_948 );
    sensitive << ( tmp7_cast_fu_695_p1 );

    SC_METHOD(thread_y_fu_443_p2);
    sensitive << ( j2_cast_reg_863 );
    sensitive << ( tmp3_cast_fu_439_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond10_fu_291_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_331_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond7_fu_421_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond5_fu_547_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond3_fu_587_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond2_fu_677_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( exitcond1_fu_795_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_819_p2 );
    sensitive << ( exitcond9_fu_319_p2 );
    sensitive << ( exitcond4_fu_575_p2 );
    sensitive << ( exitcond6_fu_531_p2 );

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "morphologyEx_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dst_address0, "(port)dst_address0");
    sc_trace(mVcdFile, dst_ce0, "(port)dst_ce0");
    sc_trace(mVcdFile, dst_we0, "(port)dst_we0");
    sc_trace(mVcdFile, dst_d0, "(port)dst_d0");
    sc_trace(mVcdFile, dst_q0, "(port)dst_q0");
    sc_trace(mVcdFile, binaryThreshold_address0, "(port)binaryThreshold_address0");
    sc_trace(mVcdFile, binaryThreshold_ce0, "(port)binaryThreshold_ce0");
    sc_trace(mVcdFile, binaryThreshold_q0, "(port)binaryThreshold_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i1_cast_fu_287_p1, "i1_cast_fu_287_p1");
    sc_trace(mVcdFile, i1_cast_reg_845, "i1_cast_reg_845");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_297_p2, "i_fu_297_p2");
    sc_trace(mVcdFile, i_reg_853, "i_reg_853");
    sc_trace(mVcdFile, tmp_50_cast_fu_311_p1, "tmp_50_cast_fu_311_p1");
    sc_trace(mVcdFile, tmp_50_cast_reg_858, "tmp_50_cast_reg_858");
    sc_trace(mVcdFile, exitcond10_fu_291_p2, "exitcond10_fu_291_p2");
    sc_trace(mVcdFile, j2_cast_fu_315_p1, "j2_cast_fu_315_p1");
    sc_trace(mVcdFile, j2_cast_reg_863, "j2_cast_reg_863");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_fu_325_p2, "j_fu_325_p2");
    sc_trace(mVcdFile, j_reg_871, "j_reg_871");
    sc_trace(mVcdFile, k_2_fu_337_p2, "k_2_fu_337_p2");
    sc_trace(mVcdFile, k_2_reg_879, "k_2_reg_879");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_47_fu_388_p3, "tmp_47_fu_388_p3");
    sc_trace(mVcdFile, tmp_47_reg_884, "tmp_47_reg_884");
    sc_trace(mVcdFile, exitcond8_fu_331_p2, "exitcond8_fu_331_p2");
    sc_trace(mVcdFile, tmp4_fu_396_p2, "tmp4_fu_396_p2");
    sc_trace(mVcdFile, tmp4_reg_889, "tmp4_reg_889");
    sc_trace(mVcdFile, l_1_fu_427_p2, "l_1_fu_427_p2");
    sc_trace(mVcdFile, l_1_reg_897, "l_1_reg_897");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, or_cond3_fu_484_p2, "or_cond3_fu_484_p2");
    sc_trace(mVcdFile, or_cond3_reg_902, "or_cond3_reg_902");
    sc_trace(mVcdFile, exitcond7_fu_421_p2, "exitcond7_fu_421_p2");
    sc_trace(mVcdFile, tmp_49_fu_493_p2, "tmp_49_fu_493_p2");
    sc_trace(mVcdFile, tmp_49_reg_907, "tmp_49_reg_907");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, min_val_3_fu_524_p3, "min_val_3_fu_524_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, iter_1_fu_537_p2, "iter_1_fu_537_p2");
    sc_trace(mVcdFile, iter_1_reg_925, "iter_1_reg_925");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i3_cast_fu_543_p1, "i3_cast_fu_543_p1");
    sc_trace(mVcdFile, i3_cast_reg_930, "i3_cast_reg_930");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_8_fu_553_p2, "i_8_fu_553_p2");
    sc_trace(mVcdFile, i_8_reg_938, "i_8_reg_938");
    sc_trace(mVcdFile, tmp_52_cast_fu_567_p1, "tmp_52_cast_fu_567_p1");
    sc_trace(mVcdFile, tmp_52_cast_reg_943, "tmp_52_cast_reg_943");
    sc_trace(mVcdFile, exitcond5_fu_547_p2, "exitcond5_fu_547_p2");
    sc_trace(mVcdFile, j4_cast_fu_571_p1, "j4_cast_fu_571_p1");
    sc_trace(mVcdFile, j4_cast_reg_948, "j4_cast_reg_948");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, j_8_fu_581_p2, "j_8_fu_581_p2");
    sc_trace(mVcdFile, j_8_reg_956, "j_8_reg_956");
    sc_trace(mVcdFile, k_3_fu_593_p2, "k_3_fu_593_p2");
    sc_trace(mVcdFile, k_3_reg_964, "k_3_reg_964");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_55_fu_644_p3, "tmp_55_fu_644_p3");
    sc_trace(mVcdFile, tmp_55_reg_969, "tmp_55_reg_969");
    sc_trace(mVcdFile, exitcond3_fu_587_p2, "exitcond3_fu_587_p2");
    sc_trace(mVcdFile, tmp8_fu_652_p2, "tmp8_fu_652_p2");
    sc_trace(mVcdFile, tmp8_reg_974, "tmp8_reg_974");
    sc_trace(mVcdFile, l_2_fu_683_p2, "l_2_fu_683_p2");
    sc_trace(mVcdFile, l_2_reg_982, "l_2_reg_982");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, or_cond6_fu_740_p2, "or_cond6_fu_740_p2");
    sc_trace(mVcdFile, or_cond6_reg_987, "or_cond6_reg_987");
    sc_trace(mVcdFile, exitcond2_fu_677_p2, "exitcond2_fu_677_p2");
    sc_trace(mVcdFile, tmp_58_fu_749_p2, "tmp_58_fu_749_p2");
    sc_trace(mVcdFile, tmp_58_reg_992, "tmp_58_reg_992");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, max_val_3_fu_788_p3, "max_val_3_fu_788_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, i_9_fu_801_p2, "i_9_fu_801_p2");
    sc_trace(mVcdFile, i_9_reg_1010, "i_9_reg_1010");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_59_cast_fu_815_p1, "tmp_59_cast_fu_815_p1");
    sc_trace(mVcdFile, tmp_59_cast_reg_1015, "tmp_59_cast_reg_1015");
    sc_trace(mVcdFile, exitcond1_fu_795_p2, "exitcond1_fu_795_p2");
    sc_trace(mVcdFile, j_7_fu_825_p2, "j_7_fu_825_p2");
    sc_trace(mVcdFile, j_7_reg_1023, "j_7_reg_1023");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_66_cast_fu_840_p1, "tmp_66_cast_fu_840_p1");
    sc_trace(mVcdFile, tmp_66_cast_reg_1028, "tmp_66_cast_reg_1028");
    sc_trace(mVcdFile, exitcond_fu_819_p2, "exitcond_fu_819_p2");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, temp_q0, "temp_q0");
    sc_trace(mVcdFile, i1_reg_116, "i1_reg_116");
    sc_trace(mVcdFile, exitcond9_fu_319_p2, "exitcond9_fu_319_p2");
    sc_trace(mVcdFile, j2_reg_127, "j2_reg_127");
    sc_trace(mVcdFile, k_reg_139, "k_reg_139");
    sc_trace(mVcdFile, min_val_reg_150, "min_val_reg_150");
    sc_trace(mVcdFile, l_reg_162, "l_reg_162");
    sc_trace(mVcdFile, min_val_1_reg_173, "min_val_1_reg_173");
    sc_trace(mVcdFile, iter_reg_185, "iter_reg_185");
    sc_trace(mVcdFile, i3_reg_196, "i3_reg_196");
    sc_trace(mVcdFile, exitcond4_fu_575_p2, "exitcond4_fu_575_p2");
    sc_trace(mVcdFile, exitcond6_fu_531_p2, "exitcond6_fu_531_p2");
    sc_trace(mVcdFile, j4_reg_207, "j4_reg_207");
    sc_trace(mVcdFile, max_val_reg_219, "max_val_reg_219");
    sc_trace(mVcdFile, k5_reg_231, "k5_reg_231");
    sc_trace(mVcdFile, max_val_1_reg_242, "max_val_1_reg_242");
    sc_trace(mVcdFile, l6_reg_254, "l6_reg_254");
    sc_trace(mVcdFile, i9_reg_265, "i9_reg_265");
    sc_trace(mVcdFile, j9_reg_276, "j9_reg_276");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_53_cast_fu_416_p1, "tmp_53_cast_fu_416_p1");
    sc_trace(mVcdFile, tmp_63_cast_fu_498_p1, "tmp_63_cast_fu_498_p1");
    sc_trace(mVcdFile, tmp_69_cast_fu_672_p1, "tmp_69_cast_fu_672_p1");
    sc_trace(mVcdFile, tmp_77_cast_fu_754_p1, "tmp_77_cast_fu_754_p1");
    sc_trace(mVcdFile, tmp_40_fu_402_p1, "tmp_40_fu_402_p1");
    sc_trace(mVcdFile, tmp_fu_303_p3, "tmp_fu_303_p3");
    sc_trace(mVcdFile, tmp2_fu_343_p2, "tmp2_fu_343_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_349_p1, "tmp2_cast_fu_349_p1");
    sc_trace(mVcdFile, x_fu_353_p2, "x_fu_353_p2");
    sc_trace(mVcdFile, tmp_41_fu_358_p3, "tmp_41_fu_358_p3");
    sc_trace(mVcdFile, tmp_42_fu_372_p4, "tmp_42_fu_372_p4");
    sc_trace(mVcdFile, icmp_fu_382_p2, "icmp_fu_382_p2");
    sc_trace(mVcdFile, rev_fu_366_p2, "rev_fu_366_p2");
    sc_trace(mVcdFile, tmp_49_cast_fu_407_p1, "tmp_49_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp_46_fu_411_p2, "tmp_46_fu_411_p2");
    sc_trace(mVcdFile, tmp3_fu_433_p2, "tmp3_fu_433_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_439_p1, "tmp3_cast_fu_439_p1");
    sc_trace(mVcdFile, y_fu_443_p2, "y_fu_443_p2");
    sc_trace(mVcdFile, tmp_43_fu_448_p3, "tmp_43_fu_448_p3");
    sc_trace(mVcdFile, tmp_44_fu_462_p4, "tmp_44_fu_462_p4");
    sc_trace(mVcdFile, icmp2_fu_472_p2, "icmp2_fu_472_p2");
    sc_trace(mVcdFile, rev7_fu_456_p2, "rev7_fu_456_p2");
    sc_trace(mVcdFile, tmp5_fu_478_p2, "tmp5_fu_478_p2");
    sc_trace(mVcdFile, tmp_62_cast_fu_489_p1, "tmp_62_cast_fu_489_p1");
    sc_trace(mVcdFile, min_val_2_fu_502_p3, "min_val_2_fu_502_p3");
    sc_trace(mVcdFile, tmp_50_fu_510_p2, "tmp_50_fu_510_p2");
    sc_trace(mVcdFile, min_val_2_min_val_1_fu_516_p3, "min_val_2_min_val_1_fu_516_p3");
    sc_trace(mVcdFile, tmp_s_fu_559_p3, "tmp_s_fu_559_p3");
    sc_trace(mVcdFile, tmp6_fu_599_p2, "tmp6_fu_599_p2");
    sc_trace(mVcdFile, tmp6_cast_fu_605_p1, "tmp6_cast_fu_605_p1");
    sc_trace(mVcdFile, x_1_fu_609_p2, "x_1_fu_609_p2");
    sc_trace(mVcdFile, tmp_53_fu_614_p3, "tmp_53_fu_614_p3");
    sc_trace(mVcdFile, tmp_54_fu_628_p4, "tmp_54_fu_628_p4");
    sc_trace(mVcdFile, icmp3_fu_638_p2, "icmp3_fu_638_p2");
    sc_trace(mVcdFile, rev1_fu_622_p2, "rev1_fu_622_p2");
    sc_trace(mVcdFile, tmp_68_cast_fu_663_p1, "tmp_68_cast_fu_663_p1");
    sc_trace(mVcdFile, tmp_52_fu_667_p2, "tmp_52_fu_667_p2");
    sc_trace(mVcdFile, tmp7_fu_689_p2, "tmp7_fu_689_p2");
    sc_trace(mVcdFile, tmp7_cast_fu_695_p1, "tmp7_cast_fu_695_p1");
    sc_trace(mVcdFile, y_1_fu_699_p2, "y_1_fu_699_p2");
    sc_trace(mVcdFile, tmp_56_fu_704_p3, "tmp_56_fu_704_p3");
    sc_trace(mVcdFile, tmp_57_fu_718_p4, "tmp_57_fu_718_p4");
    sc_trace(mVcdFile, icmp4_fu_728_p2, "icmp4_fu_728_p2");
    sc_trace(mVcdFile, rev2_fu_712_p2, "rev2_fu_712_p2");
    sc_trace(mVcdFile, tmp9_fu_734_p2, "tmp9_fu_734_p2");
    sc_trace(mVcdFile, tmp_76_cast_fu_745_p1, "tmp_76_cast_fu_745_p1");
    sc_trace(mVcdFile, max_val_2_fu_758_p1, "max_val_2_fu_758_p1");
    sc_trace(mVcdFile, tmp_59_fu_766_p2, "tmp_59_fu_766_p2");
    sc_trace(mVcdFile, max_val_2_cast_fu_762_p1, "max_val_2_cast_fu_762_p1");
    sc_trace(mVcdFile, tmp_60_fu_772_p1, "tmp_60_fu_772_p1");
    sc_trace(mVcdFile, max_val_2_max_val_1_fu_776_p3, "max_val_2_max_val_1_fu_776_p3");
    sc_trace(mVcdFile, max_val_2_max_val_1_s_fu_784_p1, "max_val_2_max_val_1_s_fu_784_p1");
    sc_trace(mVcdFile, tmp_48_fu_807_p3, "tmp_48_fu_807_p3");
    sc_trace(mVcdFile, tmp_65_cast_fu_831_p1, "tmp_65_cast_fu_831_p1");
    sc_trace(mVcdFile, tmp_51_fu_835_p2, "tmp_51_fu_835_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

morphologyEx::~morphologyEx() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp_U;
}

void morphologyEx::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_319_p2.read()))) {
        i1_reg_116 = i_reg_853.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i1_reg_116 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_531_p2.read()))) {
        i3_reg_196 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_575_p2.read()))) {
        i3_reg_196 = i_8_reg_938.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_547_p2.read()))) {
        i9_reg_265 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_819_p2.read()))) {
        i9_reg_265 = i_9_reg_1010.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond10_fu_291_p2.read(), ap_const_lv1_1))) {
        iter_reg_185 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_795_p2.read()))) {
        iter_reg_185 = iter_1_reg_925.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond10_fu_291_p2.read(), ap_const_lv1_0))) {
        j2_reg_127 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond8_fu_331_p2.read(), ap_const_lv1_1))) {
        j2_reg_127 = j_reg_871.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_547_p2.read()))) {
        j4_reg_207 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_587_p2.read()))) {
        j4_reg_207 = j_8_reg_956.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_795_p2.read()))) {
        j9_reg_276 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j9_reg_276 = j_7_reg_1023.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_575_p2.read()))) {
        k5_reg_231 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_677_p2.read()))) {
        k5_reg_231 = k_3_reg_964.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_319_p2.read()))) {
        k_reg_139 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_1))) {
        k_reg_139 = k_2_reg_879.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_587_p2.read()))) {
        l6_reg_254 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        l6_reg_254 = l_2_reg_982.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_331_p2.read()))) {
        l_reg_162 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        l_reg_162 = l_1_reg_897.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_587_p2.read()))) {
        max_val_1_reg_242 = max_val_reg_219.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        max_val_1_reg_242 = max_val_3_fu_788_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_575_p2.read()))) {
        max_val_reg_219 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_677_p2.read()))) {
        max_val_reg_219 = max_val_1_reg_242.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_331_p2.read()))) {
        min_val_1_reg_173 = min_val_reg_150.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        min_val_1_reg_173 = min_val_3_fu_524_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_319_p2.read()))) {
        min_val_reg_150 = ap_const_lv32_FF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_1))) {
        min_val_reg_150 = min_val_1_reg_173.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i1_cast_reg_845 = i1_cast_fu_287_p1.read();
        i_reg_853 = i_fu_297_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i3_cast_reg_930 = i3_cast_fu_543_p1.read();
        i_8_reg_938 = i_8_fu_553_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_9_reg_1010 = i_9_fu_801_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        iter_1_reg_925 = iter_1_fu_537_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j2_cast_reg_863 = j2_cast_fu_315_p1.read();
        j_reg_871 = j_fu_325_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j4_cast_reg_948 = j4_cast_fu_571_p1.read();
        j_8_reg_956 = j_8_fu_581_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        j_7_reg_1023 = j_7_fu_825_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_2_reg_879 = k_2_fu_337_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        k_3_reg_964 = k_3_fu_593_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        l_1_reg_897 = l_1_fu_427_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        l_2_reg_982 = l_2_fu_683_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_fu_421_p2.read()))) {
        or_cond3_reg_902 = or_cond3_fu_484_p2.read();
        tmp_49_reg_907 = tmp_49_fu_493_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_677_p2.read()))) {
        or_cond6_reg_987 = or_cond6_fu_740_p2.read();
        tmp_58_reg_992 = tmp_58_fu_749_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_331_p2.read()))) {
        tmp4_reg_889 = tmp4_fu_396_p2.read();
        tmp_47_reg_884 = tmp_47_fu_388_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_587_p2.read()))) {
        tmp8_reg_974 = tmp8_fu_652_p2.read();
        tmp_55_reg_969 = tmp_55_fu_644_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond10_fu_291_p2.read(), ap_const_lv1_0))) {
        tmp_50_cast_reg_858 = tmp_50_cast_fu_311_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_547_p2.read()))) {
        tmp_52_cast_reg_943 = tmp_52_cast_fu_567_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_795_p2.read()))) {
        tmp_59_cast_reg_1015 = tmp_59_cast_fu_815_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_819_p2.read()))) {
        tmp_66_cast_reg_1028 = tmp_66_cast_fu_840_p1.read();
    }
}

void morphologyEx::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void morphologyEx::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void morphologyEx::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void morphologyEx::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void morphologyEx::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void morphologyEx::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void morphologyEx::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void morphologyEx::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void morphologyEx::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void morphologyEx::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void morphologyEx::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void morphologyEx::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void morphologyEx::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void morphologyEx::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void morphologyEx::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void morphologyEx::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void morphologyEx::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void morphologyEx::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_531_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void morphologyEx::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void morphologyEx::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_531_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void morphologyEx::thread_binaryThreshold_address0() {
    binaryThreshold_address0 =  (sc_lv<18>) (tmp_63_cast_fu_498_p1.read());
}

void morphologyEx::thread_binaryThreshold_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        binaryThreshold_ce0 = ap_const_logic_1;
    } else {
        binaryThreshold_ce0 = ap_const_logic_0;
    }
}

void morphologyEx::thread_dst_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        dst_address0 =  (sc_lv<18>) (tmp_66_cast_reg_1028.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        dst_address0 =  (sc_lv<18>) (tmp_77_cast_fu_754_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        dst_address0 =  (sc_lv<18>) (tmp_53_cast_fu_416_p1.read());
    } else {
        dst_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void morphologyEx::thread_dst_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        dst_ce0 = ap_const_logic_1;
    } else {
        dst_ce0 = ap_const_logic_0;
    }
}

void morphologyEx::thread_dst_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        dst_d0 = temp_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        dst_d0 = tmp_40_fu_402_p1.read();
    } else {
        dst_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void morphologyEx::thread_dst_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond8_fu_331_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        dst_we0 = ap_const_logic_1;
    } else {
        dst_we0 = ap_const_logic_0;
    }
}

void morphologyEx::thread_exitcond10_fu_291_p2() {
    exitcond10_fu_291_p2 = (!i1_reg_116.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_116.read() == ap_const_lv10_200);
}

void morphologyEx::thread_exitcond1_fu_795_p2() {
    exitcond1_fu_795_p2 = (!i9_reg_265.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i9_reg_265.read() == ap_const_lv10_200);
}

void morphologyEx::thread_exitcond2_fu_677_p2() {
    exitcond2_fu_677_p2 = (!l6_reg_254.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(l6_reg_254.read() == ap_const_lv2_3);
}

void morphologyEx::thread_exitcond3_fu_587_p2() {
    exitcond3_fu_587_p2 = (!k5_reg_231.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(k5_reg_231.read() == ap_const_lv2_3);
}

void morphologyEx::thread_exitcond4_fu_575_p2() {
    exitcond4_fu_575_p2 = (!j4_reg_207.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j4_reg_207.read() == ap_const_lv10_200);
}

void morphologyEx::thread_exitcond5_fu_547_p2() {
    exitcond5_fu_547_p2 = (!i3_reg_196.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i3_reg_196.read() == ap_const_lv10_200);
}

void morphologyEx::thread_exitcond6_fu_531_p2() {
    exitcond6_fu_531_p2 = (!iter_reg_185.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(iter_reg_185.read() == ap_const_lv2_2);
}

void morphologyEx::thread_exitcond7_fu_421_p2() {
    exitcond7_fu_421_p2 = (!l_reg_162.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(l_reg_162.read() == ap_const_lv2_3);
}

void morphologyEx::thread_exitcond8_fu_331_p2() {
    exitcond8_fu_331_p2 = (!k_reg_139.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_139.read() == ap_const_lv2_3);
}

void morphologyEx::thread_exitcond9_fu_319_p2() {
    exitcond9_fu_319_p2 = (!j2_reg_127.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j2_reg_127.read() == ap_const_lv10_200);
}

void morphologyEx::thread_exitcond_fu_819_p2() {
    exitcond_fu_819_p2 = (!j9_reg_276.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j9_reg_276.read() == ap_const_lv10_200);
}

void morphologyEx::thread_i1_cast_fu_287_p1() {
    i1_cast_fu_287_p1 = esl_zext<11,10>(i1_reg_116.read());
}

void morphologyEx::thread_i3_cast_fu_543_p1() {
    i3_cast_fu_543_p1 = esl_zext<11,10>(i3_reg_196.read());
}

void morphologyEx::thread_i_8_fu_553_p2() {
    i_8_fu_553_p2 = (!i3_reg_196.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i3_reg_196.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void morphologyEx::thread_i_9_fu_801_p2() {
    i_9_fu_801_p2 = (!i9_reg_265.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i9_reg_265.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void morphologyEx::thread_i_fu_297_p2() {
    i_fu_297_p2 = (!i1_reg_116.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i1_reg_116.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void morphologyEx::thread_icmp2_fu_472_p2() {
    icmp2_fu_472_p2 = (!tmp_44_fu_462_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_44_fu_462_p4.read() != ap_const_lv2_1);
}

void morphologyEx::thread_icmp3_fu_638_p2() {
    icmp3_fu_638_p2 = (!tmp_54_fu_628_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_54_fu_628_p4.read() != ap_const_lv2_1);
}

void morphologyEx::thread_icmp4_fu_728_p2() {
    icmp4_fu_728_p2 = (!tmp_57_fu_718_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_57_fu_718_p4.read() != ap_const_lv2_1);
}

void morphologyEx::thread_icmp_fu_382_p2() {
    icmp_fu_382_p2 = (!tmp_42_fu_372_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_42_fu_372_p4.read() != ap_const_lv2_1);
}

void morphologyEx::thread_iter_1_fu_537_p2() {
    iter_1_fu_537_p2 = (!iter_reg_185.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(iter_reg_185.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void morphologyEx::thread_j2_cast_fu_315_p1() {
    j2_cast_fu_315_p1 = esl_zext<11,10>(j2_reg_127.read());
}

void morphologyEx::thread_j4_cast_fu_571_p1() {
    j4_cast_fu_571_p1 = esl_zext<11,10>(j4_reg_207.read());
}

void morphologyEx::thread_j_7_fu_825_p2() {
    j_7_fu_825_p2 = (!j9_reg_276.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j9_reg_276.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void morphologyEx::thread_j_8_fu_581_p2() {
    j_8_fu_581_p2 = (!j4_reg_207.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j4_reg_207.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void morphologyEx::thread_j_fu_325_p2() {
    j_fu_325_p2 = (!j2_reg_127.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j2_reg_127.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void morphologyEx::thread_k_2_fu_337_p2() {
    k_2_fu_337_p2 = (!k_reg_139.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_139.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void morphologyEx::thread_k_3_fu_593_p2() {
    k_3_fu_593_p2 = (!k5_reg_231.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k5_reg_231.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void morphologyEx::thread_l_1_fu_427_p2() {
    l_1_fu_427_p2 = (!l_reg_162.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(l_reg_162.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void morphologyEx::thread_l_2_fu_683_p2() {
    l_2_fu_683_p2 = (!l6_reg_254.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(l6_reg_254.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void morphologyEx::thread_max_val_2_cast_fu_762_p1() {
    max_val_2_cast_fu_762_p1 = esl_zext<31,8>(dst_q0.read());
}

void morphologyEx::thread_max_val_2_fu_758_p1() {
    max_val_2_fu_758_p1 = esl_zext<32,8>(dst_q0.read());
}

void morphologyEx::thread_max_val_2_max_val_1_fu_776_p3() {
    max_val_2_max_val_1_fu_776_p3 = (!tmp_59_fu_766_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_59_fu_766_p2.read()[0].to_bool())? max_val_2_cast_fu_762_p1.read(): tmp_60_fu_772_p1.read());
}

void morphologyEx::thread_max_val_2_max_val_1_s_fu_784_p1() {
    max_val_2_max_val_1_s_fu_784_p1 = esl_zext<32,31>(max_val_2_max_val_1_fu_776_p3.read());
}

void morphologyEx::thread_max_val_3_fu_788_p3() {
    max_val_3_fu_788_p3 = (!or_cond6_reg_987.read()[0].is_01())? sc_lv<32>(): ((or_cond6_reg_987.read()[0].to_bool())? max_val_2_max_val_1_s_fu_784_p1.read(): max_val_1_reg_242.read());
}

void morphologyEx::thread_min_val_2_fu_502_p3() {
    min_val_2_fu_502_p3 = (!binaryThreshold_q0.read()[0].is_01())? sc_lv<32>(): ((binaryThreshold_q0.read()[0].to_bool())? ap_const_lv32_FF: ap_const_lv32_0);
}

void morphologyEx::thread_min_val_2_min_val_1_fu_516_p3() {
    min_val_2_min_val_1_fu_516_p3 = (!tmp_50_fu_510_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_50_fu_510_p2.read()[0].to_bool())? min_val_2_fu_502_p3.read(): min_val_1_reg_173.read());
}

void morphologyEx::thread_min_val_3_fu_524_p3() {
    min_val_3_fu_524_p3 = (!or_cond3_reg_902.read()[0].is_01())? sc_lv<32>(): ((or_cond3_reg_902.read()[0].to_bool())? min_val_2_min_val_1_fu_516_p3.read(): min_val_1_reg_173.read());
}

void morphologyEx::thread_or_cond3_fu_484_p2() {
    or_cond3_fu_484_p2 = (tmp5_fu_478_p2.read() & tmp4_reg_889.read());
}

void morphologyEx::thread_or_cond6_fu_740_p2() {
    or_cond6_fu_740_p2 = (tmp9_fu_734_p2.read() & tmp8_reg_974.read());
}

void morphologyEx::thread_rev1_fu_622_p2() {
    rev1_fu_622_p2 = (tmp_53_fu_614_p3.read() ^ ap_const_lv1_1);
}

void morphologyEx::thread_rev2_fu_712_p2() {
    rev2_fu_712_p2 = (tmp_56_fu_704_p3.read() ^ ap_const_lv1_1);
}

void morphologyEx::thread_rev7_fu_456_p2() {
    rev7_fu_456_p2 = (tmp_43_fu_448_p3.read() ^ ap_const_lv1_1);
}

void morphologyEx::thread_rev_fu_366_p2() {
    rev_fu_366_p2 = (tmp_41_fu_358_p3.read() ^ ap_const_lv1_1);
}

void morphologyEx::thread_temp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        temp_address0 =  (sc_lv<18>) (tmp_66_cast_fu_840_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp_address0 =  (sc_lv<18>) (tmp_69_cast_fu_672_p1.read());
    } else {
        temp_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void morphologyEx::thread_temp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        temp_ce0 = ap_const_logic_1;
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void morphologyEx::thread_temp_d0() {
    temp_d0 = max_val_reg_219.read().range(8-1, 0);
}

void morphologyEx::thread_temp_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_587_p2.read()))) {
        temp_we0 = ap_const_logic_1;
    } else {
        temp_we0 = ap_const_logic_0;
    }
}

void morphologyEx::thread_tmp2_cast_fu_349_p1() {
    tmp2_cast_fu_349_p1 = esl_sext<11,2>(tmp2_fu_343_p2.read());
}

void morphologyEx::thread_tmp2_fu_343_p2() {
    tmp2_fu_343_p2 = (!k_reg_139.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_139.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void morphologyEx::thread_tmp3_cast_fu_439_p1() {
    tmp3_cast_fu_439_p1 = esl_sext<11,2>(tmp3_fu_433_p2.read());
}

void morphologyEx::thread_tmp3_fu_433_p2() {
    tmp3_fu_433_p2 = (!l_reg_162.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(l_reg_162.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void morphologyEx::thread_tmp4_fu_396_p2() {
    tmp4_fu_396_p2 = (icmp_fu_382_p2.read() & rev_fu_366_p2.read());
}

void morphologyEx::thread_tmp5_fu_478_p2() {
    tmp5_fu_478_p2 = (icmp2_fu_472_p2.read() & rev7_fu_456_p2.read());
}

void morphologyEx::thread_tmp6_cast_fu_605_p1() {
    tmp6_cast_fu_605_p1 = esl_sext<11,2>(tmp6_fu_599_p2.read());
}

void morphologyEx::thread_tmp6_fu_599_p2() {
    tmp6_fu_599_p2 = (!k5_reg_231.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(k5_reg_231.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void morphologyEx::thread_tmp7_cast_fu_695_p1() {
    tmp7_cast_fu_695_p1 = esl_sext<11,2>(tmp7_fu_689_p2.read());
}

void morphologyEx::thread_tmp7_fu_689_p2() {
    tmp7_fu_689_p2 = (!ap_const_lv2_3.is_01() || !l6_reg_254.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(l6_reg_254.read()));
}

void morphologyEx::thread_tmp8_fu_652_p2() {
    tmp8_fu_652_p2 = (icmp3_fu_638_p2.read() & rev1_fu_622_p2.read());
}

void morphologyEx::thread_tmp9_fu_734_p2() {
    tmp9_fu_734_p2 = (icmp4_fu_728_p2.read() & rev2_fu_712_p2.read());
}

void morphologyEx::thread_tmp_40_fu_402_p1() {
    tmp_40_fu_402_p1 = min_val_reg_150.read().range(8-1, 0);
}

void morphologyEx::thread_tmp_41_fu_358_p3() {
    tmp_41_fu_358_p3 = x_fu_353_p2.read().range(10, 10);
}

void morphologyEx::thread_tmp_42_fu_372_p4() {
    tmp_42_fu_372_p4 = x_fu_353_p2.read().range(10, 9);
}

void morphologyEx::thread_tmp_43_fu_448_p3() {
    tmp_43_fu_448_p3 = y_fu_443_p2.read().range(10, 10);
}

void morphologyEx::thread_tmp_44_fu_462_p4() {
    tmp_44_fu_462_p4 = y_fu_443_p2.read().range(10, 9);
}

void morphologyEx::thread_tmp_46_fu_411_p2() {
    tmp_46_fu_411_p2 = (!tmp_50_cast_reg_858.read().is_01() || !tmp_49_cast_fu_407_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_50_cast_reg_858.read()) + sc_biguint<20>(tmp_49_cast_fu_407_p1.read()));
}

void morphologyEx::thread_tmp_47_fu_388_p3() {
    tmp_47_fu_388_p3 = esl_concat<11,9>(x_fu_353_p2.read(), ap_const_lv9_0);
}

void morphologyEx::thread_tmp_48_fu_807_p3() {
    tmp_48_fu_807_p3 = esl_concat<10,9>(i9_reg_265.read(), ap_const_lv9_0);
}

void morphologyEx::thread_tmp_49_cast_fu_407_p1() {
    tmp_49_cast_fu_407_p1 = esl_zext<20,10>(j2_reg_127.read());
}

void morphologyEx::thread_tmp_49_fu_493_p2() {
    tmp_49_fu_493_p2 = (!tmp_62_cast_fu_489_p1.read().is_01() || !tmp_47_reg_884.read().is_01())? sc_lv<20>(): (sc_bigint<20>(tmp_62_cast_fu_489_p1.read()) + sc_biguint<20>(tmp_47_reg_884.read()));
}

void morphologyEx::thread_tmp_50_cast_fu_311_p1() {
    tmp_50_cast_fu_311_p1 = esl_zext<20,19>(tmp_fu_303_p3.read());
}

void morphologyEx::thread_tmp_50_fu_510_p2() {
    tmp_50_fu_510_p2 = (!min_val_2_fu_502_p3.read().is_01() || !min_val_1_reg_173.read().is_01())? sc_lv<1>(): (sc_bigint<32>(min_val_2_fu_502_p3.read()) < sc_bigint<32>(min_val_1_reg_173.read()));
}

void morphologyEx::thread_tmp_51_fu_835_p2() {
    tmp_51_fu_835_p2 = (!tmp_59_cast_reg_1015.read().is_01() || !tmp_65_cast_fu_831_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_59_cast_reg_1015.read()) + sc_biguint<20>(tmp_65_cast_fu_831_p1.read()));
}

void morphologyEx::thread_tmp_52_cast_fu_567_p1() {
    tmp_52_cast_fu_567_p1 = esl_zext<20,19>(tmp_s_fu_559_p3.read());
}

void morphologyEx::thread_tmp_52_fu_667_p2() {
    tmp_52_fu_667_p2 = (!tmp_52_cast_reg_943.read().is_01() || !tmp_68_cast_fu_663_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_52_cast_reg_943.read()) + sc_biguint<20>(tmp_68_cast_fu_663_p1.read()));
}

void morphologyEx::thread_tmp_53_cast_fu_416_p1() {
    tmp_53_cast_fu_416_p1 = esl_zext<64,20>(tmp_46_fu_411_p2.read());
}

void morphologyEx::thread_tmp_53_fu_614_p3() {
    tmp_53_fu_614_p3 = x_1_fu_609_p2.read().range(10, 10);
}

void morphologyEx::thread_tmp_54_fu_628_p4() {
    tmp_54_fu_628_p4 = x_1_fu_609_p2.read().range(10, 9);
}

void morphologyEx::thread_tmp_55_fu_644_p3() {
    tmp_55_fu_644_p3 = esl_concat<11,9>(x_1_fu_609_p2.read(), ap_const_lv9_0);
}

void morphologyEx::thread_tmp_56_fu_704_p3() {
    tmp_56_fu_704_p3 = y_1_fu_699_p2.read().range(10, 10);
}

void morphologyEx::thread_tmp_57_fu_718_p4() {
    tmp_57_fu_718_p4 = y_1_fu_699_p2.read().range(10, 9);
}

void morphologyEx::thread_tmp_58_fu_749_p2() {
    tmp_58_fu_749_p2 = (!tmp_55_reg_969.read().is_01() || !tmp_76_cast_fu_745_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_55_reg_969.read()) + sc_bigint<20>(tmp_76_cast_fu_745_p1.read()));
}

void morphologyEx::thread_tmp_59_cast_fu_815_p1() {
    tmp_59_cast_fu_815_p1 = esl_zext<20,19>(tmp_48_fu_807_p3.read());
}

void morphologyEx::thread_tmp_59_fu_766_p2() {
    tmp_59_fu_766_p2 = (!max_val_2_fu_758_p1.read().is_01() || !max_val_1_reg_242.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_val_2_fu_758_p1.read()) > sc_bigint<32>(max_val_1_reg_242.read()));
}

void morphologyEx::thread_tmp_60_fu_772_p1() {
    tmp_60_fu_772_p1 = max_val_1_reg_242.read().range(31-1, 0);
}

void morphologyEx::thread_tmp_62_cast_fu_489_p1() {
    tmp_62_cast_fu_489_p1 = esl_sext<20,11>(y_fu_443_p2.read());
}

void morphologyEx::thread_tmp_63_cast_fu_498_p1() {
    tmp_63_cast_fu_498_p1 = esl_sext<64,20>(tmp_49_reg_907.read());
}

void morphologyEx::thread_tmp_65_cast_fu_831_p1() {
    tmp_65_cast_fu_831_p1 = esl_zext<20,10>(j9_reg_276.read());
}

void morphologyEx::thread_tmp_66_cast_fu_840_p1() {
    tmp_66_cast_fu_840_p1 = esl_zext<64,20>(tmp_51_fu_835_p2.read());
}

void morphologyEx::thread_tmp_68_cast_fu_663_p1() {
    tmp_68_cast_fu_663_p1 = esl_zext<20,10>(j4_reg_207.read());
}

void morphologyEx::thread_tmp_69_cast_fu_672_p1() {
    tmp_69_cast_fu_672_p1 = esl_zext<64,20>(tmp_52_fu_667_p2.read());
}

void morphologyEx::thread_tmp_76_cast_fu_745_p1() {
    tmp_76_cast_fu_745_p1 = esl_sext<20,11>(y_1_fu_699_p2.read());
}

void morphologyEx::thread_tmp_77_cast_fu_754_p1() {
    tmp_77_cast_fu_754_p1 = esl_sext<64,20>(tmp_58_reg_992.read());
}

void morphologyEx::thread_tmp_fu_303_p3() {
    tmp_fu_303_p3 = esl_concat<10,9>(i1_reg_116.read(), ap_const_lv9_0);
}

void morphologyEx::thread_tmp_s_fu_559_p3() {
    tmp_s_fu_559_p3 = esl_concat<10,9>(i3_reg_196.read(), ap_const_lv9_0);
}

void morphologyEx::thread_x_1_fu_609_p2() {
    x_1_fu_609_p2 = (!tmp6_cast_fu_605_p1.read().is_01() || !i3_cast_reg_930.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp6_cast_fu_605_p1.read()) + sc_biguint<11>(i3_cast_reg_930.read()));
}

void morphologyEx::thread_x_fu_353_p2() {
    x_fu_353_p2 = (!tmp2_cast_fu_349_p1.read().is_01() || !i1_cast_reg_845.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp2_cast_fu_349_p1.read()) + sc_biguint<11>(i1_cast_reg_845.read()));
}

void morphologyEx::thread_y_1_fu_699_p2() {
    y_1_fu_699_p2 = (!j4_cast_reg_948.read().is_01() || !tmp7_cast_fu_695_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(j4_cast_reg_948.read()) + sc_bigint<11>(tmp7_cast_fu_695_p1.read()));
}

void morphologyEx::thread_y_fu_443_p2() {
    y_fu_443_p2 = (!tmp3_cast_fu_439_p1.read().is_01() || !j2_cast_reg_863.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp3_cast_fu_439_p1.read()) + sc_biguint<11>(j2_cast_reg_863.read()));
}

void morphologyEx::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond10_fu_291_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_319_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond8_fu_331_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_531_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_547_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_575_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_587_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_677_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_795_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_819_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

