// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "watershed_algorithm.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic watershed_algorithm::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic watershed_algorithm::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state1 = "1";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state2 = "10";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state3 = "100";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state4 = "1000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state5 = "10000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state6 = "100000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state7 = "1000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state8 = "10000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state9 = "100000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state10 = "1000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state11 = "10000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state12 = "100000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<20> watershed_algorithm::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> watershed_algorithm::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> watershed_algorithm::ap_const_lv32_1 = "1";
const sc_lv<1> watershed_algorithm::ap_const_lv1_0 = "0";
const sc_lv<32> watershed_algorithm::ap_const_lv32_2 = "10";
const sc_lv<32> watershed_algorithm::ap_const_lv32_4 = "100";
const sc_lv<32> watershed_algorithm::ap_const_lv32_5 = "101";
const sc_lv<32> watershed_algorithm::ap_const_lv32_6 = "110";
const sc_lv<32> watershed_algorithm::ap_const_lv32_8 = "1000";
const sc_lv<1> watershed_algorithm::ap_const_lv1_1 = "1";
const sc_lv<32> watershed_algorithm::ap_const_lv32_9 = "1001";
const sc_lv<32> watershed_algorithm::ap_const_lv32_A = "1010";
const sc_lv<32> watershed_algorithm::ap_const_lv32_B = "1011";
const sc_lv<32> watershed_algorithm::ap_const_lv32_C = "1100";
const sc_lv<32> watershed_algorithm::ap_const_lv32_D = "1101";
const sc_lv<32> watershed_algorithm::ap_const_lv32_E = "1110";
const sc_lv<32> watershed_algorithm::ap_const_lv32_F = "1111";
const sc_lv<32> watershed_algorithm::ap_const_lv32_10 = "10000";
const sc_lv<32> watershed_algorithm::ap_const_lv32_11 = "10001";
const sc_lv<32> watershed_algorithm::ap_const_lv32_12 = "10010";
const sc_lv<10> watershed_algorithm::ap_const_lv10_0 = "0000000000";
const sc_lv<32> watershed_algorithm::ap_const_lv32_3 = "11";
const sc_lv<32> watershed_algorithm::ap_const_lv32_7 = "111";
const sc_lv<32> watershed_algorithm::ap_const_lv32_40001 = "1000000000000000001";
const sc_lv<32> watershed_algorithm::ap_const_lv32_13 = "10011";
const sc_lv<4> watershed_algorithm::ap_const_lv4_0 = "0000";
const sc_lv<8> watershed_algorithm::ap_const_lv8_1 = "1";
const sc_lv<10> watershed_algorithm::ap_const_lv10_200 = "1000000000";
const sc_lv<10> watershed_algorithm::ap_const_lv10_1 = "1";
const sc_lv<9> watershed_algorithm::ap_const_lv9_0 = "000000000";
const sc_lv<4> watershed_algorithm::ap_const_lv4_8 = "1000";
const sc_lv<4> watershed_algorithm::ap_const_lv4_1 = "1";
const sc_lv<8> watershed_algorithm::ap_const_lv8_2 = "10";
const sc_lv<32> watershed_algorithm::ap_const_lv32_1F = "11111";
const sc_lv<23> watershed_algorithm::ap_const_lv23_1 = "1";
const sc_lv<7> watershed_algorithm::ap_const_lv7_0 = "0000000";
const bool watershed_algorithm::ap_const_boolean_1 = true;

watershed_algorithm::watershed_algorithm(sc_module_name name) : sc_module(name), mVcdFile(0) {
    watershedOutput_U = new watershed_algorithm_watershedOutput("watershedOutput_U");
    watershedOutput_U->clk(ap_clk);
    watershedOutput_U->reset(ap_rst);
    watershedOutput_U->address0(watershedOutput_address0);
    watershedOutput_U->ce0(watershedOutput_ce0);
    watershedOutput_U->we0(watershedOutput_we0);
    watershedOutput_U->d0(watershedOutput_d0);
    watershedOutput_U->q0(watershedOutput_q0);
    neighbours_0_U = new watershed_algorithm_neighbours_0("neighbours_0_U");
    neighbours_0_U->clk(ap_clk);
    neighbours_0_U->reset(ap_rst);
    neighbours_0_U->address0(neighbours_0_address0);
    neighbours_0_U->ce0(neighbours_0_ce0);
    neighbours_0_U->q0(neighbours_0_q0);
    neighbours_1_U = new watershed_algorithm_neighbours_1("neighbours_1_U");
    neighbours_1_U->clk(ap_clk);
    neighbours_1_U->reset(ap_rst);
    neighbours_1_U->address0(neighbours_1_address0);
    neighbours_1_U->ce0(neighbours_1_ce0);
    neighbours_1_U->q0(neighbours_1_q0);
    queue_0_U = new connectedComponents_equivLabels_parent("queue_0_U");
    queue_0_U->clk(ap_clk);
    queue_0_U->reset(ap_rst);
    queue_0_U->address0(queue_0_address0);
    queue_0_U->ce0(queue_0_ce0);
    queue_0_U->we0(queue_0_we0);
    queue_0_U->d0(queue_0_d0);
    queue_0_U->q0(queue_0_q0);
    queue_1_U = new connectedComponents_equivLabels_parent("queue_1_U");
    queue_1_U->clk(ap_clk);
    queue_1_U->reset(ap_rst);
    queue_1_U->address0(queue_1_address0);
    queue_1_U->ce0(queue_1_ce0);
    queue_1_U->we0(queue_1_we0);
    queue_1_U->d0(queue_1_d0);
    queue_1_U->q0(queue_1_q0);
    dist_U = new connectedComponents_equivLabels_parent("dist_U");
    dist_U->clk(ap_clk);
    dist_U->reset(ap_rst);
    dist_U->address0(dist_address0);
    dist_U->ce0(dist_ce0);
    dist_U->we0(dist_we0);
    dist_U->d0(dist_d0);
    dist_U->q0(dist_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_5_fu_505_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_min_label_be_phi_fu_337_p10);
    sensitive << ( or_cond6_reg_1001 );
    sensitive << ( min_label_1_reg_1020 );
    sensitive << ( tmp_23_reg_1028 );
    sensitive << ( tmp_24_reg_1032 );
    sensitive << ( tmp_26_reg_1041 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( min_label_be_reg_333 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_5_fu_505_p2 );

    SC_METHOD(thread_dist_address0);
    sensitive << ( tmp_32_cast_reg_890 );
    sensitive << ( dist_addr_reg_948 );
    sensitive << ( dist_addr_2_reg_1015 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_dist_ce0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_dist_d0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( storemerge1_cast_cas_fu_497_p3 );
    sensitive << ( tmp_25_fu_782_p2 );

    SC_METHOD(thread_dist_we0);
    sensitive << ( tmp_26_fu_788_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exitcond1_fu_471_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j2_reg_276 );

    SC_METHOD(thread_exitcond2_fu_443_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_reg_265 );

    SC_METHOD(thread_exitcond3_fu_400_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_254 );

    SC_METHOD(thread_exitcond4_fu_372_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_243 );

    SC_METHOD(thread_exitcond_fu_551_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( k_reg_322 );

    SC_METHOD(thread_grayOutput_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grayOutput_addr_1_reg_1005 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_31_cast_fu_545_p1 );

    SC_METHOD(thread_grayOutput_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_354_p2);
    sensitive << ( watershedOutput_q0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_i_1_fu_378_p2);
    sensitive << ( i_reg_243 );

    SC_METHOD(thread_i_3_fu_449_p2);
    sensitive << ( i1_reg_265 );

    SC_METHOD(thread_i_cast7_fu_368_p1);
    sensitive << ( i_reg_243 );

    SC_METHOD(thread_icmp1_fu_745_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_29_fu_735_p4 );

    SC_METHOD(thread_icmp7_fu_682_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_19_fu_672_p4 );

    SC_METHOD(thread_icmp_fu_652_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_17_fu_642_p4 );

    SC_METHOD(thread_j_1_fu_406_p2);
    sensitive << ( j_reg_254 );

    SC_METHOD(thread_j_3_fu_477_p2);
    sensitive << ( j2_reg_276 );

    SC_METHOD(thread_j_cast6_fu_396_p1);
    sensitive << ( j_reg_254 );

    SC_METHOD(thread_k_1_fu_557_p2);
    sensitive << ( k_reg_322 );

    SC_METHOD(thread_min_label_1_fu_769_p3);
    sensitive << ( min_label_reg_310 );
    sensitive << ( icmp1_fu_745_p2 );
    sensitive << ( min_label_3_min_labe_fu_761_p3 );

    SC_METHOD(thread_min_label_2_fu_751_p1);
    sensitive << ( watershedOutput_q0 );

    SC_METHOD(thread_min_label_3_min_labe_fu_761_p3);
    sensitive << ( min_label_reg_310 );
    sensitive << ( min_label_2_fu_751_p1 );
    sensitive << ( tmp_22_fu_755_p2 );

    SC_METHOD(thread_neighbours_0_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_11_fu_563_p1 );

    SC_METHOD(thread_neighbours_0_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_neighbours_0_load_ca_fu_612_p1);
    sensitive << ( neighbours_0_load_reg_981 );

    SC_METHOD(thread_neighbours_1_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_11_fu_563_p1 );

    SC_METHOD(thread_neighbours_1_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_neighbours_1_load_ca_fu_620_p1);
    sensitive << ( neighbours_1_load_reg_986 );

    SC_METHOD(thread_ni_fu_615_p2);
    sensitive << ( i_4_reg_923 );
    sensitive << ( neighbours_0_load_ca_fu_612_p1 );

    SC_METHOD(thread_nj_fu_623_p2);
    sensitive << ( j_2_reg_928 );
    sensitive << ( neighbours_1_load_ca_fu_620_p1 );

    SC_METHOD(thread_num_labels_1_fu_579_p2);
    sensitive << ( num_labels_reg_298 );

    SC_METHOD(thread_num_labels_2_fu_604_p3);
    sensitive << ( num_labels_reg_298 );
    sensitive << ( tmp_10_fu_569_p2 );
    sensitive << ( num_labels_1_fu_579_p2 );

    SC_METHOD(thread_or_cond6_fu_700_p2);
    sensitive << ( tmp2_fu_694_p2 );
    sensitive << ( tmp1_fu_688_p2 );

    SC_METHOD(thread_queue_0_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_fu_426_p1 );
    sensitive << ( tmp_9_fu_517_p1 );
    sensitive << ( tmp_27_fu_794_p1 );

    SC_METHOD(thread_queue_0_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_queue_0_d0);
    sensitive << ( i_cast7_reg_823 );
    sensitive << ( ni_reg_991 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_queue_0_we0);
    sensitive << ( grp_fu_354_p2 );
    sensitive << ( tmp_26_fu_788_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_queue_1_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_fu_426_p1 );
    sensitive << ( tmp_9_fu_517_p1 );
    sensitive << ( tmp_27_fu_794_p1 );

    SC_METHOD(thread_queue_1_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_queue_1_d0);
    sensitive << ( j_cast6_reg_841 );
    sensitive << ( nj_reg_996 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_queue_1_we0);
    sensitive << ( grp_fu_354_p2 );
    sensitive << ( tmp_26_fu_788_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_queue_end_2_fu_432_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( queue_end_fu_64 );

    SC_METHOD(thread_queue_end_2_fu_432_p2);
    sensitive << ( queue_end_2_fu_432_p0 );

    SC_METHOD(thread_queue_end_3_fu_800_p0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( queue_end_1_fu_80 );

    SC_METHOD(thread_queue_end_3_fu_800_p2);
    sensitive << ( queue_end_3_fu_800_p0 );

    SC_METHOD(thread_queue_start_1_fu_511_p2);
    sensitive << ( queue_start_reg_287 );

    SC_METHOD(thread_rev4_fu_666_p2);
    sensitive << ( tmp_18_fu_658_p3 );

    SC_METHOD(thread_rev_fu_636_p2);
    sensitive << ( tmp_16_fu_628_p3 );

    SC_METHOD(thread_storemerge1_cast_cas_fu_497_p3);
    sensitive << ( tmp_8_reg_900 );

    SC_METHOD(thread_storemerge_fu_595_p3);
    sensitive << ( tmp_10_fu_569_p2 );
    sensitive << ( tmp_13_fu_575_p1 );
    sensitive << ( tmp_15_fu_589_p2 );

    SC_METHOD(thread_tmp1_fu_688_p2);
    sensitive << ( icmp_fu_652_p2 );
    sensitive << ( rev_fu_636_p2 );

    SC_METHOD(thread_tmp2_fu_694_p2);
    sensitive << ( icmp7_fu_682_p2 );
    sensitive << ( rev4_fu_666_p2 );

    SC_METHOD(thread_tmp_10_fu_569_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_551_p2 );
    sensitive << ( min_label_reg_310 );

    SC_METHOD(thread_tmp_11_fu_563_p1);
    sensitive << ( k_reg_322 );

    SC_METHOD(thread_tmp_12_fu_487_p2);
    sensitive << ( tmp_20_cast_reg_870 );
    sensitive << ( tmp_7_cast_fu_483_p1 );

    SC_METHOD(thread_tmp_13_fu_575_p1);
    sensitive << ( min_label_reg_310 );

    SC_METHOD(thread_tmp_14_fu_585_p1);
    sensitive << ( num_labels_reg_298 );

    SC_METHOD(thread_tmp_15_fu_589_p2);
    sensitive << ( tmp_14_fu_585_p1 );

    SC_METHOD(thread_tmp_16_fu_628_p3);
    sensitive << ( ni_fu_615_p2 );

    SC_METHOD(thread_tmp_17_fu_642_p4);
    sensitive << ( ni_fu_615_p2 );

    SC_METHOD(thread_tmp_18_fu_658_p3);
    sensitive << ( nj_fu_623_p2 );

    SC_METHOD(thread_tmp_19_fu_672_p4);
    sensitive << ( nj_fu_623_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_392_p1);
    sensitive << ( tmp_fu_384_p3 );

    SC_METHOD(thread_tmp_1_fu_523_p1);
    sensitive << ( queue_1_q0 );

    SC_METHOD(thread_tmp_20_cast_fu_463_p1);
    sensitive << ( tmp_2_fu_455_p3 );

    SC_METHOD(thread_tmp_20_fu_706_p1);
    sensitive << ( nj_fu_623_p2 );

    SC_METHOD(thread_tmp_21_fu_710_p1);
    sensitive << ( ni_fu_615_p2 );

    SC_METHOD(thread_tmp_22_fu_755_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( min_label_reg_310 );
    sensitive << ( min_label_2_fu_751_p1 );

    SC_METHOD(thread_tmp_24_fu_777_p2);
    sensitive << ( grayOutput_q0 );
    sensitive << ( grayOutput_load_1_reg_953 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_tmp_25_fu_782_p2);
    sensitive << ( dist_load_1_reg_1036 );

    SC_METHOD(thread_tmp_26_fu_788_p2);
    sensitive << ( dist_q0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_25_fu_782_p2 );

    SC_METHOD(thread_tmp_27_fu_794_p0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( queue_end_1_fu_80 );

    SC_METHOD(thread_tmp_27_fu_794_p1);
    sensitive << ( tmp_27_fu_794_p0 );

    SC_METHOD(thread_tmp_28_cast_fu_421_p1);
    sensitive << ( tmp_s_fu_416_p2 );

    SC_METHOD(thread_tmp_28_fu_722_p2);
    sensitive << ( tmp_34_cast_fu_714_p3 );
    sensitive << ( tmp_20_fu_706_p1 );

    SC_METHOD(thread_tmp_29_fu_735_p4);
    sensitive << ( watershedOutput_q0 );

    SC_METHOD(thread_tmp_2_fu_455_p3);
    sensitive << ( i1_reg_265 );

    SC_METHOD(thread_tmp_30_cast_fu_531_p3);
    sensitive << ( tmp_3_fu_527_p1 );

    SC_METHOD(thread_tmp_31_cast_fu_545_p1);
    sensitive << ( tmp_7_reg_933 );

    SC_METHOD(thread_tmp_32_cast_fu_492_p1);
    sensitive << ( tmp_12_fu_487_p2 );

    SC_METHOD(thread_tmp_34_cast_fu_714_p3);
    sensitive << ( tmp_21_fu_710_p1 );

    SC_METHOD(thread_tmp_35_cast_fu_728_p1);
    sensitive << ( tmp_28_fu_722_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_412_p1);
    sensitive << ( j_reg_254 );

    SC_METHOD(thread_tmp_3_fu_527_p1);
    sensitive << ( queue_0_q0 );

    SC_METHOD(thread_tmp_5_fu_505_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( queue_start_reg_287 );
    sensitive << ( queue_end_1_fu_80 );

    SC_METHOD(thread_tmp_6_fu_426_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( queue_end_fu_64 );

    SC_METHOD(thread_tmp_6_fu_426_p1);
    sensitive << ( tmp_6_fu_426_p0 );

    SC_METHOD(thread_tmp_7_cast_fu_483_p1);
    sensitive << ( j2_reg_276 );

    SC_METHOD(thread_tmp_7_fu_539_p2);
    sensitive << ( tmp_30_cast_fu_531_p3 );
    sensitive << ( tmp_1_fu_523_p1 );

    SC_METHOD(thread_tmp_9_fu_517_p1);
    sensitive << ( queue_start_reg_287 );

    SC_METHOD(thread_tmp_fu_384_p3);
    sensitive << ( i_reg_243 );

    SC_METHOD(thread_tmp_s_fu_416_p2);
    sensitive << ( tmp_1_cast_reg_836 );
    sensitive << ( tmp_3_cast_fu_412_p1 );

    SC_METHOD(thread_watershedOutput_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_32_cast_fu_492_p1 );
    sensitive << ( watershedOutput_addr_1_reg_943 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( watershedOutput_addr_3_reg_1010 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_28_cast_fu_421_p1 );
    sensitive << ( tmp_35_cast_fu_728_p1 );

    SC_METHOD(thread_watershedOutput_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_watershedOutput_d0);
    sensitive << ( watershedOutput_q0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( storemerge_fu_595_p3 );

    SC_METHOD(thread_watershedOutput_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_551_p2 );
    sensitive << ( or_cond6_reg_1001 );
    sensitive << ( tmp_23_reg_1028 );
    sensitive << ( tmp_24_reg_1032 );
    sensitive << ( tmp_26_reg_1041 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_372_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_400_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_443_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_471_p2 );
    sensitive << ( grp_fu_354_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_5_fu_505_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_551_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( or_cond6_fu_700_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_24_fu_777_p2 );
    sensitive << ( ap_CS_fsm_state17 );

    ap_CS_fsm = "00000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "watershed_algorithm_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, grayOutput_address0, "(port)grayOutput_address0");
    sc_trace(mVcdFile, grayOutput_ce0, "(port)grayOutput_ce0");
    sc_trace(mVcdFile, grayOutput_q0, "(port)grayOutput_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, watershedOutput_address0, "watershedOutput_address0");
    sc_trace(mVcdFile, watershedOutput_ce0, "watershedOutput_ce0");
    sc_trace(mVcdFile, watershedOutput_we0, "watershedOutput_we0");
    sc_trace(mVcdFile, watershedOutput_d0, "watershedOutput_d0");
    sc_trace(mVcdFile, watershedOutput_q0, "watershedOutput_q0");
    sc_trace(mVcdFile, neighbours_0_address0, "neighbours_0_address0");
    sc_trace(mVcdFile, neighbours_0_ce0, "neighbours_0_ce0");
    sc_trace(mVcdFile, neighbours_0_q0, "neighbours_0_q0");
    sc_trace(mVcdFile, neighbours_1_address0, "neighbours_1_address0");
    sc_trace(mVcdFile, neighbours_1_ce0, "neighbours_1_ce0");
    sc_trace(mVcdFile, neighbours_1_q0, "neighbours_1_q0");
    sc_trace(mVcdFile, queue_end_load_reg_818, "queue_end_load_reg_818");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_cast7_fu_368_p1, "i_cast7_fu_368_p1");
    sc_trace(mVcdFile, i_cast7_reg_823, "i_cast7_reg_823");
    sc_trace(mVcdFile, i_1_fu_378_p2, "i_1_fu_378_p2");
    sc_trace(mVcdFile, i_1_reg_831, "i_1_reg_831");
    sc_trace(mVcdFile, tmp_1_cast_fu_392_p1, "tmp_1_cast_fu_392_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_836, "tmp_1_cast_reg_836");
    sc_trace(mVcdFile, exitcond4_fu_372_p2, "exitcond4_fu_372_p2");
    sc_trace(mVcdFile, j_cast6_fu_396_p1, "j_cast6_fu_396_p1");
    sc_trace(mVcdFile, j_cast6_reg_841, "j_cast6_reg_841");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_1_fu_406_p2, "j_1_fu_406_p2");
    sc_trace(mVcdFile, j_1_reg_849, "j_1_reg_849");
    sc_trace(mVcdFile, exitcond3_fu_400_p2, "exitcond3_fu_400_p2");
    sc_trace(mVcdFile, i_3_fu_449_p2, "i_3_fu_449_p2");
    sc_trace(mVcdFile, i_3_reg_865, "i_3_reg_865");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_20_cast_fu_463_p1, "tmp_20_cast_fu_463_p1");
    sc_trace(mVcdFile, tmp_20_cast_reg_870, "tmp_20_cast_reg_870");
    sc_trace(mVcdFile, exitcond2_fu_443_p2, "exitcond2_fu_443_p2");
    sc_trace(mVcdFile, j_3_fu_477_p2, "j_3_fu_477_p2");
    sc_trace(mVcdFile, j_3_reg_885, "j_3_reg_885");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_32_cast_fu_492_p1, "tmp_32_cast_fu_492_p1");
    sc_trace(mVcdFile, tmp_32_cast_reg_890, "tmp_32_cast_reg_890");
    sc_trace(mVcdFile, exitcond1_fu_471_p2, "exitcond1_fu_471_p2");
    sc_trace(mVcdFile, grp_fu_354_p2, "grp_fu_354_p2");
    sc_trace(mVcdFile, tmp_8_reg_900, "tmp_8_reg_900");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, queue_start_1_fu_511_p2, "queue_start_1_fu_511_p2");
    sc_trace(mVcdFile, queue_start_1_reg_908, "queue_start_1_reg_908");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_5_fu_505_p2, "tmp_5_fu_505_p2");
    sc_trace(mVcdFile, queue_0_q0, "queue_0_q0");
    sc_trace(mVcdFile, i_4_reg_923, "i_4_reg_923");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, queue_1_q0, "queue_1_q0");
    sc_trace(mVcdFile, j_2_reg_928, "j_2_reg_928");
    sc_trace(mVcdFile, tmp_7_fu_539_p2, "tmp_7_fu_539_p2");
    sc_trace(mVcdFile, tmp_7_reg_933, "tmp_7_reg_933");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, watershedOutput_addr_1_reg_943, "watershedOutput_addr_1_reg_943");
    sc_trace(mVcdFile, dist_addr_reg_948, "dist_addr_reg_948");
    sc_trace(mVcdFile, grayOutput_load_1_reg_953, "grayOutput_load_1_reg_953");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, k_1_fu_557_p2, "k_1_fu_557_p2");
    sc_trace(mVcdFile, k_1_reg_961, "k_1_reg_961");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond_fu_551_p2, "exitcond_fu_551_p2");
    sc_trace(mVcdFile, num_labels_2_fu_604_p3, "num_labels_2_fu_604_p3");
    sc_trace(mVcdFile, neighbours_0_load_reg_981, "neighbours_0_load_reg_981");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, neighbours_1_load_reg_986, "neighbours_1_load_reg_986");
    sc_trace(mVcdFile, ni_fu_615_p2, "ni_fu_615_p2");
    sc_trace(mVcdFile, ni_reg_991, "ni_reg_991");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, nj_fu_623_p2, "nj_fu_623_p2");
    sc_trace(mVcdFile, nj_reg_996, "nj_reg_996");
    sc_trace(mVcdFile, or_cond6_fu_700_p2, "or_cond6_fu_700_p2");
    sc_trace(mVcdFile, or_cond6_reg_1001, "or_cond6_reg_1001");
    sc_trace(mVcdFile, grayOutput_addr_1_reg_1005, "grayOutput_addr_1_reg_1005");
    sc_trace(mVcdFile, watershedOutput_addr_3_reg_1010, "watershedOutput_addr_3_reg_1010");
    sc_trace(mVcdFile, dist_addr_2_reg_1015, "dist_addr_2_reg_1015");
    sc_trace(mVcdFile, min_label_1_fu_769_p3, "min_label_1_fu_769_p3");
    sc_trace(mVcdFile, min_label_1_reg_1020, "min_label_1_reg_1020");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_23_reg_1028, "tmp_23_reg_1028");
    sc_trace(mVcdFile, tmp_24_fu_777_p2, "tmp_24_fu_777_p2");
    sc_trace(mVcdFile, tmp_24_reg_1032, "tmp_24_reg_1032");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, dist_q0, "dist_q0");
    sc_trace(mVcdFile, dist_load_1_reg_1036, "dist_load_1_reg_1036");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_26_fu_788_p2, "tmp_26_fu_788_p2");
    sc_trace(mVcdFile, tmp_26_reg_1041, "tmp_26_reg_1041");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, queue_0_address0, "queue_0_address0");
    sc_trace(mVcdFile, queue_0_ce0, "queue_0_ce0");
    sc_trace(mVcdFile, queue_0_we0, "queue_0_we0");
    sc_trace(mVcdFile, queue_0_d0, "queue_0_d0");
    sc_trace(mVcdFile, queue_1_address0, "queue_1_address0");
    sc_trace(mVcdFile, queue_1_ce0, "queue_1_ce0");
    sc_trace(mVcdFile, queue_1_we0, "queue_1_we0");
    sc_trace(mVcdFile, queue_1_d0, "queue_1_d0");
    sc_trace(mVcdFile, dist_address0, "dist_address0");
    sc_trace(mVcdFile, dist_ce0, "dist_ce0");
    sc_trace(mVcdFile, dist_we0, "dist_we0");
    sc_trace(mVcdFile, dist_d0, "dist_d0");
    sc_trace(mVcdFile, i_reg_243, "i_reg_243");
    sc_trace(mVcdFile, j_reg_254, "j_reg_254");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i1_reg_265, "i1_reg_265");
    sc_trace(mVcdFile, j2_reg_276, "j2_reg_276");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, queue_start_reg_287, "queue_start_reg_287");
    sc_trace(mVcdFile, num_labels_reg_298, "num_labels_reg_298");
    sc_trace(mVcdFile, min_label_reg_310, "min_label_reg_310");
    sc_trace(mVcdFile, ap_phi_mux_min_label_be_phi_fu_337_p10, "ap_phi_mux_min_label_be_phi_fu_337_p10");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, k_reg_322, "k_reg_322");
    sc_trace(mVcdFile, min_label_be_reg_333, "min_label_be_reg_333");
    sc_trace(mVcdFile, tmp_28_cast_fu_421_p1, "tmp_28_cast_fu_421_p1");
    sc_trace(mVcdFile, tmp_6_fu_426_p1, "tmp_6_fu_426_p1");
    sc_trace(mVcdFile, tmp_9_fu_517_p1, "tmp_9_fu_517_p1");
    sc_trace(mVcdFile, tmp_31_cast_fu_545_p1, "tmp_31_cast_fu_545_p1");
    sc_trace(mVcdFile, tmp_11_fu_563_p1, "tmp_11_fu_563_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_728_p1, "tmp_35_cast_fu_728_p1");
    sc_trace(mVcdFile, tmp_27_fu_794_p1, "tmp_27_fu_794_p1");
    sc_trace(mVcdFile, queue_end_fu_64, "queue_end_fu_64");
    sc_trace(mVcdFile, queue_end_2_fu_432_p2, "queue_end_2_fu_432_p2");
    sc_trace(mVcdFile, queue_end_1_fu_80, "queue_end_1_fu_80");
    sc_trace(mVcdFile, queue_end_3_fu_800_p2, "queue_end_3_fu_800_p2");
    sc_trace(mVcdFile, storemerge_fu_595_p3, "storemerge_fu_595_p3");
    sc_trace(mVcdFile, storemerge1_cast_cas_fu_497_p3, "storemerge1_cast_cas_fu_497_p3");
    sc_trace(mVcdFile, tmp_25_fu_782_p2, "tmp_25_fu_782_p2");
    sc_trace(mVcdFile, tmp_fu_384_p3, "tmp_fu_384_p3");
    sc_trace(mVcdFile, tmp_3_cast_fu_412_p1, "tmp_3_cast_fu_412_p1");
    sc_trace(mVcdFile, tmp_s_fu_416_p2, "tmp_s_fu_416_p2");
    sc_trace(mVcdFile, tmp_6_fu_426_p0, "tmp_6_fu_426_p0");
    sc_trace(mVcdFile, queue_end_2_fu_432_p0, "queue_end_2_fu_432_p0");
    sc_trace(mVcdFile, tmp_2_fu_455_p3, "tmp_2_fu_455_p3");
    sc_trace(mVcdFile, tmp_7_cast_fu_483_p1, "tmp_7_cast_fu_483_p1");
    sc_trace(mVcdFile, tmp_12_fu_487_p2, "tmp_12_fu_487_p2");
    sc_trace(mVcdFile, tmp_3_fu_527_p1, "tmp_3_fu_527_p1");
    sc_trace(mVcdFile, tmp_30_cast_fu_531_p3, "tmp_30_cast_fu_531_p3");
    sc_trace(mVcdFile, tmp_1_fu_523_p1, "tmp_1_fu_523_p1");
    sc_trace(mVcdFile, tmp_14_fu_585_p1, "tmp_14_fu_585_p1");
    sc_trace(mVcdFile, tmp_10_fu_569_p2, "tmp_10_fu_569_p2");
    sc_trace(mVcdFile, tmp_13_fu_575_p1, "tmp_13_fu_575_p1");
    sc_trace(mVcdFile, tmp_15_fu_589_p2, "tmp_15_fu_589_p2");
    sc_trace(mVcdFile, num_labels_1_fu_579_p2, "num_labels_1_fu_579_p2");
    sc_trace(mVcdFile, neighbours_0_load_ca_fu_612_p1, "neighbours_0_load_ca_fu_612_p1");
    sc_trace(mVcdFile, neighbours_1_load_ca_fu_620_p1, "neighbours_1_load_ca_fu_620_p1");
    sc_trace(mVcdFile, tmp_16_fu_628_p3, "tmp_16_fu_628_p3");
    sc_trace(mVcdFile, tmp_17_fu_642_p4, "tmp_17_fu_642_p4");
    sc_trace(mVcdFile, tmp_18_fu_658_p3, "tmp_18_fu_658_p3");
    sc_trace(mVcdFile, tmp_19_fu_672_p4, "tmp_19_fu_672_p4");
    sc_trace(mVcdFile, icmp_fu_652_p2, "icmp_fu_652_p2");
    sc_trace(mVcdFile, rev_fu_636_p2, "rev_fu_636_p2");
    sc_trace(mVcdFile, icmp7_fu_682_p2, "icmp7_fu_682_p2");
    sc_trace(mVcdFile, rev4_fu_666_p2, "rev4_fu_666_p2");
    sc_trace(mVcdFile, tmp2_fu_694_p2, "tmp2_fu_694_p2");
    sc_trace(mVcdFile, tmp1_fu_688_p2, "tmp1_fu_688_p2");
    sc_trace(mVcdFile, tmp_21_fu_710_p1, "tmp_21_fu_710_p1");
    sc_trace(mVcdFile, tmp_34_cast_fu_714_p3, "tmp_34_cast_fu_714_p3");
    sc_trace(mVcdFile, tmp_20_fu_706_p1, "tmp_20_fu_706_p1");
    sc_trace(mVcdFile, tmp_28_fu_722_p2, "tmp_28_fu_722_p2");
    sc_trace(mVcdFile, tmp_29_fu_735_p4, "tmp_29_fu_735_p4");
    sc_trace(mVcdFile, min_label_2_fu_751_p1, "min_label_2_fu_751_p1");
    sc_trace(mVcdFile, tmp_22_fu_755_p2, "tmp_22_fu_755_p2");
    sc_trace(mVcdFile, icmp1_fu_745_p2, "icmp1_fu_745_p2");
    sc_trace(mVcdFile, min_label_3_min_labe_fu_761_p3, "min_label_3_min_labe_fu_761_p3");
    sc_trace(mVcdFile, tmp_27_fu_794_p0, "tmp_27_fu_794_p0");
    sc_trace(mVcdFile, queue_end_3_fu_800_p0, "queue_end_3_fu_800_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

watershed_algorithm::~watershed_algorithm() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete watershedOutput_U;
    delete neighbours_0_U;
    delete neighbours_1_U;
    delete queue_0_U;
    delete queue_1_U;
    delete dist_U;
}

void watershed_algorithm::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_372_p2.read(), ap_const_lv1_1))) {
        i1_reg_265 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_471_p2.read(), ap_const_lv1_1))) {
        i1_reg_265 = i_3_reg_865.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_400_p2.read(), ap_const_lv1_1))) {
        i_reg_243 = i_1_reg_831.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_243 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_443_p2.read()))) {
        j2_reg_276 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j2_reg_276 = j_3_reg_885.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_254 = j_1_reg_849.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_372_p2.read(), ap_const_lv1_0))) {
        j_reg_254 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        k_reg_322 = k_1_reg_961.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        k_reg_322 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_354_p2.read()))) {
        min_label_be_reg_333 = min_label_1_fu_769_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond6_fu_700_p2.read()))) {
        min_label_be_reg_333 = min_label_reg_310.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_1001.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_reg_1028.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_reg_1032.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_reg_1041.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_24_fu_777_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_fu_788_p2.read())))) {
        min_label_be_reg_333 = min_label_1_reg_1020.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        min_label_reg_310 = ap_phi_mux_min_label_be_phi_fu_337_p10.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        min_label_reg_310 = ap_const_lv32_40001;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_443_p2.read(), ap_const_lv1_1))) {
        num_labels_reg_298 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_551_p2.read()))) {
        num_labels_reg_298 = num_labels_2_fu_604_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_fu_788_p2.read()))) {
        queue_end_1_fu_80 = queue_end_3_fu_800_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_443_p2.read(), ap_const_lv1_1))) {
        queue_end_1_fu_80 = queue_end_load_reg_818.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(grp_fu_354_p2.read(), ap_const_lv1_1))) {
        queue_end_fu_64 = queue_end_2_fu_432_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        queue_end_fu_64 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_443_p2.read(), ap_const_lv1_1))) {
        queue_start_reg_287 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_551_p2.read()))) {
        queue_start_reg_287 = queue_start_1_reg_908.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_fu_700_p2.read()))) {
        dist_addr_2_reg_1015 =  (sc_lv<18>) (tmp_35_cast_fu_728_p1.read());
        grayOutput_addr_1_reg_1005 =  (sc_lv<18>) (tmp_35_cast_fu_728_p1.read());
        watershedOutput_addr_3_reg_1010 =  (sc_lv<18>) (tmp_35_cast_fu_728_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        dist_addr_reg_948 =  (sc_lv<18>) (tmp_31_cast_fu_545_p1.read());
        watershedOutput_addr_1_reg_943 =  (sc_lv<18>) (tmp_31_cast_fu_545_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        dist_load_1_reg_1036 = dist_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grayOutput_load_1_reg_953 = grayOutput_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_831 = i_1_fu_378_p2.read();
        i_cast7_reg_823 = i_cast7_fu_368_p1.read();
        queue_end_load_reg_818 = queue_end_fu_64.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_3_reg_865 = i_3_fu_449_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_4_reg_923 = queue_0_q0.read();
        j_2_reg_928 = queue_1_q0.read();
        tmp_7_reg_933 = tmp_7_fu_539_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_849 = j_1_fu_406_p2.read();
        j_cast6_reg_841 = j_cast6_fu_396_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_3_reg_885 = j_3_fu_477_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        k_1_reg_961 = k_1_fu_557_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        min_label_1_reg_1020 = min_label_1_fu_769_p3.read();
        tmp_23_reg_1028 = grp_fu_354_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        neighbours_0_load_reg_981 = neighbours_0_q0.read();
        neighbours_1_load_reg_986 = neighbours_1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ni_reg_991 = ni_fu_615_p2.read();
        nj_reg_996 = nj_fu_623_p2.read();
        or_cond6_reg_1001 = or_cond6_fu_700_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        queue_start_1_reg_908 = queue_start_1_fu_511_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_372_p2.read(), ap_const_lv1_0))) {
        tmp_1_cast_reg_836 = tmp_1_cast_fu_392_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_443_p2.read()))) {
        tmp_20_cast_reg_870 = tmp_20_cast_fu_463_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_24_reg_1032 = tmp_24_fu_777_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_26_reg_1041 = tmp_26_fu_788_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_471_p2.read()))) {
        tmp_32_cast_reg_890 = tmp_32_cast_fu_492_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_8_reg_900 = grp_fu_354_p2.read();
    }
}

void watershed_algorithm::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void watershed_algorithm::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void watershed_algorithm::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void watershed_algorithm::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void watershed_algorithm::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void watershed_algorithm::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void watershed_algorithm::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void watershed_algorithm::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void watershed_algorithm::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void watershed_algorithm::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void watershed_algorithm::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void watershed_algorithm::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void watershed_algorithm::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void watershed_algorithm::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void watershed_algorithm::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void watershed_algorithm::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void watershed_algorithm::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void watershed_algorithm::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void watershed_algorithm::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void watershed_algorithm::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void watershed_algorithm::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_505_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_ap_phi_mux_min_label_be_phi_fu_337_p10() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_1001.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_reg_1028.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_reg_1032.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_reg_1041.read()))) {
        ap_phi_mux_min_label_be_phi_fu_337_p10 = min_label_1_reg_1020.read();
    } else {
        ap_phi_mux_min_label_be_phi_fu_337_p10 = min_label_be_reg_333.read();
    }
}

void watershed_algorithm::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_505_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_dist_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        dist_address0 = dist_addr_2_reg_1015.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        dist_address0 = dist_addr_reg_948.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        dist_address0 =  (sc_lv<18>) (tmp_32_cast_reg_890.read());
    } else {
        dist_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void watershed_algorithm::thread_dist_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        dist_ce0 = ap_const_logic_1;
    } else {
        dist_ce0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_dist_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dist_d0 = tmp_25_fu_782_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        dist_d0 = storemerge1_cast_cas_fu_497_p3.read();
    } else {
        dist_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void watershed_algorithm::thread_dist_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_fu_788_p2.read())))) {
        dist_we0 = ap_const_logic_1;
    } else {
        dist_we0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_exitcond1_fu_471_p2() {
    exitcond1_fu_471_p2 = (!j2_reg_276.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j2_reg_276.read() == ap_const_lv10_200);
}

void watershed_algorithm::thread_exitcond2_fu_443_p2() {
    exitcond2_fu_443_p2 = (!i1_reg_265.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_265.read() == ap_const_lv10_200);
}

void watershed_algorithm::thread_exitcond3_fu_400_p2() {
    exitcond3_fu_400_p2 = (!j_reg_254.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_254.read() == ap_const_lv10_200);
}

void watershed_algorithm::thread_exitcond4_fu_372_p2() {
    exitcond4_fu_372_p2 = (!i_reg_243.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_243.read() == ap_const_lv10_200);
}

void watershed_algorithm::thread_exitcond_fu_551_p2() {
    exitcond_fu_551_p2 = (!k_reg_322.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_322.read() == ap_const_lv4_8);
}

void watershed_algorithm::thread_grayOutput_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grayOutput_address0 = grayOutput_addr_1_reg_1005.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grayOutput_address0 =  (sc_lv<18>) (tmp_31_cast_fu_545_p1.read());
    } else {
        grayOutput_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void watershed_algorithm::thread_grayOutput_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        grayOutput_ce0 = ap_const_logic_1;
    } else {
        grayOutput_ce0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_grp_fu_354_p2() {
    grp_fu_354_p2 = (!watershedOutput_q0.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(watershedOutput_q0.read() == ap_const_lv8_1);
}

void watershed_algorithm::thread_i_1_fu_378_p2() {
    i_1_fu_378_p2 = (!i_reg_243.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_243.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void watershed_algorithm::thread_i_3_fu_449_p2() {
    i_3_fu_449_p2 = (!i1_reg_265.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i1_reg_265.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void watershed_algorithm::thread_i_cast7_fu_368_p1() {
    i_cast7_fu_368_p1 = esl_zext<32,10>(i_reg_243.read());
}

void watershed_algorithm::thread_icmp1_fu_745_p2() {
    icmp1_fu_745_p2 = (!tmp_29_fu_735_p4.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_29_fu_735_p4.read() != ap_const_lv7_0);
}

void watershed_algorithm::thread_icmp7_fu_682_p2() {
    icmp7_fu_682_p2 = (!tmp_19_fu_672_p4.read().is_01() || !ap_const_lv23_1.is_01())? sc_lv<1>(): (sc_bigint<23>(tmp_19_fu_672_p4.read()) < sc_bigint<23>(ap_const_lv23_1));
}

void watershed_algorithm::thread_icmp_fu_652_p2() {
    icmp_fu_652_p2 = (!tmp_17_fu_642_p4.read().is_01() || !ap_const_lv23_1.is_01())? sc_lv<1>(): (sc_bigint<23>(tmp_17_fu_642_p4.read()) < sc_bigint<23>(ap_const_lv23_1));
}

void watershed_algorithm::thread_j_1_fu_406_p2() {
    j_1_fu_406_p2 = (!j_reg_254.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_254.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void watershed_algorithm::thread_j_3_fu_477_p2() {
    j_3_fu_477_p2 = (!j2_reg_276.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j2_reg_276.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void watershed_algorithm::thread_j_cast6_fu_396_p1() {
    j_cast6_fu_396_p1 = esl_zext<32,10>(j_reg_254.read());
}

void watershed_algorithm::thread_k_1_fu_557_p2() {
    k_1_fu_557_p2 = (!k_reg_322.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_reg_322.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void watershed_algorithm::thread_min_label_1_fu_769_p3() {
    min_label_1_fu_769_p3 = (!icmp1_fu_745_p2.read()[0].is_01())? sc_lv<32>(): ((icmp1_fu_745_p2.read()[0].to_bool())? min_label_3_min_labe_fu_761_p3.read(): min_label_reg_310.read());
}

void watershed_algorithm::thread_min_label_2_fu_751_p1() {
    min_label_2_fu_751_p1 = esl_zext<32,8>(watershedOutput_q0.read());
}

void watershed_algorithm::thread_min_label_3_min_labe_fu_761_p3() {
    min_label_3_min_labe_fu_761_p3 = (!tmp_22_fu_755_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_22_fu_755_p2.read()[0].to_bool())? min_label_2_fu_751_p1.read(): min_label_reg_310.read());
}

void watershed_algorithm::thread_neighbours_0_address0() {
    neighbours_0_address0 =  (sc_lv<3>) (tmp_11_fu_563_p1.read());
}

void watershed_algorithm::thread_neighbours_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        neighbours_0_ce0 = ap_const_logic_1;
    } else {
        neighbours_0_ce0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_neighbours_0_load_ca_fu_612_p1() {
    neighbours_0_load_ca_fu_612_p1 = esl_sext<32,2>(neighbours_0_load_reg_981.read());
}

void watershed_algorithm::thread_neighbours_1_address0() {
    neighbours_1_address0 =  (sc_lv<3>) (tmp_11_fu_563_p1.read());
}

void watershed_algorithm::thread_neighbours_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        neighbours_1_ce0 = ap_const_logic_1;
    } else {
        neighbours_1_ce0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_neighbours_1_load_ca_fu_620_p1() {
    neighbours_1_load_ca_fu_620_p1 = esl_sext<32,2>(neighbours_1_load_reg_986.read());
}

void watershed_algorithm::thread_ni_fu_615_p2() {
    ni_fu_615_p2 = (!i_4_reg_923.read().is_01() || !neighbours_0_load_ca_fu_612_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_4_reg_923.read()) + sc_bigint<32>(neighbours_0_load_ca_fu_612_p1.read()));
}

void watershed_algorithm::thread_nj_fu_623_p2() {
    nj_fu_623_p2 = (!j_2_reg_928.read().is_01() || !neighbours_1_load_ca_fu_620_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(j_2_reg_928.read()) + sc_bigint<32>(neighbours_1_load_ca_fu_620_p1.read()));
}

void watershed_algorithm::thread_num_labels_1_fu_579_p2() {
    num_labels_1_fu_579_p2 = (!ap_const_lv32_1.is_01() || !num_labels_reg_298.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(num_labels_reg_298.read()));
}

void watershed_algorithm::thread_num_labels_2_fu_604_p3() {
    num_labels_2_fu_604_p3 = (!tmp_10_fu_569_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_10_fu_569_p2.read()[0].to_bool())? num_labels_reg_298.read(): num_labels_1_fu_579_p2.read());
}

void watershed_algorithm::thread_or_cond6_fu_700_p2() {
    or_cond6_fu_700_p2 = (tmp2_fu_694_p2.read() & tmp1_fu_688_p2.read());
}

void watershed_algorithm::thread_queue_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        queue_0_address0 =  (sc_lv<18>) (tmp_27_fu_794_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        queue_0_address0 =  (sc_lv<18>) (tmp_9_fu_517_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        queue_0_address0 =  (sc_lv<18>) (tmp_6_fu_426_p1.read());
    } else {
        queue_0_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void watershed_algorithm::thread_queue_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        queue_0_ce0 = ap_const_logic_1;
    } else {
        queue_0_ce0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_queue_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        queue_0_d0 = ni_reg_991.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        queue_0_d0 = i_cast7_reg_823.read();
    } else {
        queue_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void watershed_algorithm::thread_queue_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(grp_fu_354_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_fu_788_p2.read())))) {
        queue_0_we0 = ap_const_logic_1;
    } else {
        queue_0_we0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_queue_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        queue_1_address0 =  (sc_lv<18>) (tmp_27_fu_794_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        queue_1_address0 =  (sc_lv<18>) (tmp_9_fu_517_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        queue_1_address0 =  (sc_lv<18>) (tmp_6_fu_426_p1.read());
    } else {
        queue_1_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void watershed_algorithm::thread_queue_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        queue_1_ce0 = ap_const_logic_1;
    } else {
        queue_1_ce0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_queue_1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        queue_1_d0 = nj_reg_996.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        queue_1_d0 = j_cast6_reg_841.read();
    } else {
        queue_1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void watershed_algorithm::thread_queue_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(grp_fu_354_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_fu_788_p2.read())))) {
        queue_1_we0 = ap_const_logic_1;
    } else {
        queue_1_we0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_queue_end_2_fu_432_p0() {
    queue_end_2_fu_432_p0 = queue_end_fu_64.read();
}

void watershed_algorithm::thread_queue_end_2_fu_432_p2() {
    queue_end_2_fu_432_p2 = (!queue_end_2_fu_432_p0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(queue_end_2_fu_432_p0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void watershed_algorithm::thread_queue_end_3_fu_800_p0() {
    queue_end_3_fu_800_p0 = queue_end_1_fu_80.read();
}

void watershed_algorithm::thread_queue_end_3_fu_800_p2() {
    queue_end_3_fu_800_p2 = (!queue_end_3_fu_800_p0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(queue_end_3_fu_800_p0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void watershed_algorithm::thread_queue_start_1_fu_511_p2() {
    queue_start_1_fu_511_p2 = (!queue_start_reg_287.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(queue_start_reg_287.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void watershed_algorithm::thread_rev4_fu_666_p2() {
    rev4_fu_666_p2 = (tmp_18_fu_658_p3.read() ^ ap_const_lv1_1);
}

void watershed_algorithm::thread_rev_fu_636_p2() {
    rev_fu_636_p2 = (tmp_16_fu_628_p3.read() ^ ap_const_lv1_1);
}

void watershed_algorithm::thread_storemerge1_cast_cas_fu_497_p3() {
    storemerge1_cast_cas_fu_497_p3 = (!tmp_8_reg_900.read()[0].is_01())? sc_lv<32>(): ((tmp_8_reg_900.read()[0].to_bool())? ap_const_lv32_0: ap_const_lv32_40001);
}

void watershed_algorithm::thread_storemerge_fu_595_p3() {
    storemerge_fu_595_p3 = (!tmp_10_fu_569_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_10_fu_569_p2.read()[0].to_bool())? tmp_13_fu_575_p1.read(): tmp_15_fu_589_p2.read());
}

void watershed_algorithm::thread_tmp1_fu_688_p2() {
    tmp1_fu_688_p2 = (icmp_fu_652_p2.read() & rev_fu_636_p2.read());
}

void watershed_algorithm::thread_tmp2_fu_694_p2() {
    tmp2_fu_694_p2 = (icmp7_fu_682_p2.read() & rev4_fu_666_p2.read());
}

void watershed_algorithm::thread_tmp_10_fu_569_p2() {
    tmp_10_fu_569_p2 = (!min_label_reg_310.read().is_01() || !ap_const_lv32_40001.is_01())? sc_lv<1>(): (sc_bigint<32>(min_label_reg_310.read()) < sc_bigint<32>(ap_const_lv32_40001));
}

void watershed_algorithm::thread_tmp_11_fu_563_p1() {
    tmp_11_fu_563_p1 = esl_zext<64,4>(k_reg_322.read());
}

void watershed_algorithm::thread_tmp_12_fu_487_p2() {
    tmp_12_fu_487_p2 = (!tmp_20_cast_reg_870.read().is_01() || !tmp_7_cast_fu_483_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_20_cast_reg_870.read()) + sc_biguint<20>(tmp_7_cast_fu_483_p1.read()));
}

void watershed_algorithm::thread_tmp_13_fu_575_p1() {
    tmp_13_fu_575_p1 = min_label_reg_310.read().range(8-1, 0);
}

void watershed_algorithm::thread_tmp_14_fu_585_p1() {
    tmp_14_fu_585_p1 = num_labels_reg_298.read().range(8-1, 0);
}

void watershed_algorithm::thread_tmp_15_fu_589_p2() {
    tmp_15_fu_589_p2 = (!ap_const_lv8_2.is_01() || !tmp_14_fu_585_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_2) + sc_biguint<8>(tmp_14_fu_585_p1.read()));
}

void watershed_algorithm::thread_tmp_16_fu_628_p3() {
    tmp_16_fu_628_p3 = ni_fu_615_p2.read().range(31, 31);
}

void watershed_algorithm::thread_tmp_17_fu_642_p4() {
    tmp_17_fu_642_p4 = ni_fu_615_p2.read().range(31, 9);
}

void watershed_algorithm::thread_tmp_18_fu_658_p3() {
    tmp_18_fu_658_p3 = nj_fu_623_p2.read().range(31, 31);
}

void watershed_algorithm::thread_tmp_19_fu_672_p4() {
    tmp_19_fu_672_p4 = nj_fu_623_p2.read().range(31, 9);
}

void watershed_algorithm::thread_tmp_1_cast_fu_392_p1() {
    tmp_1_cast_fu_392_p1 = esl_zext<20,19>(tmp_fu_384_p3.read());
}

void watershed_algorithm::thread_tmp_1_fu_523_p1() {
    tmp_1_fu_523_p1 = queue_1_q0.read().range(20-1, 0);
}

void watershed_algorithm::thread_tmp_20_cast_fu_463_p1() {
    tmp_20_cast_fu_463_p1 = esl_zext<20,19>(tmp_2_fu_455_p3.read());
}

void watershed_algorithm::thread_tmp_20_fu_706_p1() {
    tmp_20_fu_706_p1 = nj_fu_623_p2.read().range(20-1, 0);
}

void watershed_algorithm::thread_tmp_21_fu_710_p1() {
    tmp_21_fu_710_p1 = ni_fu_615_p2.read().range(11-1, 0);
}

void watershed_algorithm::thread_tmp_22_fu_755_p2() {
    tmp_22_fu_755_p2 = (!min_label_2_fu_751_p1.read().is_01() || !min_label_reg_310.read().is_01())? sc_lv<1>(): (sc_bigint<32>(min_label_2_fu_751_p1.read()) < sc_bigint<32>(min_label_reg_310.read()));
}

void watershed_algorithm::thread_tmp_24_fu_777_p2() {
    tmp_24_fu_777_p2 = (!grayOutput_q0.read().is_01() || !grayOutput_load_1_reg_953.read().is_01())? sc_lv<1>(): sc_lv<1>(grayOutput_q0.read() == grayOutput_load_1_reg_953.read());
}

void watershed_algorithm::thread_tmp_25_fu_782_p2() {
    tmp_25_fu_782_p2 = (!dist_load_1_reg_1036.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(dist_load_1_reg_1036.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void watershed_algorithm::thread_tmp_26_fu_788_p2() {
    tmp_26_fu_788_p2 = (!dist_q0.read().is_01() || !tmp_25_fu_782_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(dist_q0.read()) > sc_bigint<32>(tmp_25_fu_782_p2.read()));
}

void watershed_algorithm::thread_tmp_27_fu_794_p0() {
    tmp_27_fu_794_p0 = queue_end_1_fu_80.read();
}

void watershed_algorithm::thread_tmp_27_fu_794_p1() {
    tmp_27_fu_794_p1 = esl_sext<64,32>(tmp_27_fu_794_p0.read());
}

void watershed_algorithm::thread_tmp_28_cast_fu_421_p1() {
    tmp_28_cast_fu_421_p1 = esl_zext<64,20>(tmp_s_fu_416_p2.read());
}

void watershed_algorithm::thread_tmp_28_fu_722_p2() {
    tmp_28_fu_722_p2 = (!tmp_34_cast_fu_714_p3.read().is_01() || !tmp_20_fu_706_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_34_cast_fu_714_p3.read()) + sc_biguint<20>(tmp_20_fu_706_p1.read()));
}

void watershed_algorithm::thread_tmp_29_fu_735_p4() {
    tmp_29_fu_735_p4 = watershedOutput_q0.read().range(7, 1);
}

void watershed_algorithm::thread_tmp_2_fu_455_p3() {
    tmp_2_fu_455_p3 = esl_concat<10,9>(i1_reg_265.read(), ap_const_lv9_0);
}

void watershed_algorithm::thread_tmp_30_cast_fu_531_p3() {
    tmp_30_cast_fu_531_p3 = esl_concat<11,9>(tmp_3_fu_527_p1.read(), ap_const_lv9_0);
}

void watershed_algorithm::thread_tmp_31_cast_fu_545_p1() {
    tmp_31_cast_fu_545_p1 = esl_sext<64,20>(tmp_7_reg_933.read());
}

void watershed_algorithm::thread_tmp_32_cast_fu_492_p1() {
    tmp_32_cast_fu_492_p1 = esl_zext<64,20>(tmp_12_fu_487_p2.read());
}

void watershed_algorithm::thread_tmp_34_cast_fu_714_p3() {
    tmp_34_cast_fu_714_p3 = esl_concat<11,9>(tmp_21_fu_710_p1.read(), ap_const_lv9_0);
}

void watershed_algorithm::thread_tmp_35_cast_fu_728_p1() {
    tmp_35_cast_fu_728_p1 = esl_zext<64,20>(tmp_28_fu_722_p2.read());
}

void watershed_algorithm::thread_tmp_3_cast_fu_412_p1() {
    tmp_3_cast_fu_412_p1 = esl_zext<20,10>(j_reg_254.read());
}

void watershed_algorithm::thread_tmp_3_fu_527_p1() {
    tmp_3_fu_527_p1 = queue_0_q0.read().range(11-1, 0);
}

void watershed_algorithm::thread_tmp_5_fu_505_p2() {
    tmp_5_fu_505_p2 = (!queue_start_reg_287.read().is_01() || !queue_end_1_fu_80.read().is_01())? sc_lv<1>(): (sc_bigint<32>(queue_start_reg_287.read()) < sc_bigint<32>(queue_end_1_fu_80.read()));
}

void watershed_algorithm::thread_tmp_6_fu_426_p0() {
    tmp_6_fu_426_p0 = queue_end_fu_64.read();
}

void watershed_algorithm::thread_tmp_6_fu_426_p1() {
    tmp_6_fu_426_p1 = esl_sext<64,32>(tmp_6_fu_426_p0.read());
}

void watershed_algorithm::thread_tmp_7_cast_fu_483_p1() {
    tmp_7_cast_fu_483_p1 = esl_zext<20,10>(j2_reg_276.read());
}

void watershed_algorithm::thread_tmp_7_fu_539_p2() {
    tmp_7_fu_539_p2 = (!tmp_30_cast_fu_531_p3.read().is_01() || !tmp_1_fu_523_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_30_cast_fu_531_p3.read()) + sc_biguint<20>(tmp_1_fu_523_p1.read()));
}

void watershed_algorithm::thread_tmp_9_fu_517_p1() {
    tmp_9_fu_517_p1 = esl_sext<64,32>(queue_start_reg_287.read());
}

void watershed_algorithm::thread_tmp_fu_384_p3() {
    tmp_fu_384_p3 = esl_concat<10,9>(i_reg_243.read(), ap_const_lv9_0);
}

void watershed_algorithm::thread_tmp_s_fu_416_p2() {
    tmp_s_fu_416_p2 = (!tmp_1_cast_reg_836.read().is_01() || !tmp_3_cast_fu_412_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_1_cast_reg_836.read()) + sc_biguint<20>(tmp_3_cast_fu_412_p1.read()));
}

void watershed_algorithm::thread_watershedOutput_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        watershedOutput_address0 = watershedOutput_addr_3_reg_1010.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        watershedOutput_address0 =  (sc_lv<18>) (tmp_35_cast_fu_728_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        watershedOutput_address0 = watershedOutput_addr_1_reg_943.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        watershedOutput_address0 =  (sc_lv<18>) (tmp_32_cast_fu_492_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        watershedOutput_address0 =  (sc_lv<18>) (tmp_28_cast_fu_421_p1.read());
    } else {
        watershedOutput_address0 = "XXXXXXXXXXXXXXXXXX";
    }
}

void watershed_algorithm::thread_watershedOutput_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        watershedOutput_ce0 = ap_const_logic_1;
    } else {
        watershedOutput_ce0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_watershedOutput_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        watershedOutput_d0 = watershedOutput_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        watershedOutput_d0 = storemerge_fu_595_p3.read();
    } else {
        watershedOutput_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void watershed_algorithm::thread_watershedOutput_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_551_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_1001.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_reg_1028.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_reg_1032.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_26_reg_1041.read())))) {
        watershedOutput_we0 = ap_const_logic_1;
    } else {
        watershedOutput_we0 = ap_const_logic_0;
    }
}

void watershed_algorithm::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_372_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_400_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_443_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond1_fu_471_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_505_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_551_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond6_fu_700_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_354_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_24_fu_777_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

