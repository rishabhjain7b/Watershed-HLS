// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "thresholdOtsu.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic thresholdOtsu::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic thresholdOtsu::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state1 = "1";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state2 = "10";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state3 = "100";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state4 = "1000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state5 = "10000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state6 = "100000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state7 = "1000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state8 = "10000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state9 = "100000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state10 = "1000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state11 = "10000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state12 = "100000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<33> thresholdOtsu::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<32> thresholdOtsu::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> thresholdOtsu::ap_const_lv32_1 = "1";
const sc_lv<32> thresholdOtsu::ap_const_lv32_2 = "10";
const sc_lv<1> thresholdOtsu::ap_const_lv1_0 = "0";
const sc_lv<32> thresholdOtsu::ap_const_lv32_3 = "11";
const sc_lv<32> thresholdOtsu::ap_const_lv32_4 = "100";
const sc_lv<32> thresholdOtsu::ap_const_lv32_5 = "101";
const sc_lv<32> thresholdOtsu::ap_const_lv32_7 = "111";
const sc_lv<32> thresholdOtsu::ap_const_lv32_8 = "1000";
const sc_lv<32> thresholdOtsu::ap_const_lv32_9 = "1001";
const sc_lv<32> thresholdOtsu::ap_const_lv32_A = "1010";
const sc_lv<1> thresholdOtsu::ap_const_lv1_1 = "1";
const sc_lv<32> thresholdOtsu::ap_const_lv32_E = "1110";
const sc_lv<32> thresholdOtsu::ap_const_lv32_12 = "10010";
const sc_lv<32> thresholdOtsu::ap_const_lv32_17 = "10111";
const sc_lv<32> thresholdOtsu::ap_const_lv32_19 = "11001";
const sc_lv<32> thresholdOtsu::ap_const_lv32_1A = "11010";
const sc_lv<32> thresholdOtsu::ap_const_lv32_1B = "11011";
const sc_lv<32> thresholdOtsu::ap_const_lv32_1C = "11100";
const sc_lv<32> thresholdOtsu::ap_const_lv32_1D = "11101";
const sc_lv<32> thresholdOtsu::ap_const_lv32_1E = "11110";
const sc_lv<32> thresholdOtsu::ap_const_lv32_1F = "11111";
const sc_lv<8> thresholdOtsu::ap_const_lv8_0 = "00000000";
const sc_lv<10> thresholdOtsu::ap_const_lv10_0 = "0000000000";
const sc_lv<32> thresholdOtsu::ap_const_lv32_6 = "110";
const sc_lv<9> thresholdOtsu::ap_const_lv9_1 = "1";
const sc_lv<9> thresholdOtsu::ap_const_lv9_0 = "000000000";
const sc_lv<32> thresholdOtsu::ap_const_lv32_18 = "11000";
const sc_lv<32> thresholdOtsu::ap_const_lv32_20 = "100000";
const sc_lv<32> thresholdOtsu::ap_const_lv32_11 = "10001";
const sc_lv<32> thresholdOtsu::ap_const_lv32_13 = "10011";
const sc_lv<32> thresholdOtsu::ap_const_lv32_F = "1111";
const sc_lv<8> thresholdOtsu::ap_const_lv8_1 = "1";
const sc_lv<8> thresholdOtsu::ap_const_lv8_FF = "11111111";
const sc_lv<10> thresholdOtsu::ap_const_lv10_200 = "1000000000";
const sc_lv<10> thresholdOtsu::ap_const_lv10_1 = "1";
const sc_lv<9> thresholdOtsu::ap_const_lv9_101 = "100000001";
const sc_lv<9> thresholdOtsu::ap_const_lv9_100 = "100000000";
const sc_lv<23> thresholdOtsu::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> thresholdOtsu::ap_const_lv5_2 = "10";
const bool thresholdOtsu::ap_const_boolean_1 = true;

thresholdOtsu::thresholdOtsu(sc_module_name name) : sc_module(name), mVcdFile(0) {
    variance_U = new thresholdOtsu_variance("variance_U");
    variance_U->clk(ap_clk);
    variance_U->reset(ap_rst);
    variance_U->address0(variance_address0);
    variance_U->ce0(variance_ce0);
    variance_U->q0(variance_q0);
    histogram_U = new thresholdOtsu_histogram("histogram_U");
    histogram_U->clk(ap_clk);
    histogram_U->reset(ap_rst);
    histogram_U->address0(histogram_address0);
    histogram_U->ce0(histogram_ce0);
    histogram_U->we0(histogram_we0);
    histogram_U->d0(histogram_d0);
    histogram_U->q0(histogram_q0);
    mean_U = new thresholdOtsu_histogram("mean_U");
    mean_U->clk(ap_clk);
    mean_U->reset(ap_rst);
    mean_U->address0(mean_address0);
    mean_U->ce0(mean_ce0);
    mean_U->we0(mean_we0);
    mean_U->d0(mean_d0);
    mean_U->q0(mean_q0);
    imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13 = new imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13");
    imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13->clk(ap_clk);
    imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13->reset(ap_rst);
    imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13->din0(mean_load_reg_742);
    imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13->din1(tmp_40_reg_737);
    imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13->ce(ap_var_for_const0);
    imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13->dout(grp_fu_300_p2);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14 = new imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14");
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14->clk(ap_clk);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14->reset(ap_rst);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14->din0(tmp_37_reg_732);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14->din1(ap_var_for_const1);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14->ce(ap_var_for_const0);
    imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14->dout(grp_fu_304_p2);
    imageProcessing_sitofp_32ns_32_5_1_U15 = new imageProcessing_sitofp_32ns_32_5_1<1,5,32,32>("imageProcessing_sitofp_32ns_32_5_1_U15");
    imageProcessing_sitofp_32ns_32_5_1_U15->clk(ap_clk);
    imageProcessing_sitofp_32ns_32_5_1_U15->reset(ap_rst);
    imageProcessing_sitofp_32ns_32_5_1_U15->din0(grp_fu_309_p0);
    imageProcessing_sitofp_32ns_32_5_1_U15->ce(ap_var_for_const0);
    imageProcessing_sitofp_32ns_32_5_1_U15->dout(grp_fu_309_p1);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U16 = new imageProcessing_fcmp_32ns_32ns_1_1_1<1,1,32,32,1>("imageProcessing_fcmp_32ns_32ns_1_1_1_U16");
    imageProcessing_fcmp_32ns_32ns_1_1_1_U16->din0(max_variance_2_reg_770);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U16->din1(max_variance_reg_243);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U16->opcode(ap_var_for_const2);
    imageProcessing_fcmp_32ns_32ns_1_1_1_U16->dout(tmp_8_fu_312_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond1_fu_581_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond1_fu_581_p2 );

    SC_METHOD(thread_dst_address0);
    sensitive << ( tmp_49_cast_reg_813 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_dst_ce0);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_dst_d0);
    sensitive << ( tmp_45_reg_823 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_dst_we0);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_exitcond1_fu_581_p2);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( i5_reg_278 );

    SC_METHOD(thread_exitcond2_fu_468_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( threshold_2_reg_267 );

    SC_METHOD(thread_exitcond3_fu_446_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( indvars_iv_reg_209 );
    sensitive << ( j3_reg_232 );

    SC_METHOD(thread_exitcond4_fu_424_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( indvars_iv_reg_209 );

    SC_METHOD(thread_exitcond6_fu_358_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_reg_176 );

    SC_METHOD(thread_exitcond7_fu_334_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_exitcond_fu_605_p2);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( j6_reg_289 );

    SC_METHOD(thread_grp_fu_309_p0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j3_reg_232 );

    SC_METHOD(thread_histogram_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( histogram_addr_1_reg_675 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_fu_323_p1 );
    sensitive << ( tmp_30_fu_384_p1 );

    SC_METHOD(thread_histogram_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_histogram_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_31_fu_389_p2 );

    SC_METHOD(thread_histogram_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_i_4_fu_340_p2);
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_i_5_fu_474_p2);
    sensitive << ( threshold_2_reg_267 );

    SC_METHOD(thread_i_6_fu_430_p2);
    sensitive << ( i2_reg_221 );

    SC_METHOD(thread_i_7_fu_587_p2);
    sensitive << ( i5_reg_278 );

    SC_METHOD(thread_indvarinc1_fu_395_p2);
    sensitive << ( invdar1_reg_187 );

    SC_METHOD(thread_indvarinc2_fu_412_p2);
    sensitive << ( invdar2_reg_198 );

    SC_METHOD(thread_indvarinc_fu_317_p2);
    sensitive << ( invdar_reg_154 );

    SC_METHOD(thread_indvars_iv_next_fu_458_p2);
    sensitive << ( indvars_iv_reg_209 );

    SC_METHOD(thread_j_4_fu_364_p2);
    sensitive << ( j_reg_176 );

    SC_METHOD(thread_j_5_fu_452_p2);
    sensitive << ( j3_reg_232 );

    SC_METHOD(thread_j_6_fu_611_p2);
    sensitive << ( j6_reg_289 );

    SC_METHOD(thread_max_variance_1_fu_567_p3);
    sensitive << ( max_variance_2_reg_770 );
    sensitive << ( max_variance_reg_243 );
    sensitive << ( tmp_9_fu_562_p2 );

    SC_METHOD(thread_max_variance_2_to_in_fu_485_p1);
    sensitive << ( max_variance_2_reg_770 );

    SC_METHOD(thread_max_variance_to_int_fu_502_p1);
    sensitive << ( max_variance_reg_243 );

    SC_METHOD(thread_mean_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( mean_addr_1_reg_709 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_28_fu_401_p1 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_mean_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_mean_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_41_reg_747 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_mean_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_notlhs1_fu_538_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_3_fu_506_p4 );

    SC_METHOD(thread_notlhs_fu_520_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_1_fu_488_p4 );

    SC_METHOD(thread_notrhs1_fu_544_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_39_fu_516_p1 );

    SC_METHOD(thread_notrhs_fu_526_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_38_fu_498_p1 );

    SC_METHOD(thread_src_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( tmp_49_cast_fu_626_p1 );
    sensitive << ( tmp_40_cast_fu_379_p1 );

    SC_METHOD(thread_src_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_threshold_1_fu_574_p3);
    sensitive << ( threshold_2_cast3_reg_752 );
    sensitive << ( threshold_reg_255 );
    sensitive << ( tmp_9_fu_562_p2 );

    SC_METHOD(thread_threshold_2_cast3_fu_464_p1);
    sensitive << ( threshold_2_reg_267 );

    SC_METHOD(thread_tmp_1_fu_488_p4);
    sensitive << ( max_variance_2_to_in_fu_485_p1 );

    SC_METHOD(thread_tmp_28_fu_401_p1);
    sensitive << ( invdar1_reg_187 );

    SC_METHOD(thread_tmp_29_cast_fu_370_p1);
    sensitive << ( j_reg_176 );

    SC_METHOD(thread_tmp_29_fu_346_p3);
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_tmp_30_fu_384_p1);
    sensitive << ( src_q0 );

    SC_METHOD(thread_tmp_31_fu_389_p2);
    sensitive << ( histogram_load_reg_680 );

    SC_METHOD(thread_tmp_32_fu_406_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( invdar1_reg_187 );

    SC_METHOD(thread_tmp_33_fu_374_p2);
    sensitive << ( tmp_39_cast_reg_657 );
    sensitive << ( tmp_29_cast_fu_370_p1 );

    SC_METHOD(thread_tmp_34_fu_418_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( invdar2_reg_198 );

    SC_METHOD(thread_tmp_35_fu_436_p1);
    sensitive << ( i2_reg_221 );

    SC_METHOD(thread_tmp_36_fu_480_p1);
    sensitive << ( threshold_2_reg_267 );

    SC_METHOD(thread_tmp_38_fu_498_p1);
    sensitive << ( max_variance_2_to_in_fu_485_p1 );

    SC_METHOD(thread_tmp_39_cast_fu_354_p1);
    sensitive << ( tmp_29_fu_346_p3 );

    SC_METHOD(thread_tmp_39_fu_516_p1);
    sensitive << ( max_variance_to_int_fu_502_p1 );

    SC_METHOD(thread_tmp_3_fu_506_p4);
    sensitive << ( max_variance_to_int_fu_502_p1 );

    SC_METHOD(thread_tmp_40_cast_fu_379_p1);
    sensitive << ( tmp_33_fu_374_p2 );

    SC_METHOD(thread_tmp_42_fu_593_p3);
    sensitive << ( i5_reg_278 );

    SC_METHOD(thread_tmp_43_fu_621_p2);
    sensitive << ( tmp_44_cast_reg_800 );
    sensitive << ( tmp_45_cast_fu_617_p1 );

    SC_METHOD(thread_tmp_44_cast_fu_601_p1);
    sensitive << ( tmp_42_fu_593_p3 );

    SC_METHOD(thread_tmp_44_fu_631_p1);
    sensitive << ( src_q0 );

    SC_METHOD(thread_tmp_45_cast_fu_617_p1);
    sensitive << ( j6_reg_289 );

    SC_METHOD(thread_tmp_45_fu_635_p2);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( threshold_reg_255 );
    sensitive << ( tmp_44_fu_631_p1 );

    SC_METHOD(thread_tmp_49_cast_fu_626_p1);
    sensitive << ( tmp_43_fu_621_p2 );

    SC_METHOD(thread_tmp_5_fu_532_p2);
    sensitive << ( notrhs_fu_526_p2 );
    sensitive << ( notlhs_fu_520_p2 );

    SC_METHOD(thread_tmp_6_fu_550_p2);
    sensitive << ( notrhs1_fu_544_p2 );
    sensitive << ( notlhs1_fu_538_p2 );

    SC_METHOD(thread_tmp_7_fu_556_p2);
    sensitive << ( tmp_5_fu_532_p2 );
    sensitive << ( tmp_6_fu_550_p2 );

    SC_METHOD(thread_tmp_9_fu_562_p2);
    sensitive << ( tmp_8_reg_777 );
    sensitive << ( tmp_7_fu_556_p2 );

    SC_METHOD(thread_tmp_fu_323_p1);
    sensitive << ( invdar_reg_154 );

    SC_METHOD(thread_tmp_s_fu_328_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_154 );

    SC_METHOD(thread_variance_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_36_fu_480_p1 );

    SC_METHOD(thread_variance_ce0);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond7_fu_334_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond6_fu_358_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond4_fu_424_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond3_fu_446_p2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( exitcond2_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( exitcond1_fu_581_p2 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( exitcond_fu_605_p2 );
    sensitive << ( tmp_s_fu_328_p2 );
    sensitive << ( tmp_32_fu_406_p2 );
    sensitive << ( tmp_34_fu_418_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "thresholdOtsu_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_address0, "(port)src_address0");
    sc_trace(mVcdFile, src_ce0, "(port)src_ce0");
    sc_trace(mVcdFile, src_q0, "(port)src_q0");
    sc_trace(mVcdFile, dst_address0, "(port)dst_address0");
    sc_trace(mVcdFile, dst_ce0, "(port)dst_ce0");
    sc_trace(mVcdFile, dst_we0, "(port)dst_we0");
    sc_trace(mVcdFile, dst_d0, "(port)dst_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, variance_address0, "variance_address0");
    sc_trace(mVcdFile, variance_ce0, "variance_ce0");
    sc_trace(mVcdFile, variance_q0, "variance_q0");
    sc_trace(mVcdFile, indvarinc_fu_317_p2, "indvarinc_fu_317_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_4_fu_340_p2, "i_4_fu_340_p2");
    sc_trace(mVcdFile, i_4_reg_652, "i_4_reg_652");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_39_cast_fu_354_p1, "tmp_39_cast_fu_354_p1");
    sc_trace(mVcdFile, tmp_39_cast_reg_657, "tmp_39_cast_reg_657");
    sc_trace(mVcdFile, exitcond7_fu_334_p2, "exitcond7_fu_334_p2");
    sc_trace(mVcdFile, j_4_fu_364_p2, "j_4_fu_364_p2");
    sc_trace(mVcdFile, j_4_reg_665, "j_4_reg_665");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond6_fu_358_p2, "exitcond6_fu_358_p2");
    sc_trace(mVcdFile, histogram_addr_1_reg_675, "histogram_addr_1_reg_675");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, histogram_q0, "histogram_q0");
    sc_trace(mVcdFile, histogram_load_reg_680, "histogram_load_reg_680");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, indvarinc1_fu_395_p2, "indvarinc1_fu_395_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, indvarinc2_fu_412_p2, "indvarinc2_fu_412_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_6_fu_430_p2, "i_6_fu_430_p2");
    sc_trace(mVcdFile, i_6_reg_704, "i_6_reg_704");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, mean_addr_1_reg_709, "mean_addr_1_reg_709");
    sc_trace(mVcdFile, exitcond4_fu_424_p2, "exitcond4_fu_424_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, j_5_fu_452_p2, "j_5_fu_452_p2");
    sc_trace(mVcdFile, j_5_reg_722, "j_5_reg_722");
    sc_trace(mVcdFile, indvars_iv_next_fu_458_p2, "indvars_iv_next_fu_458_p2");
    sc_trace(mVcdFile, exitcond3_fu_446_p2, "exitcond3_fu_446_p2");
    sc_trace(mVcdFile, grp_fu_309_p1, "grp_fu_309_p1");
    sc_trace(mVcdFile, tmp_37_reg_732, "tmp_37_reg_732");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_304_p2, "grp_fu_304_p2");
    sc_trace(mVcdFile, tmp_40_reg_737, "tmp_40_reg_737");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, mean_q0, "mean_q0");
    sc_trace(mVcdFile, mean_load_reg_742, "mean_load_reg_742");
    sc_trace(mVcdFile, grp_fu_300_p2, "grp_fu_300_p2");
    sc_trace(mVcdFile, tmp_41_reg_747, "tmp_41_reg_747");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, threshold_2_cast3_fu_464_p1, "threshold_2_cast3_fu_464_p1");
    sc_trace(mVcdFile, threshold_2_cast3_reg_752, "threshold_2_cast3_reg_752");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, i_5_fu_474_p2, "i_5_fu_474_p2");
    sc_trace(mVcdFile, i_5_reg_760, "i_5_reg_760");
    sc_trace(mVcdFile, exitcond2_fu_468_p2, "exitcond2_fu_468_p2");
    sc_trace(mVcdFile, max_variance_2_reg_770, "max_variance_2_reg_770");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, tmp_8_fu_312_p2, "tmp_8_fu_312_p2");
    sc_trace(mVcdFile, tmp_8_reg_777, "tmp_8_reg_777");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, max_variance_1_fu_567_p3, "max_variance_1_fu_567_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, threshold_1_fu_574_p3, "threshold_1_fu_574_p3");
    sc_trace(mVcdFile, i_7_fu_587_p2, "i_7_fu_587_p2");
    sc_trace(mVcdFile, i_7_reg_795, "i_7_reg_795");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, tmp_44_cast_fu_601_p1, "tmp_44_cast_fu_601_p1");
    sc_trace(mVcdFile, tmp_44_cast_reg_800, "tmp_44_cast_reg_800");
    sc_trace(mVcdFile, exitcond1_fu_581_p2, "exitcond1_fu_581_p2");
    sc_trace(mVcdFile, j_6_fu_611_p2, "j_6_fu_611_p2");
    sc_trace(mVcdFile, j_6_reg_808, "j_6_reg_808");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, tmp_49_cast_fu_626_p1, "tmp_49_cast_fu_626_p1");
    sc_trace(mVcdFile, tmp_49_cast_reg_813, "tmp_49_cast_reg_813");
    sc_trace(mVcdFile, exitcond_fu_605_p2, "exitcond_fu_605_p2");
    sc_trace(mVcdFile, tmp_45_fu_635_p2, "tmp_45_fu_635_p2");
    sc_trace(mVcdFile, tmp_45_reg_823, "tmp_45_reg_823");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, histogram_address0, "histogram_address0");
    sc_trace(mVcdFile, histogram_ce0, "histogram_ce0");
    sc_trace(mVcdFile, histogram_we0, "histogram_we0");
    sc_trace(mVcdFile, histogram_d0, "histogram_d0");
    sc_trace(mVcdFile, mean_address0, "mean_address0");
    sc_trace(mVcdFile, mean_ce0, "mean_ce0");
    sc_trace(mVcdFile, mean_we0, "mean_we0");
    sc_trace(mVcdFile, mean_d0, "mean_d0");
    sc_trace(mVcdFile, invdar_reg_154, "invdar_reg_154");
    sc_trace(mVcdFile, tmp_s_fu_328_p2, "tmp_s_fu_328_p2");
    sc_trace(mVcdFile, i_reg_165, "i_reg_165");
    sc_trace(mVcdFile, j_reg_176, "j_reg_176");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, invdar1_reg_187, "invdar1_reg_187");
    sc_trace(mVcdFile, tmp_32_fu_406_p2, "tmp_32_fu_406_p2");
    sc_trace(mVcdFile, invdar2_reg_198, "invdar2_reg_198");
    sc_trace(mVcdFile, tmp_34_fu_418_p2, "tmp_34_fu_418_p2");
    sc_trace(mVcdFile, indvars_iv_reg_209, "indvars_iv_reg_209");
    sc_trace(mVcdFile, i2_reg_221, "i2_reg_221");
    sc_trace(mVcdFile, j3_reg_232, "j3_reg_232");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, max_variance_reg_243, "max_variance_reg_243");
    sc_trace(mVcdFile, threshold_reg_255, "threshold_reg_255");
    sc_trace(mVcdFile, threshold_2_reg_267, "threshold_2_reg_267");
    sc_trace(mVcdFile, i5_reg_278, "i5_reg_278");
    sc_trace(mVcdFile, j6_reg_289, "j6_reg_289");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, tmp_fu_323_p1, "tmp_fu_323_p1");
    sc_trace(mVcdFile, tmp_40_cast_fu_379_p1, "tmp_40_cast_fu_379_p1");
    sc_trace(mVcdFile, tmp_30_fu_384_p1, "tmp_30_fu_384_p1");
    sc_trace(mVcdFile, tmp_28_fu_401_p1, "tmp_28_fu_401_p1");
    sc_trace(mVcdFile, tmp_35_fu_436_p1, "tmp_35_fu_436_p1");
    sc_trace(mVcdFile, tmp_36_fu_480_p1, "tmp_36_fu_480_p1");
    sc_trace(mVcdFile, tmp_31_fu_389_p2, "tmp_31_fu_389_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_309_p0, "grp_fu_309_p0");
    sc_trace(mVcdFile, tmp_29_fu_346_p3, "tmp_29_fu_346_p3");
    sc_trace(mVcdFile, tmp_29_cast_fu_370_p1, "tmp_29_cast_fu_370_p1");
    sc_trace(mVcdFile, tmp_33_fu_374_p2, "tmp_33_fu_374_p2");
    sc_trace(mVcdFile, max_variance_2_to_in_fu_485_p1, "max_variance_2_to_in_fu_485_p1");
    sc_trace(mVcdFile, max_variance_to_int_fu_502_p1, "max_variance_to_int_fu_502_p1");
    sc_trace(mVcdFile, tmp_1_fu_488_p4, "tmp_1_fu_488_p4");
    sc_trace(mVcdFile, tmp_38_fu_498_p1, "tmp_38_fu_498_p1");
    sc_trace(mVcdFile, notrhs_fu_526_p2, "notrhs_fu_526_p2");
    sc_trace(mVcdFile, notlhs_fu_520_p2, "notlhs_fu_520_p2");
    sc_trace(mVcdFile, tmp_3_fu_506_p4, "tmp_3_fu_506_p4");
    sc_trace(mVcdFile, tmp_39_fu_516_p1, "tmp_39_fu_516_p1");
    sc_trace(mVcdFile, notrhs1_fu_544_p2, "notrhs1_fu_544_p2");
    sc_trace(mVcdFile, notlhs1_fu_538_p2, "notlhs1_fu_538_p2");
    sc_trace(mVcdFile, tmp_5_fu_532_p2, "tmp_5_fu_532_p2");
    sc_trace(mVcdFile, tmp_6_fu_550_p2, "tmp_6_fu_550_p2");
    sc_trace(mVcdFile, tmp_7_fu_556_p2, "tmp_7_fu_556_p2");
    sc_trace(mVcdFile, tmp_9_fu_562_p2, "tmp_9_fu_562_p2");
    sc_trace(mVcdFile, tmp_42_fu_593_p3, "tmp_42_fu_593_p3");
    sc_trace(mVcdFile, tmp_45_cast_fu_617_p1, "tmp_45_cast_fu_617_p1");
    sc_trace(mVcdFile, tmp_43_fu_621_p2, "tmp_43_fu_621_p2");
    sc_trace(mVcdFile, tmp_44_fu_631_p1, "tmp_44_fu_631_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

thresholdOtsu::~thresholdOtsu() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete variance_U;
    delete histogram_U;
    delete mean_U;
    delete imageProcessing_fadd_32ns_32ns_32_5_full_dsp_1_U13;
    delete imageProcessing_fmul_32ns_32ns_32_4_max_dsp_1_U14;
    delete imageProcessing_sitofp_32ns_32_5_1_U15;
    delete imageProcessing_fcmp_32ns_32ns_1_1_1_U16;
}

void thresholdOtsu::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void thresholdOtsu::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void thresholdOtsu::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void thresholdOtsu::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_34_fu_418_p2.read()))) {
        i2_reg_221 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_446_p2.read(), ap_const_lv1_1))) {
        i2_reg_221 = i_6_reg_704.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_468_p2.read()))) {
        i5_reg_278 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_605_p2.read()))) {
        i5_reg_278 = i_7_reg_795.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_328_p2.read()))) {
        i_reg_165 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_358_p2.read(), ap_const_lv1_1))) {
        i_reg_165 = i_4_reg_652.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_34_fu_418_p2.read()))) {
        indvars_iv_reg_209 = ap_const_lv9_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_446_p2.read(), ap_const_lv1_1))) {
        indvars_iv_reg_209 = indvars_iv_next_fu_458_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_334_p2.read(), ap_const_lv1_1))) {
        invdar1_reg_187 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_406_p2.read()))) {
        invdar1_reg_187 = indvarinc1_fu_395_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_fu_406_p2.read()))) {
        invdar2_reg_198 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_34_fu_418_p2.read()))) {
        invdar2_reg_198 = indvarinc2_fu_412_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_328_p2.read()))) {
        invdar_reg_154 = indvarinc_fu_317_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_154 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_424_p2.read()))) {
        j3_reg_232 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        j3_reg_232 = j_5_reg_722.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_581_p2.read()))) {
        j6_reg_289 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        j6_reg_289 = j_6_reg_808.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_334_p2.read(), ap_const_lv1_0))) {
        j_reg_176 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_reg_176 = j_4_reg_665.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_424_p2.read(), ap_const_lv1_1))) {
        max_variance_reg_243 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        max_variance_reg_243 = max_variance_1_fu_567_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_424_p2.read(), ap_const_lv1_1))) {
        threshold_2_reg_267 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        threshold_2_reg_267 = i_5_reg_760.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_424_p2.read(), ap_const_lv1_1))) {
        threshold_reg_255 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        threshold_reg_255 = threshold_1_fu_574_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        histogram_addr_1_reg_675 =  (sc_lv<8>) (tmp_30_fu_384_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        histogram_load_reg_680 = histogram_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_4_reg_652 = i_4_fu_340_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        i_5_reg_760 = i_5_fu_474_p2.read();
        threshold_2_cast3_reg_752 = threshold_2_cast3_fu_464_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_6_reg_704 = i_6_fu_430_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        i_7_reg_795 = i_7_fu_587_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_4_reg_665 = j_4_fu_364_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_5_reg_722 = j_5_fu_452_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        j_6_reg_808 = j_6_fu_611_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        max_variance_2_reg_770 = variance_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_424_p2.read()))) {
        mean_addr_1_reg_709 =  (sc_lv<8>) (tmp_35_fu_436_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        mean_load_reg_742 = mean_q0.read();
        tmp_40_reg_737 = grp_fu_304_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_37_reg_732 = grp_fu_309_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond7_fu_334_p2.read(), ap_const_lv1_0))) {
        tmp_39_cast_reg_657 = tmp_39_cast_fu_354_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        tmp_41_reg_747 = grp_fu_300_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_581_p2.read()))) {
        tmp_44_cast_reg_800 = tmp_44_cast_fu_601_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        tmp_45_reg_823 = tmp_45_fu_635_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_605_p2.read()))) {
        tmp_49_cast_reg_813 = tmp_49_cast_fu_626_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tmp_8_reg_777 = tmp_8_fu_312_p2.read();
    }
}

void thresholdOtsu::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void thresholdOtsu::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void thresholdOtsu::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void thresholdOtsu::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void thresholdOtsu::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void thresholdOtsu::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void thresholdOtsu::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void thresholdOtsu::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void thresholdOtsu::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void thresholdOtsu::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void thresholdOtsu::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void thresholdOtsu::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void thresholdOtsu::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void thresholdOtsu::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void thresholdOtsu::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void thresholdOtsu::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void thresholdOtsu::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void thresholdOtsu::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void thresholdOtsu::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void thresholdOtsu::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void thresholdOtsu::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void thresholdOtsu::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void thresholdOtsu::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void thresholdOtsu::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void thresholdOtsu::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void thresholdOtsu::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void thresholdOtsu::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_581_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_581_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_dst_address0() {
    dst_address0 =  (sc_lv<18>) (tmp_49_cast_reg_813.read());
}

void thresholdOtsu::thread_dst_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        dst_ce0 = ap_const_logic_1;
    } else {
        dst_ce0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_dst_d0() {
    dst_d0 = tmp_45_reg_823.read();
}

void thresholdOtsu::thread_dst_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        dst_we0 = ap_const_logic_1;
    } else {
        dst_we0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_exitcond1_fu_581_p2() {
    exitcond1_fu_581_p2 = (!i5_reg_278.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i5_reg_278.read() == ap_const_lv10_200);
}

void thresholdOtsu::thread_exitcond2_fu_468_p2() {
    exitcond2_fu_468_p2 = (!threshold_2_reg_267.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(threshold_2_reg_267.read() == ap_const_lv9_100);
}

void thresholdOtsu::thread_exitcond3_fu_446_p2() {
    exitcond3_fu_446_p2 = (!j3_reg_232.read().is_01() || !indvars_iv_reg_209.read().is_01())? sc_lv<1>(): sc_lv<1>(j3_reg_232.read() == indvars_iv_reg_209.read());
}

void thresholdOtsu::thread_exitcond4_fu_424_p2() {
    exitcond4_fu_424_p2 = (!indvars_iv_reg_209.read().is_01() || !ap_const_lv9_101.is_01())? sc_lv<1>(): sc_lv<1>(indvars_iv_reg_209.read() == ap_const_lv9_101);
}

void thresholdOtsu::thread_exitcond6_fu_358_p2() {
    exitcond6_fu_358_p2 = (!j_reg_176.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_176.read() == ap_const_lv10_200);
}

void thresholdOtsu::thread_exitcond7_fu_334_p2() {
    exitcond7_fu_334_p2 = (!i_reg_165.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_165.read() == ap_const_lv10_200);
}

void thresholdOtsu::thread_exitcond_fu_605_p2() {
    exitcond_fu_605_p2 = (!j6_reg_289.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(j6_reg_289.read() == ap_const_lv10_200);
}

void thresholdOtsu::thread_grp_fu_309_p0() {
    grp_fu_309_p0 = esl_zext<32,9>(j3_reg_232.read());
}

void thresholdOtsu::thread_histogram_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        histogram_address0 = histogram_addr_1_reg_675.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        histogram_address0 =  (sc_lv<8>) (tmp_30_fu_384_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        histogram_address0 =  (sc_lv<8>) (tmp_fu_323_p1.read());
    } else {
        histogram_address0 = "XXXXXXXX";
    }
}

void thresholdOtsu::thread_histogram_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        histogram_ce0 = ap_const_logic_1;
    } else {
        histogram_ce0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_histogram_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        histogram_d0 = tmp_31_fu_389_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        histogram_d0 = ap_const_lv32_0;
    } else {
        histogram_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void thresholdOtsu::thread_histogram_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        histogram_we0 = ap_const_logic_1;
    } else {
        histogram_we0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_i_4_fu_340_p2() {
    i_4_fu_340_p2 = (!i_reg_165.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_165.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void thresholdOtsu::thread_i_5_fu_474_p2() {
    i_5_fu_474_p2 = (!threshold_2_reg_267.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(threshold_2_reg_267.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void thresholdOtsu::thread_i_6_fu_430_p2() {
    i_6_fu_430_p2 = (!i2_reg_221.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i2_reg_221.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void thresholdOtsu::thread_i_7_fu_587_p2() {
    i_7_fu_587_p2 = (!i5_reg_278.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i5_reg_278.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void thresholdOtsu::thread_indvarinc1_fu_395_p2() {
    indvarinc1_fu_395_p2 = (!invdar1_reg_187.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(invdar1_reg_187.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void thresholdOtsu::thread_indvarinc2_fu_412_p2() {
    indvarinc2_fu_412_p2 = (!invdar2_reg_198.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(invdar2_reg_198.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void thresholdOtsu::thread_indvarinc_fu_317_p2() {
    indvarinc_fu_317_p2 = (!invdar_reg_154.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(invdar_reg_154.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void thresholdOtsu::thread_indvars_iv_next_fu_458_p2() {
    indvars_iv_next_fu_458_p2 = (!indvars_iv_reg_209.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(indvars_iv_reg_209.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void thresholdOtsu::thread_j_4_fu_364_p2() {
    j_4_fu_364_p2 = (!j_reg_176.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_176.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void thresholdOtsu::thread_j_5_fu_452_p2() {
    j_5_fu_452_p2 = (!j3_reg_232.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j3_reg_232.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void thresholdOtsu::thread_j_6_fu_611_p2() {
    j_6_fu_611_p2 = (!j6_reg_289.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j6_reg_289.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void thresholdOtsu::thread_max_variance_1_fu_567_p3() {
    max_variance_1_fu_567_p3 = (!tmp_9_fu_562_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_9_fu_562_p2.read()[0].to_bool())? max_variance_2_reg_770.read(): max_variance_reg_243.read());
}

void thresholdOtsu::thread_max_variance_2_to_in_fu_485_p1() {
    max_variance_2_to_in_fu_485_p1 = max_variance_2_reg_770.read();
}

void thresholdOtsu::thread_max_variance_to_int_fu_502_p1() {
    max_variance_to_int_fu_502_p1 = max_variance_reg_243.read();
}

void thresholdOtsu::thread_mean_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        mean_address0 = mean_addr_1_reg_709.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        mean_address0 =  (sc_lv<8>) (tmp_28_fu_401_p1.read());
    } else {
        mean_address0 = "XXXXXXXX";
    }
}

void thresholdOtsu::thread_mean_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        mean_ce0 = ap_const_logic_1;
    } else {
        mean_ce0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_mean_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        mean_d0 = tmp_41_reg_747.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        mean_d0 = ap_const_lv32_0;
    } else {
        mean_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void thresholdOtsu::thread_mean_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        mean_we0 = ap_const_logic_1;
    } else {
        mean_we0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_notlhs1_fu_538_p2() {
    notlhs1_fu_538_p2 = (!tmp_3_fu_506_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_506_p4.read() != ap_const_lv8_FF);
}

void thresholdOtsu::thread_notlhs_fu_520_p2() {
    notlhs_fu_520_p2 = (!tmp_1_fu_488_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_488_p4.read() != ap_const_lv8_FF);
}

void thresholdOtsu::thread_notrhs1_fu_544_p2() {
    notrhs1_fu_544_p2 = (!tmp_39_fu_516_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_39_fu_516_p1.read() == ap_const_lv23_0);
}

void thresholdOtsu::thread_notrhs_fu_526_p2() {
    notrhs_fu_526_p2 = (!tmp_38_fu_498_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_38_fu_498_p1.read() == ap_const_lv23_0);
}

void thresholdOtsu::thread_src_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        src_address0 =  (sc_lv<18>) (tmp_49_cast_fu_626_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        src_address0 =  (sc_lv<18>) (tmp_40_cast_fu_379_p1.read());
    } else {
        src_address0 =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
    }
}

void thresholdOtsu::thread_src_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        src_ce0 = ap_const_logic_1;
    } else {
        src_ce0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_threshold_1_fu_574_p3() {
    threshold_1_fu_574_p3 = (!tmp_9_fu_562_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_9_fu_562_p2.read()[0].to_bool())? threshold_2_cast3_reg_752.read(): threshold_reg_255.read());
}

void thresholdOtsu::thread_threshold_2_cast3_fu_464_p1() {
    threshold_2_cast3_fu_464_p1 = esl_zext<32,9>(threshold_2_reg_267.read());
}

void thresholdOtsu::thread_tmp_1_fu_488_p4() {
    tmp_1_fu_488_p4 = max_variance_2_to_in_fu_485_p1.read().range(30, 23);
}

void thresholdOtsu::thread_tmp_28_fu_401_p1() {
    tmp_28_fu_401_p1 = esl_zext<64,8>(invdar1_reg_187.read());
}

void thresholdOtsu::thread_tmp_29_cast_fu_370_p1() {
    tmp_29_cast_fu_370_p1 = esl_zext<20,10>(j_reg_176.read());
}

void thresholdOtsu::thread_tmp_29_fu_346_p3() {
    tmp_29_fu_346_p3 = esl_concat<10,9>(i_reg_165.read(), ap_const_lv9_0);
}

void thresholdOtsu::thread_tmp_30_fu_384_p1() {
    tmp_30_fu_384_p1 = esl_zext<64,8>(src_q0.read());
}

void thresholdOtsu::thread_tmp_31_fu_389_p2() {
    tmp_31_fu_389_p2 = (!histogram_load_reg_680.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(histogram_load_reg_680.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void thresholdOtsu::thread_tmp_32_fu_406_p2() {
    tmp_32_fu_406_p2 = (!invdar1_reg_187.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(invdar1_reg_187.read() == ap_const_lv8_FF);
}

void thresholdOtsu::thread_tmp_33_fu_374_p2() {
    tmp_33_fu_374_p2 = (!tmp_39_cast_reg_657.read().is_01() || !tmp_29_cast_fu_370_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_39_cast_reg_657.read()) + sc_biguint<20>(tmp_29_cast_fu_370_p1.read()));
}

void thresholdOtsu::thread_tmp_34_fu_418_p2() {
    tmp_34_fu_418_p2 = (!invdar2_reg_198.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(invdar2_reg_198.read() == ap_const_lv8_FF);
}

void thresholdOtsu::thread_tmp_35_fu_436_p1() {
    tmp_35_fu_436_p1 = esl_zext<64,9>(i2_reg_221.read());
}

void thresholdOtsu::thread_tmp_36_fu_480_p1() {
    tmp_36_fu_480_p1 = esl_zext<64,9>(threshold_2_reg_267.read());
}

void thresholdOtsu::thread_tmp_38_fu_498_p1() {
    tmp_38_fu_498_p1 = max_variance_2_to_in_fu_485_p1.read().range(23-1, 0);
}

void thresholdOtsu::thread_tmp_39_cast_fu_354_p1() {
    tmp_39_cast_fu_354_p1 = esl_zext<20,19>(tmp_29_fu_346_p3.read());
}

void thresholdOtsu::thread_tmp_39_fu_516_p1() {
    tmp_39_fu_516_p1 = max_variance_to_int_fu_502_p1.read().range(23-1, 0);
}

void thresholdOtsu::thread_tmp_3_fu_506_p4() {
    tmp_3_fu_506_p4 = max_variance_to_int_fu_502_p1.read().range(30, 23);
}

void thresholdOtsu::thread_tmp_40_cast_fu_379_p1() {
    tmp_40_cast_fu_379_p1 = esl_zext<64,20>(tmp_33_fu_374_p2.read());
}

void thresholdOtsu::thread_tmp_42_fu_593_p3() {
    tmp_42_fu_593_p3 = esl_concat<10,9>(i5_reg_278.read(), ap_const_lv9_0);
}

void thresholdOtsu::thread_tmp_43_fu_621_p2() {
    tmp_43_fu_621_p2 = (!tmp_45_cast_fu_617_p1.read().is_01() || !tmp_44_cast_reg_800.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_45_cast_fu_617_p1.read()) + sc_biguint<20>(tmp_44_cast_reg_800.read()));
}

void thresholdOtsu::thread_tmp_44_cast_fu_601_p1() {
    tmp_44_cast_fu_601_p1 = esl_zext<20,19>(tmp_42_fu_593_p3.read());
}

void thresholdOtsu::thread_tmp_44_fu_631_p1() {
    tmp_44_fu_631_p1 = esl_zext<32,8>(src_q0.read());
}

void thresholdOtsu::thread_tmp_45_cast_fu_617_p1() {
    tmp_45_cast_fu_617_p1 = esl_zext<20,10>(j6_reg_289.read());
}

void thresholdOtsu::thread_tmp_45_fu_635_p2() {
    tmp_45_fu_635_p2 = (!tmp_44_fu_631_p1.read().is_01() || !threshold_reg_255.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_44_fu_631_p1.read()) > sc_bigint<32>(threshold_reg_255.read()));
}

void thresholdOtsu::thread_tmp_49_cast_fu_626_p1() {
    tmp_49_cast_fu_626_p1 = esl_zext<64,20>(tmp_43_fu_621_p2.read());
}

void thresholdOtsu::thread_tmp_5_fu_532_p2() {
    tmp_5_fu_532_p2 = (notrhs_fu_526_p2.read() | notlhs_fu_520_p2.read());
}

void thresholdOtsu::thread_tmp_6_fu_550_p2() {
    tmp_6_fu_550_p2 = (notrhs1_fu_544_p2.read() | notlhs1_fu_538_p2.read());
}

void thresholdOtsu::thread_tmp_7_fu_556_p2() {
    tmp_7_fu_556_p2 = (tmp_5_fu_532_p2.read() & tmp_6_fu_550_p2.read());
}

void thresholdOtsu::thread_tmp_9_fu_562_p2() {
    tmp_9_fu_562_p2 = (tmp_7_fu_556_p2.read() & tmp_8_reg_777.read());
}

void thresholdOtsu::thread_tmp_fu_323_p1() {
    tmp_fu_323_p1 = esl_zext<64,8>(invdar_reg_154.read());
}

void thresholdOtsu::thread_tmp_s_fu_328_p2() {
    tmp_s_fu_328_p2 = (!invdar_reg_154.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_154.read() == ap_const_lv8_FF);
}

void thresholdOtsu::thread_variance_address0() {
    variance_address0 =  (sc_lv<8>) (tmp_36_fu_480_p1.read());
}

void thresholdOtsu::thread_variance_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        variance_ce0 = ap_const_logic_1;
    } else {
        variance_ce0 = ap_const_logic_0;
    }
}

void thresholdOtsu::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_328_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond7_fu_334_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond6_fu_358_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_32_fu_406_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_34_fu_418_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond4_fu_424_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond3_fu_446_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_468_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_581_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_605_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<33>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

